{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///main.js","webpack:///webpack/bootstrap ade0229538eba6658140","webpack:///external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}","webpack:///./node_modules/pathfinding/src/core/DiagonalMovement.js","webpack:///external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack:///./src/widgets/BaseWidget.tsx","webpack:///./node_modules/pathfinding/src/core/Util.js","webpack:///./src/Toolkit.ts","webpack:///./src/models/BaseModel.ts","webpack:///./src/models/PointModel.ts","webpack:///./node_modules/pathfinding/src/core/Heuristic.js","webpack:///./src/models/NodeModel.ts","webpack:///./src/factories/AbstractFactory.ts","webpack:///./src/routing/PathFinding.ts","webpack:///./node_modules/heap/index.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinderBase.js","webpack:///./src/BaseEntity.ts","webpack:///./src/models/PortModel.ts","webpack:///./src/actions/BaseAction.ts","webpack:///./node_modules/pathfinding/src/core/Node.js","webpack:///./node_modules/pathfinding/src/finders/AStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiAStarFinder.js","webpack:///./src/models/LinkModel.ts","webpack:///./src/defaults/models/DefaultPortModel.ts","webpack:///./src/defaults/models/DefaultLinkModel.ts","webpack:///./src/defaults/models/DefaultLabelModel.tsx","webpack:///./src/models/LabelModel.ts","webpack:///./src/main.ts","webpack:///./src/models/DiagramModel.ts","webpack:///./src/defaults/factories/DefaultPortFactory.tsx","webpack:///./src/factories/AbstractPortFactory.ts","webpack:///./src/defaults/factories/DefaultLabelFactory.tsx","webpack:///./src/factories/AbstractLabelFactory.ts","webpack:///./src/defaults/widgets/DefaultLabelWidget.tsx","webpack:///./src/defaults/models/DefaultNodeModel.ts","webpack:///./src/defaults/widgets/DefaultLinkWidget.tsx","webpack:///./src/factories/AbstractLinkFactory.ts","webpack:///./src/defaults/widgets/DefaultNodeWidget.tsx","webpack:///./src/defaults/widgets/DefaultPortLabelWidget.tsx","webpack:///./src/widgets/PortWidget.tsx","webpack:///./src/factories/AbstractNodeFactory.ts","webpack:///./src/actions/MoveCanvasAction.ts","webpack:///./src/actions/MoveItemsAction.ts","webpack:///./src/actions/SelectingAction.ts","webpack:///./src/widgets/layers/LinkLayerWidget.tsx","webpack:///./src/widgets/LinkWidget.tsx","webpack:///./src/widgets/layers/NodeLayerWidget.tsx","webpack:///./src/widgets/NodeWidget.tsx","webpack:///./node_modules/closest/index.js","webpack:///./node_modules/matches-selector/index.js","webpack:///./node_modules/pathfinding/index.js","webpack:///./node_modules/pathfinding/src/PathFinding.js","webpack:///./node_modules/heap/lib/heap.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/pathfinding/src/core/Grid.js","webpack:///./node_modules/pathfinding/src/finders/BestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/DijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBestFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js","webpack:///./node_modules/pathfinding/src/finders/BiDijkstraFinder.js","webpack:///./node_modules/pathfinding/src/finders/IDAStarFinder.js","webpack:///./node_modules/pathfinding/src/finders/JumpPointFinder.js","webpack:///./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js","webpack:///./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js","webpack:///./node_modules/paths-js/path.js","webpack:///./src/DiagramEngine.ts","webpack:///./src/defaults/factories/DefaultLinkFactory.tsx","webpack:///./src/defaults/factories/DefaultNodeFactory.ts","webpack:///./src/widgets/DiagramWidget.tsx"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","DiagonalMovement","Always","Never","IfAtMostOneObstacle","OnlyWhenNoObstacles","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","create","__assign","assign","t","arguments","length","value","React","BaseWidget","_super","props","_this","className","bem","selector","baseClass","getClassName","getProps","extraProps","Component","backtrace","node","path","x","y","parent","push","reverse","biBacktrace","nodeA","nodeB","pathA","pathB","concat","pathLength","a","dx","dy","sum","Math","sqrt","interpolate","x0","y0","x1","y1","sx","sy","err","e2","abs","line","expandPath","coord0","coord1","interpolated","interpolatedLen","j","expanded","len","smoothenPath","grid","ex","ey","newPath","coord","testCoord","blocked","isWalkableAt","lastValidCoord","compressPath","lx","ly","ldx","ldy","sq","compressed","px","py","closest","PathFinding_1","Path","Toolkit","UID","TESTING","TESTING_UID","replace","r","random","toString","element","document","body","generateLinePath","firstPoint","lastPoint","generateCurvePath","curvy","isHorizontal","curvyX","curvyY","generateDynamicPath","pathCoords","moveto","ROUTING_SCALING_FACTOR","slice","forEach","coords","lineto","print","BaseEntity_1","_","BaseModel","type","id","selected","getParent","setParent","getSelectedEntities","isSelected","deSerialize","ob","engine","serialize","merge","getType","getID","setSelected","iterateListeners","listener","event","selectionChanged","remove","entityRemoved","BaseEntity","BaseModel_1","PointModel","link","points","isConnectedToPort","getPortForPoint","getLink","removePoint","updateLocation","getX","getY","isLocked","manhattan","euclidean","octile","F","SQRT2","chebyshev","max","NodeModel","nodeType","extras","ports","setPosition","oldX","oldY","port","getLinks","point","getPointForPort","entities","map","portOb","getPortFactory","getNewInstance","addPort","doClone","lookupTable","clone","getPortFromID","getPort","getPorts","removePort","updateDimensions","_a","width","height","AbstractFactory","PF","pathFinderInstance","JumpPointFinder","heuristic","Heuristic","diagonalMovement","PathFinding","diagramEngine","instance","calculateDirectPath","from","to","matrix","getCanvasMatrix","Grid","findPath","translateRoutingX","floor","translateRoutingY","calculateLinkStartEndCoords","startIndex","findIndex","endIndex","pathToStart","pathToEnd","start","end","calculateDynamicPath","routingMatrix","dynamicPath","Util","default","JumpPointFinderBase","opt","trackJumpRecursion","Heap","startX","startY","endX","endY","openList","f","startNode","getNodeAt","endNode","g","opened","empty","pop","closed","_identifySuccessors","neighbors","neighbor","jumpPoint","jx","jy","ng","jumpNode","_findNeighbors","_jump","h","updateItem","Toolkit_1","listeners","locked","clearListeners","data","cb","firing","entity","stopPropagation","removeListener","addListener","uid","setLocked","lockChanged","PortModel","maximumLinks","links","parentNode","getNode","getName","getMaximumLinks","setMaximumLinks","removeLink","addLink","createLinkModel","isFinite","numberOfLinks","size","values","updateCoords","canLinkToPort","BaseAction","mouseX","mouseY","ms","Date","getTime","Node","walkable","undefined","AStarFinder","allowDiagonal","dontCrossCorners","weight","getNeighbors","BiAStarFinder","cmp","startOpenList","endOpenList","PointModel_1","LinkModel","linkType","sourcePort","targetPort","labels","label","labelOb","getLabelFactory","addLabel","target","setTargetPort","source","setSourcePort","setPoints","getPoints","isLastPoint","getPointIndex","indexOf","getPointModel","getFirstPoint","getLastPoint","sourcePortChanged","getSourcePort","getTargetPort","targetPortChanged","addPoint","generatePoint","pointModel","splice","removePointsBefore","removePointsAfter","removeMiddlePoints","index","PortModel_1","DefaultLinkModel_1","DefaultPortModel","isInput","in","DefaultLinkModel","LinkModel_1","DefaultLabelModel_1","LabelModel_1","color","curvyness","LabelModel","DefaultLabelModel","setLabel","setWidth","widthChanged","setColor","colorChanged","offsetY","offsetX","__export","NodeModel_1","DiagramModel","nodes","zoom","rendered","gridSize","setGridSize","gridUpdated","getGridPosition","pos","deSerializeDiagram","nodeOb","getNodeFactory","addNode","linkOb","getLinkFactory","serializeDiagram","clearSelection","ignore","getSelectedItems","filters","_i","isArray","items","flatMap","uniq","filter","item","includes","setZoomLevel","zoomUpdated","setOffset","offsetUpdated","setOffsetX","setOffsetY","getOffsetY","getOffsetX","getZoomLevel","addAll","models","model","linksUpdated","isCreated","removeNode","nodesUpdated","getNodes","DefaultPortModel_1","AbstractPortFactory_1","DefaultPortFactory","initialConfig","AbstractPortFactory","AbstractFactory_1","apply","AbstractLabelFactory_1","DefaultLabelWidget_1","DefaultLabelFactory","generateReactWidget","createElement","DefaultLabelWidget","AbstractLabelFactory","BaseWidget_1","render","DefaultNodeModel","addInPort","addOutPort","getInPorts","portModel","getOutPorts","DefaultLinkWidget","addPointToLink","shiftKey","isModelLocked","getMaxNumberPointsPerLink","getRelativeMousePoint","forceUpdate","pointAdded","findPathAndRelativePositionToRenderLabel","lengths","refPaths","getTotalLength","labelPosition","reduce","previousValue","currentValue","pathIndex","position","calculateLabelPosition","refLabels","labelDimensions","offsetWidth","offsetHeight","pathCentre","getPointAtLength","labelCoordinates","setAttribute","state","isSmartRoutingEnabled","pathFinding","calculateAllLabelPosition","componentDidUpdate","window","requestAnimationFrame","bind","componentDidMount","pointIndex","key","cx","cy","onMouseLeave","setState","onMouseEnter","data-id","data-linkid","opacity","generateLabel","canvas","ref","getFactoryForLabel","generateLink","Bottom","cloneElement","getFactoryForLink","generateLinkSegment","Top","strokeLinecap","strokeOpacity","strokeWidth","onContextMenu","preventDefault","isSmartRoutingApplicable","nodesRendered","paths","directPathCoords","first","last","getRoutingMatrix","smartLink","simplifiedPath","onMouseDown","xOrY","pointLeft","pointRight","this_1","data-point","labelModel","defaultProps","smooth","AbstractLinkFactory","DefaultPortLabelWidget_1","DefaultNodeWidget","generatePort","DefaultPortLabel","style","background","PortWidget_1","PortWidget","data-name","data-nodeid","AbstractNodeFactory","BaseAction_1","MoveCanvasAction","diagramModel","initialOffsetX","initialOffsetY","MoveItemsAction","moved","enableRepaintEntities","getDiagramModel","selectedItems","selectionModels","initialX","initialY","SelectingAction","mouseX2","mouseY2","getBoxDimensions","left","top","right","bottom","containsElement","z","dimensions","LinkWidget_1","LinkLayerWidget","transform","linksThatHaveInitiallyRendered","portCenter","getPortCenter","portCoords","getPortCoords","generatedLink","generateWidgetForLink","Error","LinkWidget","shouldComponentUpdate","canEntityRepaint","children","NodeWidget_1","NodeLayerWidget","updateNodeDimensions","getNodeDimensions","NodeWidget","generateWidgetForNode","matches","checkYoSelf","match","el","vendor","querySelectorAll","proto","Element","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","BestFirstFinder","BreadthFirstFinder","DijkstraFinder","BiBestFirstFinder","BiBreadthFirstFinder","BiDijkstraFinder","IDAStarFinder","defaultCmp","heapify","heappop","heappush","heappushpop","heapreplace","insort","min","nlargest","nsmallest","_siftdown","_siftup","lo","hi","mid","array","lastelt","returnitem","_ref","_len","_ref1","_results","_results1","_j","elem","result","sort","los","startpos","newitem","parentpos","childpos","endpos","rightpos","pushpop","peek","contains","clear","heap","toArray","insert","front","has","copy","webpackPolyfill","deprecate","width_or_matrix","_buildNodes","isInside","setWalkableAt","s0","d0","s1","d1","s2","d2","s3","d3","thisNodes","newGrid","newNodes","orig","shift","by","trackRecursion","timeLimit","Infinity","route","nodesVisited","startTime","cost","search","cutoff","depth","k","neighbour","neighbours","retainCount","tested","cutOff","JPFNeverMoveDiagonally","JPFAlwaysMoveDiagonally","JPFMoveDiagonallyIfNoObstacles","JPFMoveDiagonallyIfAtMostOneObstacle","neighborNodes","neighborNode","isNextWalkable","isTopWalkable","isBottomWalkable","isRightWalkable","isLeftWalkable","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","Symbol","iterator","next","done","TypeError","init","_instructions","areEqualPoints","_ref3","_ref2","a1","b1","_ref32","a2","b2","trimZeros","string","char","charAt","substr","round","number","digits","str","toFixed","printInstrunction","_ref4","command","params","param","join","_ref5","_ref6","_ref62","prevX","prevY","verbosify","keys","args","plus","instruction","hlineto","vlineto","closepath","curveto","x2","y2","smoothcurveto","qcurveto","smoothqcurveto","arc","rx","ry","xrot","largeArcFlag","sweepFlag","ps","prev","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","instructions","connect","newInstructions","unshift","DiagramModel_1","main_1","DefaultPortFactory_1","DefaultLabelFactory_1","DiagramEngine","canvasMatrix","hAdjustmentFactor","vAdjustmentFactor","calculateMatrixDimensions","allNodesCoords","allLinks","allPortsCoords","allPointsCoords","minX","minBy","maxXElement","maxBy","maxX","minY","maxYElement","maxY","ceil","markNodes","markMatrixPoint","markPorts","nodeFactories","linkFactories","portFactories","labelFactories","paintableWidgets","installDefaultFactories","registerNodeFactory","DefaultNodeFactory","registerLinkFactory","DefaultLinkFactory","registerPortFactory","registerLabelFactory","repaintCanvas","clearRepaintEntities","recalculatePortsVisually","baseModel","setCanvas","setDiagramModel","getNodeFactories","getLinkFactories","getLabelFactories","labelFactoriesUpdated","portFactoriesUpdated","nodeFactoriesUpdated","linkFactoriesUpdated","getFactoryForNode","linkFactory","nodeFactory","getRelativePoint","clientX","clientY","canvasRect","getBoundingClientRect","getNodeElement","querySelector","getNodePortElement","sourceElement","sourceRect","rel","nodeElement","nodeRect","maxNumberPointsPerLink","setMaxNumberPointsPerLink","smartRouting","setSmartRoutingStatus","status","calculateCanvasMatrix","canvasWidth","canvasHeight","matrixWidth","matrixHeight","range","fill","calculateRoutingMatrix","cloneDeep","zoomToFit","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","DefaultLinkWidget_1","AbstractLinkFactory_1","widget","stroke","DefaultNodeModel_1","DefaultNodeWidget_1","AbstractNodeFactory_1","LinkLayerWidget_1","NodeLayerWidget_1","MoveCanvasAction_1","MoveItemsAction_1","SelectingAction_1","DiagramWidget","onKeyUpPointer","onMouseMove","onMouseUp","action","wasMoved","renderedNodes","windowListener","diagramEngineListener","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","componentWillUpdate","onKeyUp","addEventListener","production","focus","getMouseElement","getAttribute","fireAction","actionStillFiring","stopFiringAction","shouldSkipEvent","actionStoppedFiring","startFiringAction","actionStartedFiring","relative","allSelected","amountX_1","amountY_1","amountZoom_1","allowCanvasTranslation","deleteKeys","keyCode","linkConnected","newLink","allowLooseLinks","some","drawSelectionBox","onWheel","allowCanvasZoom","oldZoomFactor","scrollDelta","inverseZoom","deltaY","ctrlKey","boundingRect","currentTarget","widthDiff","heightDiff"],"mappings":"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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));\n\telse\n\t\troot[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"_\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"storm-react-diagrams\"] = factory(require(\"lodash\"), require(\"react\"));\n\telse\n\t\troot[\"storm-react-diagrams\"] = factory(root[\"_\"], root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 25);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar BaseWidget = /** @class */ (function (_super) {\n    __extends(BaseWidget, _super);\n    function BaseWidget(name, props) {\n        var _this = _super.call(this, props) || this;\n        _this.className = name;\n        return _this;\n    }\n    BaseWidget.prototype.bem = function (selector) {\n        return (this.props.baseClass || this.className) + selector + \" \";\n    };\n    BaseWidget.prototype.getClassName = function () {\n        return ((this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\"));\n    };\n    BaseWidget.prototype.getProps = function () {\n        return __assign({}, (this.props.extraProps || {}), { className: this.getClassName() });\n    };\n    return BaseWidget;\n}(React.Component));\nexports.BaseWidget = BaseWidget;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// tslint:disable no-bitwise\nvar closest = __webpack_require__(46);\nvar PathFinding_1 = __webpack_require__(11);\nvar Path = __webpack_require__(65);\n/**\n * @author Dylan Vorster\n */\nvar Toolkit = /** @class */ (function () {\n    function Toolkit() {\n    }\n    /**\n     * Generats a unique ID (thanks Stack overflow :3)\n     * @returns {String}\n     */\n    Toolkit.UID = function () {\n        if (Toolkit.TESTING) {\n            Toolkit.TESTING_UID++;\n            return \"\" + Toolkit.TESTING_UID;\n        }\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (Math.random() * 16) | 0;\n            var v = c === \"x\" ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    };\n    /**\n     * Finds the closest element as a polyfill\n     *\n     * @param  {Element} element  [description]\n     * @param  {string}  selector [description]\n     */\n    Toolkit.closest = function (element, selector) {\n        if (document.body.closest) {\n            return element.closest(selector);\n        }\n        return closest(element, selector);\n    };\n    Toolkit.generateLinePath = function (firstPoint, lastPoint) {\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" L \" + lastPoint.x + \",\" + lastPoint.y;\n    };\n    Toolkit.generateCurvePath = function (firstPoint, lastPoint, curvy) {\n        if (curvy === void 0) { curvy = 0; }\n        var isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n        var curvyX = isHorizontal ? curvy : 0;\n        var curvyY = isHorizontal ? 0 : curvy;\n        return \"M\" + firstPoint.x + \",\" + firstPoint.y + \" C \" + (firstPoint.x + curvyX) + \",\" + (firstPoint.y + curvyY) + \"\\n    \" + (lastPoint.x - curvyX) + \",\" + (lastPoint.y - curvyY) + \" \" + lastPoint.x + \",\" + lastPoint.y;\n    };\n    Toolkit.generateDynamicPath = function (pathCoords) {\n        var path = Path();\n        path = path.moveto(pathCoords[0][0] * PathFinding_1.ROUTING_SCALING_FACTOR, pathCoords[0][1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        pathCoords.slice(1).forEach(function (coords) {\n            path = path.lineto(coords[0] * PathFinding_1.ROUTING_SCALING_FACTOR, coords[1] * PathFinding_1.ROUTING_SCALING_FACTOR);\n        });\n        return path.print();\n    };\n    Toolkit.TESTING = false;\n    Toolkit.TESTING_UID = 0;\n    return Toolkit;\n}());\nexports.Toolkit = Toolkit;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseEntity_1 = __webpack_require__(14);\nvar _ = __webpack_require__(0);\n/**\n * @author Dylan Vorster\n */\nvar BaseModel = /** @class */ (function (_super) {\n    __extends(BaseModel, _super);\n    function BaseModel(type, id) {\n        var _this = _super.call(this, id) || this;\n        _this.type = type;\n        _this.selected = false;\n        return _this;\n    }\n    BaseModel.prototype.getParent = function () {\n        return this.parent;\n    };\n    BaseModel.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    BaseModel.prototype.getSelectedEntities = function () {\n        if (this.isSelected()) {\n            return [this];\n        }\n        return [];\n    };\n    BaseModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.type = ob.type;\n        this.selected = ob.selected;\n    };\n    BaseModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            type: this.type,\n            selected: this.selected\n        });\n    };\n    BaseModel.prototype.getType = function () {\n        return this.type;\n    };\n    BaseModel.prototype.getID = function () {\n        return this.id;\n    };\n    BaseModel.prototype.isSelected = function () {\n        return this.selected;\n    };\n    BaseModel.prototype.setSelected = function (selected) {\n        if (selected === void 0) { selected = true; }\n        this.selected = selected;\n        this.iterateListeners(function (listener, event) {\n            if (listener.selectionChanged) {\n                listener.selectionChanged(__assign({}, event, { isSelected: selected }));\n            }\n        });\n    };\n    BaseModel.prototype.remove = function () {\n        this.iterateListeners(function (listener, event) {\n            if (listener.entityRemoved) {\n                listener.entityRemoved(event);\n            }\n        });\n    };\n    return BaseModel;\n}(BaseEntity_1.BaseEntity));\nexports.BaseModel = BaseModel;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseModel_1 = __webpack_require__(6);\nvar _ = __webpack_require__(0);\nvar PointModel = /** @class */ (function (_super) {\n    __extends(PointModel, _super);\n    function PointModel(link, points) {\n        var _this = _super.call(this) || this;\n        _this.x = points.x;\n        _this.y = points.y;\n        _this.parent = link;\n        return _this;\n    }\n    PointModel.prototype.getSelectedEntities = function () {\n        if (_super.prototype.isSelected.call(this) && !this.isConnectedToPort()) {\n            return [this];\n        }\n        return [];\n    };\n    PointModel.prototype.isConnectedToPort = function () {\n        return this.parent.getPortForPoint(this) !== null;\n    };\n    PointModel.prototype.getLink = function () {\n        return this.getParent();\n    };\n    PointModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.x = ob.x;\n        this.y = ob.y;\n    };\n    PointModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            x: this.x,\n            y: this.y\n        });\n    };\n    PointModel.prototype.remove = function () {\n        //clear references\n        if (this.parent) {\n            this.parent.removePoint(this);\n        }\n        _super.prototype.remove.call(this);\n    };\n    PointModel.prototype.updateLocation = function (points) {\n        this.x = points.x;\n        this.y = points.y;\n    };\n    PointModel.prototype.getX = function () {\n        return this.x;\n    };\n    PointModel.prototype.getY = function () {\n        return this.y;\n    };\n    PointModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n    };\n    return PointModel;\n}(BaseModel_1.BaseModel));\nexports.PointModel = PointModel;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseModel_1 = __webpack_require__(6);\nvar _ = __webpack_require__(0);\nvar NodeModel = /** @class */ (function (_super) {\n    __extends(NodeModel, _super);\n    function NodeModel(nodeType, id) {\n        if (nodeType === void 0) { nodeType = \"default\"; }\n        var _this = _super.call(this, nodeType, id) || this;\n        _this.x = 0;\n        _this.y = 0;\n        _this.extras = {};\n        _this.ports = {};\n        return _this;\n    }\n    NodeModel.prototype.setPosition = function (x, y) {\n        //store position\n        var oldX = this.x;\n        var oldY = this.y;\n        _.forEach(this.ports, function (port) {\n            _.forEach(port.getLinks(), function (link) {\n                var point = link.getPointForPort(port);\n                point.x = point.x + x - oldX;\n                point.y = point.y + y - oldY;\n            });\n        });\n        this.x = x;\n        this.y = y;\n    };\n    NodeModel.prototype.getSelectedEntities = function () {\n        var entities = _super.prototype.getSelectedEntities.call(this);\n        // add the points of each link that are selected here\n        if (this.isSelected()) {\n            _.forEach(this.ports, function (port) {\n                entities = entities.concat(_.map(port.getLinks(), function (link) {\n                    return link.getPointForPort(port);\n                }));\n            });\n        }\n        return entities;\n    };\n    NodeModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.x = ob.x;\n        this.y = ob.y;\n        this.extras = ob.extras;\n        //deserialize ports\n        _.forEach(ob.ports, function (port) {\n            var portOb = engine.getPortFactory(port.type).getNewInstance();\n            portOb.deSerialize(port, engine);\n            _this.addPort(portOb);\n        });\n    };\n    NodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            x: this.x,\n            y: this.y,\n            extras: this.extras,\n            ports: _.map(this.ports, function (port) {\n                return port.serialize();\n            })\n        });\n    };\n    NodeModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) { lookupTable = {}; }\n        // also clone the ports\n        clone.ports = {};\n        _.forEach(this.ports, function (port) {\n            clone.addPort(port.clone(lookupTable));\n        });\n    };\n    NodeModel.prototype.remove = function () {\n        _super.prototype.remove.call(this);\n        _.forEach(this.ports, function (port) {\n            _.forEach(port.getLinks(), function (link) {\n                link.remove();\n            });\n        });\n    };\n    NodeModel.prototype.getPortFromID = function (id) {\n        for (var i in this.ports) {\n            if (this.ports[i].id === id) {\n                return this.ports[i];\n            }\n        }\n        return null;\n    };\n    NodeModel.prototype.getPort = function (name) {\n        return this.ports[name];\n    };\n    NodeModel.prototype.getPorts = function () {\n        return this.ports;\n    };\n    NodeModel.prototype.removePort = function (port) {\n        //clear the parent node reference\n        if (this.ports[port.name]) {\n            this.ports[port.name].setParent(null);\n            delete this.ports[port.name];\n        }\n    };\n    NodeModel.prototype.addPort = function (port) {\n        port.setParent(this);\n        this.ports[port.name] = port;\n        return port;\n    };\n    NodeModel.prototype.updateDimensions = function (_a) {\n        var width = _a.width, height = _a.height;\n        this.width = width;\n        this.height = height;\n    };\n    return NodeModel;\n}(BaseModel_1.BaseModel));\nexports.NodeModel = NodeModel;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractFactory = /** @class */ (function () {\n    function AbstractFactory(name) {\n        this.type = name;\n    }\n    AbstractFactory.prototype.getType = function () {\n        return this.type;\n    };\n    return AbstractFactory;\n}());\nexports.AbstractFactory = AbstractFactory;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PF = __webpack_require__(48);\n/*\nit can be very expensive to calculate routes when every single pixel on the canvas\nis individually represented. Using the factor below, we combine values in order\nto achieve the best trade-off between accuracy and performance.\n*/\nexports.ROUTING_SCALING_FACTOR = 5;\nvar pathFinderInstance = new PF.JumpPointFinder({\n    heuristic: PF.Heuristic.manhattan,\n    diagonalMovement: PF.DiagonalMovement.Never\n});\nvar PathFinding = /** @class */ (function () {\n    function PathFinding(diagramEngine) {\n        this.instance = pathFinderInstance;\n        this.diagramEngine = diagramEngine;\n    }\n    /**\n     * Taking as argument a fully unblocked walking matrix, this method\n     * finds a direct path from point A to B.\n     */\n    PathFinding.prototype.calculateDirectPath = function (from, to) {\n        var matrix = this.diagramEngine.getCanvasMatrix();\n        var grid = new PF.Grid(matrix);\n        return pathFinderInstance.findPath(this.diagramEngine.translateRoutingX(Math.floor(from.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(from.y / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingX(Math.floor(to.x / exports.ROUTING_SCALING_FACTOR)), this.diagramEngine.translateRoutingY(Math.floor(to.y / exports.ROUTING_SCALING_FACTOR)), grid);\n    };\n    /**\n     * Using @link{#calculateDirectPath}'s result as input, we here\n     * determine the first walkable point found in the matrix that includes\n     * blocked paths.\n     */\n    PathFinding.prototype.calculateLinkStartEndCoords = function (matrix, path) {\n        var startIndex = path.findIndex(function (point) { return matrix[point[1]][point[0]] === 0; });\n        var endIndex = path.length -\n            1 -\n            path\n                .slice()\n                .reverse()\n                .findIndex(function (point) { return matrix[point[1]][point[0]] === 0; });\n        // are we trying to create a path exclusively through blocked areas?\n        // if so, let's fallback to the linear routing\n        if (startIndex === -1 || endIndex === -1) {\n            return undefined;\n        }\n        var pathToStart = path.slice(0, startIndex);\n        var pathToEnd = path.slice(endIndex);\n        return {\n            start: {\n                x: path[startIndex][0],\n                y: path[startIndex][1]\n            },\n            end: {\n                x: path[endIndex][0],\n                y: path[endIndex][1]\n            },\n            pathToStart: pathToStart,\n            pathToEnd: pathToEnd\n        };\n    };\n    /**\n     * Puts everything together: merges the paths from/to the centre of the ports,\n     * with the path calculated around other elements.\n     */\n    PathFinding.prototype.calculateDynamicPath = function (routingMatrix, start, end, pathToStart, pathToEnd) {\n        var _this = this;\n        // generate the path based on the matrix with obstacles\n        var grid = new PF.Grid(routingMatrix);\n        var dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n        // aggregate everything to have the calculated path ready for rendering\n        var pathCoords = pathToStart\n            .concat(dynamicPath, pathToEnd)\n            .map(function (coords) { return [\n            _this.diagramEngine.translateRoutingX(coords[0], true),\n            _this.diagramEngine.translateRoutingY(coords[1], true)\n        ]; });\n        return PF.Util.compressPath(pathCoords);\n    };\n    return PathFinding;\n}());\nexports.default = PathFinding;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(50);\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = __webpack_require__(12);\r\nvar Util       = __webpack_require__(4);\r\nvar Heuristic  = __webpack_require__(8);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Toolkit_1 = __webpack_require__(5);\nvar _ = __webpack_require__(0);\nvar BaseEntity = /** @class */ (function () {\n    function BaseEntity(id) {\n        this.listeners = {};\n        this.id = id || Toolkit_1.Toolkit.UID();\n        this.locked = false;\n    }\n    BaseEntity.prototype.getID = function () {\n        return this.id;\n    };\n    BaseEntity.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) { lookupTable = {}; }\n        /*noop*/\n    };\n    BaseEntity.prototype.clone = function (lookupTable) {\n        if (lookupTable === void 0) { lookupTable = {}; }\n        // try and use an existing clone first\n        if (lookupTable[this.id]) {\n            return lookupTable[this.id];\n        }\n        var clone = _.clone(this);\n        clone.id = Toolkit_1.Toolkit.UID();\n        clone.clearListeners();\n        lookupTable[this.id] = clone;\n        this.doClone(lookupTable, clone);\n        return clone;\n    };\n    BaseEntity.prototype.clearListeners = function () {\n        this.listeners = {};\n    };\n    BaseEntity.prototype.deSerialize = function (data, engine) {\n        this.id = data.id;\n    };\n    BaseEntity.prototype.serialize = function () {\n        return {\n            id: this.id\n        };\n    };\n    BaseEntity.prototype.iterateListeners = function (cb) {\n        var event = {\n            id: Toolkit_1.Toolkit.UID(),\n            firing: true,\n            entity: this,\n            stopPropagation: function () {\n                event.firing = false;\n            }\n        };\n        for (var i in this.listeners) {\n            if (this.listeners.hasOwnProperty(i)) {\n                // propagation stopped\n                if (!event.firing) {\n                    return;\n                }\n                cb(this.listeners[i], event);\n            }\n        }\n    };\n    BaseEntity.prototype.removeListener = function (listener) {\n        if (this.listeners[listener]) {\n            delete this.listeners[listener];\n            return true;\n        }\n        return false;\n    };\n    BaseEntity.prototype.addListener = function (listener) {\n        var uid = Toolkit_1.Toolkit.UID();\n        this.listeners[uid] = listener;\n        return uid;\n    };\n    BaseEntity.prototype.isLocked = function () {\n        return this.locked;\n    };\n    BaseEntity.prototype.setLocked = function (locked) {\n        if (locked === void 0) { locked = true; }\n        this.locked = locked;\n        this.iterateListeners(function (listener, event) {\n            if (listener.lockChanged) {\n                listener.lockChanged(__assign({}, event, { locked: locked }));\n            }\n        });\n    };\n    return BaseEntity;\n}());\nexports.BaseEntity = BaseEntity;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseModel_1 = __webpack_require__(6);\nvar _ = __webpack_require__(0);\nvar PortModel = /** @class */ (function (_super) {\n    __extends(PortModel, _super);\n    function PortModel(name, type, id, maximumLinks) {\n        var _this = _super.call(this, type, id) || this;\n        _this.name = name;\n        _this.links = {};\n        _this.maximumLinks = maximumLinks;\n        return _this;\n    }\n    PortModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.name = ob.name;\n        this.maximumLinks = ob.maximumLinks;\n    };\n    PortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            name: this.name,\n            parentNode: this.parent.id,\n            links: _.map(this.links, function (link) {\n                return link.id;\n            }),\n            maximumLinks: this.maximumLinks\n        });\n    };\n    PortModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) { lookupTable = {}; }\n        clone.links = {};\n        clone.parentNode = this.getParent().clone(lookupTable);\n    };\n    PortModel.prototype.getNode = function () {\n        return this.getParent();\n    };\n    PortModel.prototype.getName = function () {\n        return this.name;\n    };\n    PortModel.prototype.getMaximumLinks = function () {\n        return this.maximumLinks;\n    };\n    PortModel.prototype.setMaximumLinks = function (maximumLinks) {\n        this.maximumLinks = maximumLinks;\n    };\n    PortModel.prototype.removeLink = function (link) {\n        delete this.links[link.getID()];\n    };\n    PortModel.prototype.addLink = function (link) {\n        this.links[link.getID()] = link;\n    };\n    PortModel.prototype.getLinks = function () {\n        return this.links;\n    };\n    PortModel.prototype.createLinkModel = function () {\n        if (_.isFinite(this.maximumLinks)) {\n            var numberOfLinks = _.size(this.links);\n            if (this.maximumLinks === 1 && numberOfLinks >= 1) {\n                return _.values(this.links)[0];\n            }\n            else if (numberOfLinks >= this.maximumLinks) {\n                return null;\n            }\n        }\n        return null;\n    };\n    PortModel.prototype.updateCoords = function (_a) {\n        var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    };\n    PortModel.prototype.canLinkToPort = function (port) {\n        return true;\n    };\n    PortModel.prototype.isLocked = function () {\n        return _super.prototype.isLocked.call(this) || this.getParent().isLocked();\n    };\n    return PortModel;\n}(BaseModel_1.BaseModel));\nexports.PortModel = PortModel;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseAction = /** @class */ (function () {\n    function BaseAction(mouseX, mouseY) {\n        this.mouseX = mouseX;\n        this.mouseY = mouseY;\n        this.ms = new Date().getTime();\n    }\n    return BaseAction;\n}());\nexports.BaseAction = BaseAction;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Heap       = __webpack_require__(12);\r\nvar Util       = __webpack_require__(4);\r\nvar Heuristic  = __webpack_require__(8);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Heap       = __webpack_require__(12);\r\nvar Util       = __webpack_require__(4);\r\nvar Heuristic  = __webpack_require__(8);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseModel_1 = __webpack_require__(6);\nvar PointModel_1 = __webpack_require__(7);\nvar _ = __webpack_require__(0);\nvar LinkModel = /** @class */ (function (_super) {\n    __extends(LinkModel, _super);\n    function LinkModel(linkType, id) {\n        if (linkType === void 0) { linkType = \"default\"; }\n        var _this = _super.call(this, linkType, id) || this;\n        _this.points = [new PointModel_1.PointModel(_this, { x: 0, y: 0 }), new PointModel_1.PointModel(_this, { x: 0, y: 0 })];\n        _this.extras = {};\n        _this.sourcePort = null;\n        _this.targetPort = null;\n        _this.labels = [];\n        return _this;\n    }\n    LinkModel.prototype.deSerialize = function (ob, engine) {\n        var _this = this;\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.extras = ob.extras;\n        this.points = _.map(ob.points || [], function (point) {\n            var p = new PointModel_1.PointModel(_this, { x: point.x, y: point.y });\n            p.deSerialize(point, engine);\n            return p;\n        });\n        //deserialize labels\n        _.forEach(ob.labels || [], function (label) {\n            var labelOb = engine.getLabelFactory(label.type).getNewInstance();\n            labelOb.deSerialize(label, engine);\n            _this.addLabel(labelOb);\n        });\n        if (ob.target) {\n            this.setTargetPort(this.getParent()\n                .getNode(ob.target)\n                .getPortFromID(ob.targetPort));\n        }\n        if (ob.source) {\n            this.setSourcePort(this.getParent()\n                .getNode(ob.source)\n                .getPortFromID(ob.sourcePort));\n        }\n    };\n    LinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            source: this.sourcePort ? this.sourcePort.getParent().id : null,\n            sourcePort: this.sourcePort ? this.sourcePort.id : null,\n            target: this.targetPort ? this.targetPort.getParent().id : null,\n            targetPort: this.targetPort ? this.targetPort.id : null,\n            points: _.map(this.points, function (point) {\n                return point.serialize();\n            }),\n            extras: this.extras,\n            labels: _.map(this.labels, function (label) {\n                return label.serialize();\n            })\n        });\n    };\n    LinkModel.prototype.doClone = function (lookupTable, clone) {\n        if (lookupTable === void 0) { lookupTable = {}; }\n        clone.setPoints(_.map(this.getPoints(), function (point) {\n            return point.clone(lookupTable);\n        }));\n        if (this.sourcePort) {\n            clone.setSourcePort(this.sourcePort.clone(lookupTable));\n        }\n        if (this.targetPort) {\n            clone.setTargetPort(this.targetPort.clone(lookupTable));\n        }\n    };\n    LinkModel.prototype.remove = function () {\n        if (this.sourcePort) {\n            this.sourcePort.removeLink(this);\n        }\n        if (this.targetPort) {\n            this.targetPort.removeLink(this);\n        }\n        _super.prototype.remove.call(this);\n    };\n    LinkModel.prototype.isLastPoint = function (point) {\n        var index = this.getPointIndex(point);\n        return index === this.points.length - 1;\n    };\n    LinkModel.prototype.getPointIndex = function (point) {\n        return this.points.indexOf(point);\n    };\n    LinkModel.prototype.getPointModel = function (id) {\n        for (var i = 0; i < this.points.length; i++) {\n            if (this.points[i].id === id) {\n                return this.points[i];\n            }\n        }\n        return null;\n    };\n    LinkModel.prototype.getPortForPoint = function (point) {\n        if (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n            return this.sourcePort;\n        }\n        if (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n            return this.targetPort;\n        }\n        return null;\n    };\n    LinkModel.prototype.getPointForPort = function (port) {\n        if (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n            return this.getFirstPoint();\n        }\n        if (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n            return this.getLastPoint();\n        }\n        return null;\n    };\n    LinkModel.prototype.getFirstPoint = function () {\n        return this.points[0];\n    };\n    LinkModel.prototype.getLastPoint = function () {\n        return this.points[this.points.length - 1];\n    };\n    LinkModel.prototype.setSourcePort = function (port) {\n        if (port !== null) {\n            port.addLink(this);\n        }\n        else if (this.sourcePort !== null) {\n            this.sourcePort.removeLink(this);\n        }\n        else {\n            return;\n        }\n        this.sourcePort = port;\n        this.iterateListeners(function (listener, event) {\n            if (listener.sourcePortChanged) {\n                listener.sourcePortChanged(__assign({}, event, { port: port }));\n            }\n        });\n    };\n    LinkModel.prototype.getSourcePort = function () {\n        return this.sourcePort;\n    };\n    LinkModel.prototype.getTargetPort = function () {\n        return this.targetPort;\n    };\n    LinkModel.prototype.setTargetPort = function (port) {\n        if (port !== null) {\n            port.addLink(this);\n        }\n        else if (this.targetPort !== null) {\n            this.targetPort.removeLink(this);\n        }\n        else {\n            return;\n        }\n        this.targetPort = port;\n        this.iterateListeners(function (listener, event) {\n            if (listener.targetPortChanged) {\n                listener.targetPortChanged(__assign({}, event, { port: port }));\n            }\n        });\n    };\n    LinkModel.prototype.point = function (x, y) {\n        return this.addPoint(this.generatePoint(x, y));\n    };\n    LinkModel.prototype.addLabel = function (label) {\n        label.setParent(this);\n        this.labels.push(label);\n    };\n    LinkModel.prototype.getPoints = function () {\n        return this.points;\n    };\n    LinkModel.prototype.setPoints = function (points) {\n        var _this = this;\n        _.forEach(points, function (point) {\n            point.setParent(_this);\n        });\n        this.points = points;\n    };\n    LinkModel.prototype.removePoint = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel), 1);\n    };\n    LinkModel.prototype.removePointsBefore = function (pointModel) {\n        this.points.splice(0, this.getPointIndex(pointModel));\n    };\n    LinkModel.prototype.removePointsAfter = function (pointModel) {\n        this.points.splice(this.getPointIndex(pointModel) + 1);\n    };\n    LinkModel.prototype.removeMiddlePoints = function () {\n        if (this.points.length > 2) {\n            this.points.splice(0, this.points.length - 2);\n        }\n    };\n    LinkModel.prototype.addPoint = function (pointModel, index) {\n        if (index === void 0) { index = 1; }\n        pointModel.setParent(this);\n        this.points.splice(index, 0, pointModel);\n        return pointModel;\n    };\n    LinkModel.prototype.generatePoint = function (x, y) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        return new PointModel_1.PointModel(this, { x: x, y: y });\n    };\n    return LinkModel;\n}(BaseModel_1.BaseModel));\nexports.LinkModel = LinkModel;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\nvar PortModel_1 = __webpack_require__(15);\nvar DefaultLinkModel_1 = __webpack_require__(22);\nvar DefaultPortModel = /** @class */ (function (_super) {\n    __extends(DefaultPortModel, _super);\n    function DefaultPortModel(isInput, name, label, id) {\n        if (label === void 0) { label = null; }\n        var _this = _super.call(this, name, \"default\", id) || this;\n        _this.in = isInput;\n        _this.label = label || name;\n        return _this;\n    }\n    DefaultPortModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n        this.in = object.in;\n        this.label = object.label;\n    };\n    DefaultPortModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            in: this.in,\n            label: this.label\n        });\n    };\n    DefaultPortModel.prototype.link = function (port) {\n        var link = this.createLinkModel();\n        link.setSourcePort(this);\n        link.setTargetPort(port);\n        return link;\n    };\n    DefaultPortModel.prototype.canLinkToPort = function (port) {\n        if (port instanceof DefaultPortModel) {\n            return this.in !== port.in;\n        }\n        return true;\n    };\n    DefaultPortModel.prototype.createLinkModel = function () {\n        var link = _super.prototype.createLinkModel.call(this);\n        return link || new DefaultLinkModel_1.DefaultLinkModel();\n    };\n    return DefaultPortModel;\n}(PortModel_1.PortModel));\nexports.DefaultPortModel = DefaultPortModel;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @author Dylan Vorster\n */\nvar LinkModel_1 = __webpack_require__(20);\nvar _ = __webpack_require__(0);\nvar DefaultLabelModel_1 = __webpack_require__(23);\nvar LabelModel_1 = __webpack_require__(24);\nvar DefaultLinkModel = /** @class */ (function (_super) {\n    __extends(DefaultLinkModel, _super);\n    function DefaultLinkModel(type) {\n        if (type === void 0) { type = \"default\"; }\n        var _this = _super.call(this, type) || this;\n        _this.color = \"rgba(255,255,255,0.5)\";\n        _this.width = 3;\n        _this.curvyness = 50;\n        return _this;\n    }\n    DefaultLinkModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            width: this.width,\n            color: this.color,\n            curvyness: this.curvyness\n        });\n    };\n    DefaultLinkModel.prototype.deSerialize = function (ob, engine) {\n        _super.prototype.deSerialize.call(this, ob, engine);\n        this.color = ob.color;\n        this.width = ob.width;\n        this.curvyness = ob.curvyness;\n    };\n    DefaultLinkModel.prototype.addLabel = function (label) {\n        if (label instanceof LabelModel_1.LabelModel) {\n            return _super.prototype.addLabel.call(this, label);\n        }\n        var labelOb = new DefaultLabelModel_1.DefaultLabelModel();\n        labelOb.setLabel(label);\n        return _super.prototype.addLabel.call(this, labelOb);\n    };\n    DefaultLinkModel.prototype.setWidth = function (width) {\n        this.width = width;\n        this.iterateListeners(function (listener, event) {\n            if (listener.widthChanged) {\n                listener.widthChanged(__assign({}, event, { width: width }));\n            }\n        });\n    };\n    DefaultLinkModel.prototype.setColor = function (color) {\n        this.color = color;\n        this.iterateListeners(function (listener, event) {\n            if (listener.colorChanged) {\n                listener.colorChanged(__assign({}, event, { color: color }));\n            }\n        });\n    };\n    return DefaultLinkModel;\n}(LinkModel_1.LinkModel));\nexports.DefaultLinkModel = DefaultLinkModel;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar LabelModel_1 = __webpack_require__(24);\nvar DefaultLabelModel = /** @class */ (function (_super) {\n    __extends(DefaultLabelModel, _super);\n    function DefaultLabelModel() {\n        var _this = _super.call(this, \"default\") || this;\n        _this.offsetY = -23;\n        return _this;\n    }\n    DefaultLabelModel.prototype.setLabel = function (label) {\n        this.label = label;\n    };\n    return DefaultLabelModel;\n}(LabelModel_1.LabelModel));\nexports.DefaultLabelModel = DefaultLabelModel;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseModel_1 = __webpack_require__(6);\nvar LabelModel = /** @class */ (function (_super) {\n    __extends(LabelModel, _super);\n    function LabelModel(type, id) {\n        var _this = _super.call(this, type, id) || this;\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        return _this;\n    }\n    return LabelModel;\n}(BaseModel_1.BaseModel));\nexports.LabelModel = LabelModel;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @author Dylan Vorster\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(5));\n__export(__webpack_require__(14));\n__export(__webpack_require__(66));\n__export(__webpack_require__(32));\n__export(__webpack_require__(21));\n__export(__webpack_require__(22));\n__export(__webpack_require__(23));\n__export(__webpack_require__(67));\n__export(__webpack_require__(68));\n__export(__webpack_require__(27));\n__export(__webpack_require__(29));\n__export(__webpack_require__(33));\n__export(__webpack_require__(31));\n__export(__webpack_require__(35));\n__export(__webpack_require__(36));\n__export(__webpack_require__(10));\n__export(__webpack_require__(30));\n__export(__webpack_require__(34));\n__export(__webpack_require__(38));\n__export(__webpack_require__(28));\n__export(__webpack_require__(11));\n__export(__webpack_require__(16));\n__export(__webpack_require__(39));\n__export(__webpack_require__(40));\n__export(__webpack_require__(41));\n__export(__webpack_require__(6));\n__export(__webpack_require__(26));\n__export(__webpack_require__(20));\n__export(__webpack_require__(9));\n__export(__webpack_require__(7));\n__export(__webpack_require__(15));\n__export(__webpack_require__(24));\n__export(__webpack_require__(69));\n__export(__webpack_require__(43));\n__export(__webpack_require__(45));\n__export(__webpack_require__(37));\n__export(__webpack_require__(3));\n__export(__webpack_require__(42));\n__export(__webpack_require__(44));\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseEntity_1 = __webpack_require__(14);\nvar _ = __webpack_require__(0);\nvar LinkModel_1 = __webpack_require__(20);\nvar NodeModel_1 = __webpack_require__(9);\nvar PortModel_1 = __webpack_require__(15);\nvar PointModel_1 = __webpack_require__(7);\n/**\n *\n */\nvar DiagramModel = /** @class */ (function (_super) {\n    __extends(DiagramModel, _super);\n    function DiagramModel() {\n        var _this = _super.call(this) || this;\n        _this.links = {};\n        _this.nodes = {};\n        _this.offsetX = 0;\n        _this.offsetY = 0;\n        _this.zoom = 100;\n        _this.rendered = false;\n        _this.gridSize = 0;\n        return _this;\n    }\n    DiagramModel.prototype.setGridSize = function (size) {\n        if (size === void 0) { size = 0; }\n        this.gridSize = size;\n        this.iterateListeners(function (listener, event) {\n            if (listener.gridUpdated) {\n                listener.gridUpdated(__assign({}, event, { size: size }));\n            }\n        });\n    };\n    DiagramModel.prototype.getGridPosition = function (pos) {\n        if (this.gridSize === 0) {\n            return pos;\n        }\n        return this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n    };\n    DiagramModel.prototype.deSerializeDiagram = function (object, diagramEngine) {\n        var _this = this;\n        this.deSerialize(object, diagramEngine);\n        this.offsetX = object.offsetX;\n        this.offsetY = object.offsetY;\n        this.zoom = object.zoom;\n        this.gridSize = object.gridSize;\n        // deserialize nodes\n        _.forEach(object.nodes, function (node) {\n            var nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n            nodeOb.setParent(_this);\n            nodeOb.deSerialize(node, diagramEngine);\n            _this.addNode(nodeOb);\n        });\n        // deserialze links\n        _.forEach(object.links, function (link) {\n            var linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n            linkOb.setParent(_this);\n            linkOb.deSerialize(link, diagramEngine);\n            _this.addLink(linkOb);\n        });\n    };\n    DiagramModel.prototype.serializeDiagram = function () {\n        return _.merge(this.serialize(), {\n            offsetX: this.offsetX,\n            offsetY: this.offsetY,\n            zoom: this.zoom,\n            gridSize: this.gridSize,\n            links: _.map(this.links, function (link) {\n                return link.serialize();\n            }),\n            nodes: _.map(this.nodes, function (node) {\n                return node.serialize();\n            })\n        });\n    };\n    DiagramModel.prototype.clearSelection = function (ignore) {\n        if (ignore === void 0) { ignore = null; }\n        _.forEach(this.getSelectedItems(), function (element) {\n            if (ignore && ignore.getID() === element.getID()) {\n                return;\n            }\n            element.setSelected(false); //TODO dont fire the listener\n        });\n    };\n    DiagramModel.prototype.getSelectedItems = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        if (!Array.isArray(filters)) {\n            filters = [filters];\n        }\n        var items = [];\n        // run through nodes\n        items = items.concat(_.flatMap(this.nodes, function (node) {\n            return node.getSelectedEntities();\n        }));\n        // find all the links\n        items = items.concat(_.flatMap(this.links, function (link) {\n            return link.getSelectedEntities();\n        }));\n        //find all points\n        items = items.concat(_.flatMap(this.links, function (link) {\n            return _.flatMap(link.points, function (point) {\n                return point.getSelectedEntities();\n            });\n        }));\n        items = _.uniq(items);\n        if (filters.length > 0) {\n            items = _.filter(_.uniq(items), function (item) {\n                if (_.includes(filters, \"node\") && item instanceof NodeModel_1.NodeModel) {\n                    return true;\n                }\n                if (_.includes(filters, \"link\") && item instanceof LinkModel_1.LinkModel) {\n                    return true;\n                }\n                if (_.includes(filters, \"port\") && item instanceof PortModel_1.PortModel) {\n                    return true;\n                }\n                if (_.includes(filters, \"point\") && item instanceof PointModel_1.PointModel) {\n                    return true;\n                }\n                return false;\n            });\n        }\n        return items;\n    };\n    DiagramModel.prototype.setZoomLevel = function (zoom) {\n        this.zoom = zoom;\n        this.iterateListeners(function (listener, event) {\n            if (listener.zoomUpdated) {\n                listener.zoomUpdated(__assign({}, event, { zoom: zoom }));\n            }\n        });\n    };\n    DiagramModel.prototype.setOffset = function (offsetX, offsetY) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n            if (listener.offsetUpdated) {\n                listener.offsetUpdated(__assign({}, event, { offsetX: offsetX, offsetY: offsetY }));\n            }\n        });\n    };\n    DiagramModel.prototype.setOffsetX = function (offsetX) {\n        var _this = this;\n        this.offsetX = offsetX;\n        this.iterateListeners(function (listener, event) {\n            if (listener.offsetUpdated) {\n                listener.offsetUpdated(__assign({}, event, { offsetX: offsetX, offsetY: _this.offsetY }));\n            }\n        });\n    };\n    DiagramModel.prototype.setOffsetY = function (offsetY) {\n        var _this = this;\n        this.offsetY = offsetY;\n        this.iterateListeners(function (listener, event) {\n            if (listener.offsetUpdated) {\n                listener.offsetUpdated(__assign({}, event, { offsetX: _this.offsetX, offsetY: _this.offsetY }));\n            }\n        });\n    };\n    DiagramModel.prototype.getOffsetY = function () {\n        return this.offsetY;\n    };\n    DiagramModel.prototype.getOffsetX = function () {\n        return this.offsetX;\n    };\n    DiagramModel.prototype.getZoomLevel = function () {\n        return this.zoom;\n    };\n    DiagramModel.prototype.getNode = function (node) {\n        if (node instanceof NodeModel_1.NodeModel) {\n            return node;\n        }\n        if (!this.nodes[node]) {\n            return null;\n        }\n        return this.nodes[node];\n    };\n    DiagramModel.prototype.getLink = function (link) {\n        if (link instanceof LinkModel_1.LinkModel) {\n            return link;\n        }\n        if (!this.links[link]) {\n            return null;\n        }\n        return this.links[link];\n    };\n    DiagramModel.prototype.addAll = function () {\n        var _this = this;\n        var models = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            models[_i] = arguments[_i];\n        }\n        _.forEach(models, function (model) {\n            if (model instanceof LinkModel_1.LinkModel) {\n                _this.addLink(model);\n            }\n            else if (model instanceof NodeModel_1.NodeModel) {\n                _this.addNode(model);\n            }\n        });\n        return models;\n    };\n    DiagramModel.prototype.addLink = function (link) {\n        var _this = this;\n        link.addListener({\n            entityRemoved: function () {\n                _this.removeLink(link);\n            }\n        });\n        this.links[link.getID()] = link;\n        this.iterateListeners(function (listener, event) {\n            if (listener.linksUpdated) {\n                listener.linksUpdated(__assign({}, event, { link: link, isCreated: true }));\n            }\n        });\n        return link;\n    };\n    DiagramModel.prototype.addNode = function (node) {\n        var _this = this;\n        node.addListener({\n            entityRemoved: function () {\n                _this.removeNode(node);\n            }\n        });\n        this.nodes[node.getID()] = node;\n        this.iterateListeners(function (listener, event) {\n            if (listener.nodesUpdated) {\n                listener.nodesUpdated(__assign({}, event, { node: node, isCreated: true }));\n            }\n        });\n        return node;\n    };\n    DiagramModel.prototype.removeLink = function (link) {\n        link = this.getLink(link);\n        delete this.links[link.getID()];\n        this.iterateListeners(function (listener, event) {\n            if (listener.linksUpdated) {\n                listener.linksUpdated(__assign({}, event, { link: link, isCreated: false }));\n            }\n        });\n    };\n    DiagramModel.prototype.removeNode = function (node) {\n        node = this.getNode(node);\n        delete this.nodes[node.getID()];\n        this.iterateListeners(function (listener, event) {\n            if (listener.nodesUpdated) {\n                listener.nodesUpdated(__assign({}, event, { node: node, isCreated: false }));\n            }\n        });\n    };\n    DiagramModel.prototype.getLinks = function () {\n        return this.links;\n    };\n    DiagramModel.prototype.getNodes = function () {\n        return this.nodes;\n    };\n    return DiagramModel;\n}(BaseEntity_1.BaseEntity));\nexports.DiagramModel = DiagramModel;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultPortModel_1 = __webpack_require__(21);\nvar AbstractPortFactory_1 = __webpack_require__(28);\nvar DefaultPortFactory = /** @class */ (function (_super) {\n    __extends(DefaultPortFactory, _super);\n    function DefaultPortFactory() {\n        return _super.call(this, \"default\") || this;\n    }\n    DefaultPortFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultPortModel_1.DefaultPortModel(true, \"unknown\");\n    };\n    return DefaultPortFactory;\n}(AbstractPortFactory_1.AbstractPortFactory));\nexports.DefaultPortFactory = DefaultPortFactory;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractFactory_1 = __webpack_require__(10);\nvar AbstractPortFactory = /** @class */ (function (_super) {\n    __extends(AbstractPortFactory, _super);\n    function AbstractPortFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractPortFactory;\n}(AbstractFactory_1.AbstractFactory));\nexports.AbstractPortFactory = AbstractPortFactory;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar AbstractLabelFactory_1 = __webpack_require__(30);\nvar DefaultLabelModel_1 = __webpack_require__(23);\nvar DefaultLabelWidget_1 = __webpack_require__(31);\n/**\n * @author Dylan Vorster\n */\nvar DefaultLabelFactory = /** @class */ (function (_super) {\n    __extends(DefaultLabelFactory, _super);\n    function DefaultLabelFactory() {\n        return _super.call(this, \"default\") || this;\n    }\n    DefaultLabelFactory.prototype.generateReactWidget = function (diagramEngine, label) {\n        return React.createElement(DefaultLabelWidget_1.DefaultLabelWidget, { model: label });\n    };\n    DefaultLabelFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLabelModel_1.DefaultLabelModel();\n    };\n    return DefaultLabelFactory;\n}(AbstractLabelFactory_1.AbstractLabelFactory));\nexports.DefaultLabelFactory = DefaultLabelFactory;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractFactory_1 = __webpack_require__(10);\nvar AbstractLabelFactory = /** @class */ (function (_super) {\n    __extends(AbstractLabelFactory, _super);\n    function AbstractLabelFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractLabelFactory;\n}(AbstractFactory_1.AbstractFactory));\nexports.AbstractLabelFactory = AbstractLabelFactory;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar BaseWidget_1 = __webpack_require__(3);\nvar DefaultLabelWidget = /** @class */ (function (_super) {\n    __extends(DefaultLabelWidget, _super);\n    function DefaultLabelWidget(props) {\n        return _super.call(this, \"srd-default-label\", props) || this;\n    }\n    DefaultLabelWidget.prototype.render = function () {\n        return React.createElement(\"div\", __assign({}, this.getProps()), this.props.model.label);\n    };\n    return DefaultLabelWidget;\n}(BaseWidget_1.BaseWidget));\nexports.DefaultLabelWidget = DefaultLabelWidget;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultPortModel_1 = __webpack_require__(21);\nvar _ = __webpack_require__(0);\nvar NodeModel_1 = __webpack_require__(9);\nvar Toolkit_1 = __webpack_require__(5);\n/**\n * @author Dylan Vorster\n */\nvar DefaultNodeModel = /** @class */ (function (_super) {\n    __extends(DefaultNodeModel, _super);\n    function DefaultNodeModel(name, color) {\n        if (name === void 0) { name = \"Untitled\"; }\n        if (color === void 0) { color = \"rgb(0,192,255)\"; }\n        var _this = _super.call(this, \"default\") || this;\n        _this.name = name;\n        _this.color = color;\n        return _this;\n    }\n    DefaultNodeModel.prototype.addInPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(true, Toolkit_1.Toolkit.UID(), label));\n    };\n    DefaultNodeModel.prototype.addOutPort = function (label) {\n        return this.addPort(new DefaultPortModel_1.DefaultPortModel(false, Toolkit_1.Toolkit.UID(), label));\n    };\n    DefaultNodeModel.prototype.deSerialize = function (object, engine) {\n        _super.prototype.deSerialize.call(this, object, engine);\n        this.name = object.name;\n        this.color = object.color;\n    };\n    DefaultNodeModel.prototype.serialize = function () {\n        return _.merge(_super.prototype.serialize.call(this), {\n            name: this.name,\n            color: this.color\n        });\n    };\n    DefaultNodeModel.prototype.getInPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n            return portModel.in;\n        });\n    };\n    DefaultNodeModel.prototype.getOutPorts = function () {\n        return _.filter(this.ports, function (portModel) {\n            return !portModel.in;\n        });\n    };\n    return DefaultNodeModel;\n}(NodeModel_1.NodeModel));\nexports.DefaultNodeModel = DefaultNodeModel;\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar PointModel_1 = __webpack_require__(7);\nvar Toolkit_1 = __webpack_require__(5);\nvar PathFinding_1 = __webpack_require__(11);\nvar _ = __webpack_require__(0);\nvar BaseWidget_1 = __webpack_require__(3);\nvar DefaultLinkWidget = /** @class */ (function (_super) {\n    __extends(DefaultLinkWidget, _super);\n    function DefaultLinkWidget(props) {\n        var _this = _super.call(this, \"srd-default-link\", props) || this;\n        _this.addPointToLink = function (event, index) {\n            if (!event.shiftKey &&\n                !_this.props.diagramEngine.isModelLocked(_this.props.link) &&\n                _this.props.link.points.length - 1 <= _this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n                var point = new PointModel_1.PointModel(_this.props.link, _this.props.diagramEngine.getRelativeMousePoint(event));\n                point.setSelected(true);\n                _this.forceUpdate();\n                _this.props.link.addPoint(point, index);\n                _this.props.pointAdded(point, event);\n            }\n        };\n        _this.findPathAndRelativePositionToRenderLabel = function (index) {\n            // an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n            var lengths = _this.refPaths.map(function (path) { return path.getTotalLength(); });\n            // calculate the point where we want to display the label\n            var labelPosition = lengths.reduce(function (previousValue, currentValue) { return previousValue + currentValue; }, 0) *\n                (index / (_this.props.link.labels.length + 1));\n            // find the path where the label will be rendered and calculate the relative position\n            var pathIndex = 0;\n            while (pathIndex < _this.refPaths.length) {\n                if (labelPosition - lengths[pathIndex] < 0) {\n                    return {\n                        path: _this.refPaths[pathIndex],\n                        position: labelPosition\n                    };\n                }\n                // keep searching\n                labelPosition -= lengths[pathIndex];\n                pathIndex++;\n            }\n        };\n        _this.calculateLabelPosition = function (label, index) {\n            if (!_this.refLabels[label.id]) {\n                // no label? nothing to do here\n                return;\n            }\n            var _a = _this.findPathAndRelativePositionToRenderLabel(index), path = _a.path, position = _a.position;\n            var labelDimensions = {\n                width: _this.refLabels[label.id].offsetWidth,\n                height: _this.refLabels[label.id].offsetHeight\n            };\n            var pathCentre = path.getPointAtLength(position);\n            var labelCoordinates = {\n                x: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n                y: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n            };\n            _this.refLabels[label.id].setAttribute(\"style\", \"transform: translate(\" + labelCoordinates.x + \"px, \" + labelCoordinates.y + \"px);\");\n        };\n        _this.refLabels = {};\n        _this.refPaths = [];\n        _this.state = {\n            selected: false\n        };\n        if (props.diagramEngine.isSmartRoutingEnabled()) {\n            _this.pathFinding = new PathFinding_1.default(_this.props.diagramEngine);\n        }\n        return _this;\n    }\n    DefaultLinkWidget.prototype.calculateAllLabelPosition = function () {\n        var _this = this;\n        _.forEach(this.props.link.labels, function (label, index) {\n            _this.calculateLabelPosition(label, index + 1);\n        });\n    };\n    DefaultLinkWidget.prototype.componentDidUpdate = function () {\n        if (this.props.link.labels.length > 0) {\n            window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n    };\n    DefaultLinkWidget.prototype.componentDidMount = function () {\n        if (this.props.link.labels.length > 0) {\n            window.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n        }\n    };\n    DefaultLinkWidget.prototype.generatePoint = function (pointIndex) {\n        var _this = this;\n        var x = this.props.link.points[pointIndex].x;\n        var y = this.props.link.points[pointIndex].y;\n        return (React.createElement(\"g\", { key: \"point-\" + this.props.link.points[pointIndex].id },\n            React.createElement(\"circle\", { cx: x, cy: y, r: 5, className: \"point \" +\n                    this.bem(\"__point\") +\n                    (this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\") }),\n            React.createElement(\"circle\", { onMouseLeave: function () {\n                    _this.setState({ selected: false });\n                }, onMouseEnter: function () {\n                    _this.setState({ selected: true });\n                }, \"data-id\": this.props.link.points[pointIndex].id, \"data-linkid\": this.props.link.id, cx: x, cy: y, r: 15, opacity: 0, className: \"point \" + this.bem(\"__point\") })));\n    };\n    DefaultLinkWidget.prototype.generateLabel = function (label) {\n        var _this = this;\n        var canvas = this.props.diagramEngine.canvas;\n        return (React.createElement(\"foreignObject\", { key: label.id, className: this.bem(\"__label\"), width: canvas.offsetWidth, height: canvas.offsetHeight },\n            React.createElement(\"div\", { ref: function (ref) { return (_this.refLabels[label.id] = ref); } }, this.props.diagramEngine\n                .getFactoryForLabel(label)\n                .generateReactWidget(this.props.diagramEngine, label))));\n    };\n    DefaultLinkWidget.prototype.generateLink = function (path, extraProps, id) {\n        var _this = this;\n        var props = this.props;\n        var Bottom = React.cloneElement(props.diagramEngine.getFactoryForLink(this.props.link).generateLinkSegment(this.props.link, this, this.state.selected || this.props.link.isSelected(), path), {\n            ref: function (ref) { return ref && _this.refPaths.push(ref); }\n        });\n        var Top = React.cloneElement(Bottom, __assign({}, extraProps, { strokeLinecap: \"round\", onMouseLeave: function () {\n                _this.setState({ selected: false });\n            }, onMouseEnter: function () {\n                _this.setState({ selected: true });\n            }, ref: null, \"data-linkid\": this.props.link.getID(), strokeOpacity: this.state.selected ? 0.1 : 0, strokeWidth: 20, onContextMenu: function () {\n                if (!_this.props.diagramEngine.isModelLocked(_this.props.link)) {\n                    event.preventDefault();\n                    _this.props.link.remove();\n                }\n            } }));\n        return (React.createElement(\"g\", { key: \"link-\" + id },\n            Bottom,\n            Top));\n    };\n    /**\n     * Smart routing is only applicable when all conditions below are true:\n     * - smart routing is set to true on the engine\n     * - current link is between two nodes (not between a node and an empty point)\n     * - no custom points exist along the line\n     */\n    DefaultLinkWidget.prototype.isSmartRoutingApplicable = function () {\n        var _a = this.props, diagramEngine = _a.diagramEngine, link = _a.link;\n        if (!diagramEngine.isSmartRoutingEnabled()) {\n            return false;\n        }\n        if (link.points.length !== 2) {\n            return false;\n        }\n        if (link.sourcePort === null || link.targetPort === null) {\n            return false;\n        }\n        return true;\n    };\n    DefaultLinkWidget.prototype.render = function () {\n        var _this = this;\n        var diagramEngine = this.props.diagramEngine;\n        if (!diagramEngine.nodesRendered) {\n            return null;\n        }\n        //ensure id is present for all points on the path\n        var points = this.props.link.points;\n        var paths = [];\n        if (this.isSmartRoutingApplicable()) {\n            // first step: calculate a direct path between the points being linked\n            var directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n            var routingMatrix = diagramEngine.getRoutingMatrix();\n            // now we need to extract, from the routing matrix, the very first walkable points\n            // so they can be used as origin and destination of the link to be created\n            var smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n            if (smartLink) {\n                var start = smartLink.start, end = smartLink.end, pathToStart = smartLink.pathToStart, pathToEnd = smartLink.pathToEnd;\n                // second step: calculate a path avoiding hitting other elements\n                var simplifiedPath = this.pathFinding.calculateDynamicPath(routingMatrix, start, end, pathToStart, pathToEnd);\n                paths.push(\n                //smooth: boolean, extraProps: any, id: string | number, firstPoint: PointModel, lastPoint: PointModel\n                this.generateLink(Toolkit_1.Toolkit.generateDynamicPath(simplifiedPath), {\n                    onMouseDown: function (event) {\n                        _this.addPointToLink(event, 1);\n                    }\n                }, \"0\"));\n            }\n        }\n        // true when smart routing was skipped or not enabled.\n        // See @link{#isSmartRoutingApplicable()}.\n        if (paths.length === 0) {\n            if (points.length === 2) {\n                var isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n                var xOrY = isHorizontal ? \"x\" : \"y\";\n                //draw the smoothing\n                //if the points are too close, just draw a straight line\n                var margin = 50;\n                if (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n                    margin = 5;\n                }\n                var pointLeft = points[0];\n                var pointRight = points[1];\n                //some defensive programming to make sure the smoothing is\n                //always in the right direction\n                if (pointLeft[xOrY] > pointRight[xOrY]) {\n                    pointLeft = points[1];\n                    pointRight = points[0];\n                }\n                paths.push(this.generateLink(Toolkit_1.Toolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness), {\n                    onMouseDown: function (event) {\n                        _this.addPointToLink(event, 1);\n                    }\n                }, \"0\"));\n                // draw the link as dangeling\n                if (this.props.link.targetPort === null) {\n                    paths.push(this.generatePoint(1));\n                }\n            }\n            else {\n                var _loop_1 = function (j) {\n                    paths.push(this_1.generateLink(Toolkit_1.Toolkit.generateLinePath(points[j], points[j + 1]), {\n                        \"data-linkid\": this_1.props.link.id,\n                        \"data-point\": j,\n                        onMouseDown: function (event) {\n                            _this.addPointToLink(event, j + 1);\n                        }\n                    }, j));\n                };\n                var this_1 = this;\n                //draw the multiple anchors and complex line instead\n                for (var j = 0; j < points.length - 1; j++) {\n                    _loop_1(j);\n                }\n                //render the circles\n                for (var i = 1; i < points.length - 1; i++) {\n                    paths.push(this.generatePoint(i));\n                }\n                if (this.props.link.targetPort === null) {\n                    paths.push(this.generatePoint(points.length - 1));\n                }\n            }\n        }\n        this.refPaths = [];\n        return (React.createElement(\"g\", __assign({}, this.getProps()),\n            paths,\n            _.map(this.props.link.labels, function (labelModel) {\n                return _this.generateLabel(labelModel);\n            })));\n    };\n    DefaultLinkWidget.defaultProps = {\n        color: \"black\",\n        width: 3,\n        link: null,\n        engine: null,\n        smooth: false,\n        diagramEngine: null\n    };\n    return DefaultLinkWidget;\n}(BaseWidget_1.BaseWidget));\nexports.DefaultLinkWidget = DefaultLinkWidget;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractFactory_1 = __webpack_require__(10);\nvar AbstractLinkFactory = /** @class */ (function (_super) {\n    __extends(AbstractLinkFactory, _super);\n    function AbstractLinkFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractLinkFactory;\n}(AbstractFactory_1.AbstractFactory));\nexports.AbstractLinkFactory = AbstractLinkFactory;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar _ = __webpack_require__(0);\nvar DefaultPortLabelWidget_1 = __webpack_require__(36);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar DefaultNodeWidget = /** @class */ (function (_super) {\n    __extends(DefaultNodeWidget, _super);\n    function DefaultNodeWidget(props) {\n        var _this = _super.call(this, \"srd-default-node\", props) || this;\n        _this.state = {};\n        return _this;\n    }\n    DefaultNodeWidget.prototype.generatePort = function (port) {\n        return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, { model: port, key: port.id });\n    };\n    DefaultNodeWidget.prototype.render = function () {\n        return (React.createElement(\"div\", __assign({}, this.getProps(), { style: { background: this.props.node.color } }),\n            React.createElement(\"div\", { className: this.bem(\"__title\") },\n                React.createElement(\"div\", { className: this.bem(\"__name\") }, this.props.node.name)),\n            React.createElement(\"div\", { className: this.bem(\"__ports\") },\n                React.createElement(\"div\", { className: this.bem(\"__in\") }, _.map(this.props.node.getInPorts(), this.generatePort.bind(this))),\n                React.createElement(\"div\", { className: this.bem(\"__out\") }, _.map(this.props.node.getOutPorts(), this.generatePort.bind(this))))));\n    };\n    return DefaultNodeWidget;\n}(BaseWidget_1.BaseWidget));\nexports.DefaultNodeWidget = DefaultNodeWidget;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar PortWidget_1 = __webpack_require__(37);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar DefaultPortLabel = /** @class */ (function (_super) {\n    __extends(DefaultPortLabel, _super);\n    function DefaultPortLabel(props) {\n        return _super.call(this, \"srd-default-port\", props) || this;\n    }\n    DefaultPortLabel.prototype.getClassName = function () {\n        return _super.prototype.getClassName.call(this) + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n    };\n    DefaultPortLabel.prototype.render = function () {\n        var port = React.createElement(PortWidget_1.PortWidget, { node: this.props.model.getParent(), name: this.props.model.name });\n        var label = React.createElement(\"div\", { className: \"name\" }, this.props.model.label);\n        return (React.createElement(\"div\", __assign({}, this.getProps()),\n            this.props.model.in ? port : label,\n            this.props.model.in ? label : port));\n    };\n    return DefaultPortLabel;\n}(BaseWidget_1.BaseWidget));\nexports.DefaultPortLabel = DefaultPortLabel;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar PortWidget = /** @class */ (function (_super) {\n    __extends(PortWidget, _super);\n    function PortWidget(props) {\n        var _this = _super.call(this, \"srd-port\", props) || this;\n        _this.state = {\n            selected: false\n        };\n        return _this;\n    }\n    PortWidget.prototype.getClassName = function () {\n        return \"port \" + _super.prototype.getClassName.call(this) + (this.state.selected ? this.bem(\"--selected\") : \"\");\n    };\n    PortWidget.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(\"div\", __assign({}, this.getProps(), { onMouseEnter: function () {\n                _this.setState({ selected: true });\n            }, onMouseLeave: function () {\n                _this.setState({ selected: false });\n            }, \"data-name\": this.props.name, \"data-nodeid\": this.props.node.getID() })));\n    };\n    return PortWidget;\n}(BaseWidget_1.BaseWidget));\nexports.PortWidget = PortWidget;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AbstractFactory_1 = __webpack_require__(10);\nvar AbstractNodeFactory = /** @class */ (function (_super) {\n    __extends(AbstractNodeFactory, _super);\n    function AbstractNodeFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return AbstractNodeFactory;\n}(AbstractFactory_1.AbstractFactory));\nexports.AbstractNodeFactory = AbstractNodeFactory;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseAction_1 = __webpack_require__(16);\nvar MoveCanvasAction = /** @class */ (function (_super) {\n    __extends(MoveCanvasAction, _super);\n    function MoveCanvasAction(mouseX, mouseY, diagramModel) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n        _this.initialOffsetX = diagramModel.getOffsetX();\n        _this.initialOffsetY = diagramModel.getOffsetY();\n        return _this;\n    }\n    return MoveCanvasAction;\n}(BaseAction_1.BaseAction));\nexports.MoveCanvasAction = MoveCanvasAction;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseAction_1 = __webpack_require__(16);\nvar MoveItemsAction = /** @class */ (function (_super) {\n    __extends(MoveItemsAction, _super);\n    function MoveItemsAction(mouseX, mouseY, diagramEngine) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n        _this.moved = false;\n        diagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n        var selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n        //dont allow items which are locked to move\n        selectedItems = selectedItems.filter(function (item) {\n            return !diagramEngine.isModelLocked(item);\n        });\n        _this.selectionModels = selectedItems.map(function (item) {\n            return {\n                model: item,\n                initialX: item.x,\n                initialY: item.y\n            };\n        });\n        return _this;\n    }\n    return MoveItemsAction;\n}(BaseAction_1.BaseAction));\nexports.MoveItemsAction = MoveItemsAction;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseAction_1 = __webpack_require__(16);\nvar SelectingAction = /** @class */ (function (_super) {\n    __extends(SelectingAction, _super);\n    function SelectingAction(mouseX, mouseY) {\n        var _this = _super.call(this, mouseX, mouseY) || this;\n        _this.mouseX2 = mouseX;\n        _this.mouseY2 = mouseY;\n        return _this;\n    }\n    SelectingAction.prototype.getBoxDimensions = function () {\n        return {\n            left: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n            top: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n            width: Math.abs(this.mouseX2 - this.mouseX),\n            height: Math.abs(this.mouseY2 - this.mouseY),\n            right: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n            bottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n        };\n    };\n    SelectingAction.prototype.containsElement = function (x, y, diagramModel) {\n        var z = diagramModel.getZoomLevel() / 100.0;\n        var dimensions = this.getBoxDimensions();\n        return (x * z + diagramModel.getOffsetX() > dimensions.left &&\n            x * z + diagramModel.getOffsetX() < dimensions.right &&\n            y * z + diagramModel.getOffsetY() > dimensions.top &&\n            y * z + diagramModel.getOffsetY() < dimensions.bottom);\n    };\n    return SelectingAction;\n}(BaseAction_1.BaseAction));\nexports.SelectingAction = SelectingAction;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar LinkWidget_1 = __webpack_require__(43);\nvar _ = __webpack_require__(0);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar LinkLayerWidget = /** @class */ (function (_super) {\n    __extends(LinkLayerWidget, _super);\n    function LinkLayerWidget(props) {\n        var _this = _super.call(this, \"srd-link-layer\", props) || this;\n        _this.state = {};\n        return _this;\n    }\n    LinkLayerWidget.prototype.render = function () {\n        var _this = this;\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return (React.createElement(\"svg\", __assign({}, this.getProps(), { style: {\n                transform: \"translate(\" +\n                    diagramModel.getOffsetX() +\n                    \"px,\" +\n                    diagramModel.getOffsetY() +\n                    \"px) scale(\" +\n                    diagramModel.getZoomLevel() / 100.0 +\n                    \")\"\n            } }), //only perform these actions when we have a diagram\n        this.props.diagramEngine.canvas &&\n            _.map(diagramModel.getLinks(), function (link) {\n                if (_this.props.diagramEngine.nodesRendered &&\n                    !_this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]) {\n                    if (link.sourcePort !== null) {\n                        try {\n                            var portCenter = _this.props.diagramEngine.getPortCenter(link.sourcePort);\n                            link.points[0].updateLocation(portCenter);\n                            var portCoords = _this.props.diagramEngine.getPortCoords(link.sourcePort);\n                            link.sourcePort.updateCoords(portCoords);\n                            _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n                        }\n                        catch (ignore) {\n                            /*noop*/\n                        }\n                    }\n                    if (link.targetPort !== null) {\n                        try {\n                            var portCenter = _this.props.diagramEngine.getPortCenter(link.targetPort);\n                            _.last(link.points).updateLocation(portCenter);\n                            var portCoords = _this.props.diagramEngine.getPortCoords(link.targetPort);\n                            link.targetPort.updateCoords(portCoords);\n                            _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n                        }\n                        catch (ignore) {\n                            /*noop*/\n                        }\n                    }\n                }\n                //generate links\n                var generatedLink = _this.props.diagramEngine.generateWidgetForLink(link);\n                if (!generatedLink) {\n                    throw new Error(\"no link generated for type: \" + link.getType());\n                }\n                return (React.createElement(LinkWidget_1.LinkWidget, { key: link.getID(), link: link, diagramEngine: _this.props.diagramEngine }, React.cloneElement(generatedLink, {\n                    pointAdded: _this.props.pointAdded\n                })));\n            })));\n    };\n    return LinkLayerWidget;\n}(BaseWidget_1.BaseWidget));\nexports.LinkLayerWidget = LinkLayerWidget;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar LinkWidget = /** @class */ (function (_super) {\n    __extends(LinkWidget, _super);\n    function LinkWidget(props) {\n        var _this = _super.call(this, \"srd-link\", props) || this;\n        _this.state = {};\n        return _this;\n    }\n    LinkWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.link);\n    };\n    LinkWidget.prototype.render = function () {\n        return this.props.children;\n    };\n    return LinkWidget;\n}(BaseWidget_1.BaseWidget));\nexports.LinkWidget = LinkWidget;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar _ = __webpack_require__(0);\nvar NodeWidget_1 = __webpack_require__(45);\nvar BaseWidget_1 = __webpack_require__(3);\nvar NodeLayerWidget = /** @class */ (function (_super) {\n    __extends(NodeLayerWidget, _super);\n    function NodeLayerWidget(props) {\n        var _this = _super.call(this, \"srd-node-layer\", props) || this;\n        _this.updateNodeDimensions = function () {\n            if (!_this.props.diagramEngine.nodesRendered) {\n                var diagramModel = _this.props.diagramEngine.getDiagramModel();\n                _.map(diagramModel.getNodes(), function (node) {\n                    node.updateDimensions(_this.props.diagramEngine.getNodeDimensions(node));\n                });\n            }\n        };\n        _this.state = {};\n        return _this;\n    }\n    NodeLayerWidget.prototype.componentDidUpdate = function () {\n        this.updateNodeDimensions();\n        this.props.diagramEngine.nodesRendered = true;\n    };\n    NodeLayerWidget.prototype.render = function () {\n        var _this = this;\n        var diagramModel = this.props.diagramEngine.getDiagramModel();\n        return (React.createElement(\"div\", __assign({}, this.getProps(), { style: {\n                transform: \"translate(\" +\n                    diagramModel.getOffsetX() +\n                    \"px,\" +\n                    diagramModel.getOffsetY() +\n                    \"px) scale(\" +\n                    diagramModel.getZoomLevel() / 100.0 +\n                    \")\"\n            } }), _.map(diagramModel.getNodes(), function (node) {\n            return React.createElement(NodeWidget_1.NodeWidget, {\n                diagramEngine: _this.props.diagramEngine,\n                key: node.id,\n                node: node\n            }, _this.props.diagramEngine.generateWidgetForNode(node));\n        })));\n    };\n    return NodeLayerWidget;\n}(BaseWidget_1.BaseWidget));\nexports.NodeLayerWidget = NodeLayerWidget;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar NodeWidget = /** @class */ (function (_super) {\n    __extends(NodeWidget, _super);\n    function NodeWidget(props) {\n        var _this = _super.call(this, \"srd-node\", props) || this;\n        _this.state = {};\n        return _this;\n    }\n    NodeWidget.prototype.shouldComponentUpdate = function () {\n        return this.props.diagramEngine.canEntityRepaint(this.props.node);\n    };\n    NodeWidget.prototype.getClassName = function () {\n        return \"node \" + _super.prototype.getClassName.call(this) + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n    };\n    NodeWidget.prototype.render = function () {\n        return (React.createElement(\"div\", __assign({}, this.getProps(), { \"data-nodeid\": this.props.node.id, style: {\n                top: this.props.node.y,\n                left: this.props.node.x\n            } }), this.props.children));\n    };\n    return NodeWidget;\n}(BaseWidget_1.BaseWidget));\nexports.NodeWidget = NodeWidget;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matches = __webpack_require__(47)\r\n\r\nmodule.exports = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode\r\n\r\n  while (parent && parent !== document) {\r\n    if (matches(parent, selector)) return parent;\r\n    parent = parent.parentNode\r\n  }\r\n}\r\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\r\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nmodule.exports = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(49);\r\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = {\r\n    'Heap'                      : __webpack_require__(12),\r\n    'Node'                      : __webpack_require__(17),\r\n    'Grid'                      : __webpack_require__(52),\r\n    'Util'                      : __webpack_require__(4),\r\n    'DiagonalMovement'          : __webpack_require__(1),\r\n    'Heuristic'                 : __webpack_require__(8),\r\n    'AStarFinder'               : __webpack_require__(18),\r\n    'BestFirstFinder'           : __webpack_require__(53),\r\n    'BreadthFirstFinder'        : __webpack_require__(54),\r\n    'DijkstraFinder'            : __webpack_require__(55),\r\n    'BiAStarFinder'             : __webpack_require__(19),\r\n    'BiBestFirstFinder'         : __webpack_require__(56),\r\n    'BiBreadthFirstFinder'      : __webpack_require__(57),\r\n    'BiDijkstraFinder'          : __webpack_require__(58),\r\n    'IDAStarFinder'             : __webpack_require__(59),\r\n    'JumpPointFinder'           : __webpack_require__(60),\r\n};\r\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(51)(module)))\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Node = __webpack_require__(17);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar AStarFinder = __webpack_require__(18);\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(4);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar AStarFinder = __webpack_require__(18);\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BiAStarFinder = __webpack_require__(19);\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util = __webpack_require__(4);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BiAStarFinder = __webpack_require__(19);\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Util       = __webpack_require__(4);\r\nvar Heuristic  = __webpack_require__(8);\r\nvar Node       = __webpack_require__(17);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = __webpack_require__(1);\r\nvar JPFNeverMoveDiagonally = __webpack_require__(61);\r\nvar JPFAlwaysMoveDiagonally = __webpack_require__(62);\r\nvar JPFMoveDiagonallyIfNoObstacles = __webpack_require__(63);\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = __webpack_require__(64);\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = __webpack_require__(13);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = __webpack_require__(13);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = __webpack_require__(13);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = __webpack_require__(13);\r\nvar DiagonalMovement = __webpack_require__(1);\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, _ref6) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    var _ref62 = _slicedToArray(_ref6, 2);\n\n    var prevX = _ref62[0];\n    var prevY = _ref62[1];\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n      case 'L':\n        return [params[0], params[1]];\n      case 'H':\n        return [params[0], prevY];\n      case 'V':\n        return [prevX, params[0]];\n      case 'Z':\n        return null;\n      case 'C':\n        return [params[4], params[5]];\n      case 'S':\n        return [params[2], params[3]];\n      case 'Q':\n        return [params[2], params[3]];\n      case 'T':\n        return [params[0], params[1]];\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n\n          var p = point(instruction, prev);\n          prev = p;\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = path.instructions().slice(1);\n      if (!areEqualPoints(last, first)) {\n        newInstructions.unshift({\n          command: \"L\",\n          params: first\n        });\n      }\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BaseEntity_1 = __webpack_require__(14);\nvar DiagramModel_1 = __webpack_require__(26);\nvar _ = __webpack_require__(0);\nvar NodeModel_1 = __webpack_require__(9);\nvar PointModel_1 = __webpack_require__(7);\nvar main_1 = __webpack_require__(25);\nvar PathFinding_1 = __webpack_require__(11);\nvar DefaultPortFactory_1 = __webpack_require__(27);\nvar DefaultLabelFactory_1 = __webpack_require__(29);\nvar Toolkit_1 = __webpack_require__(5);\n/**\n * Passed as a parameter to the DiagramWidget\n */\nvar DiagramEngine = /** @class */ (function (_super) {\n    __extends(DiagramEngine, _super);\n    function DiagramEngine() {\n        var _this = _super.call(this) || this;\n        // calculated only when smart routing is active\n        _this.canvasMatrix = [];\n        _this.routingMatrix = [];\n        // used when at least one element has negative coordinates\n        _this.hAdjustmentFactor = 0;\n        _this.vAdjustmentFactor = 0;\n        /**\n         * Despite being a long method, we simply iterate over all three collections (nodes, ports and points)\n         * to find the highest X and Y dimensions, so we can build the matrix large enough to contain all elements.\n         */\n        _this.calculateMatrixDimensions = function () {\n            var allNodesCoords = _.values(_this.diagramModel.nodes).map(function (item) { return ({\n                x: item.x,\n                width: item.width,\n                y: item.y,\n                height: item.height\n            }); });\n            var allLinks = _.values(_this.diagramModel.links);\n            var allPortsCoords = _.flatMap(allLinks.map(function (link) { return [link.sourcePort, link.targetPort]; }))\n                .filter(function (port) { return port !== null; })\n                .map(function (item) { return ({\n                x: item.x,\n                width: item.width,\n                y: item.y,\n                height: item.height\n            }); });\n            var allPointsCoords = _.flatMap(allLinks.map(function (link) { return link.points; })).map(function (item) { return ({\n                // points don't have width/height, so let's just use 0\n                x: item.x,\n                width: 0,\n                y: item.y,\n                height: 0\n            }); });\n            var canvas = _this.canvas;\n            var minX = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) { return item.x; }).x, 0) /\n                PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n            var maxXElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) { return item.x + item.width; });\n            var maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n            var minY = Math.floor(Math.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) { return item.y; }).y, 0) /\n                PathFinding_1.ROUTING_SCALING_FACTOR) * PathFinding_1.ROUTING_SCALING_FACTOR;\n            var maxYElement = _.maxBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), function (item) { return item.y + item.height; });\n            var maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n            return {\n                width: Math.ceil(Math.abs(minX) + maxX),\n                hAdjustmentFactor: Math.abs(minX) / PathFinding_1.ROUTING_SCALING_FACTOR + 1,\n                height: Math.ceil(Math.abs(minY) + maxY),\n                vAdjustmentFactor: Math.abs(minY) / PathFinding_1.ROUTING_SCALING_FACTOR + 1\n            };\n        };\n        /**\n         * Updates (by reference) where nodes will be drawn on the matrix passed in.\n         */\n        _this.markNodes = function (matrix) {\n            _.values(_this.diagramModel.nodes).forEach(function (node) {\n                var startX = Math.floor(node.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var endX = Math.ceil((node.x + node.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var startY = Math.floor(node.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var endY = Math.ceil((node.y + node.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n                for (var x = startX - 1; x <= endX + 1; x++) {\n                    for (var y = startY - 1; y < endY + 1; y++) {\n                        _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n                    }\n                }\n            });\n        };\n        /**\n         * Updates (by reference) where ports will be drawn on the matrix passed in.\n         */\n        _this.markPorts = function (matrix) {\n            var allElements = _.flatMap(_.values(_this.diagramModel.links).map(function (link) { return [].concat(link.sourcePort, link.targetPort); }));\n            allElements.filter(function (port) { return port !== null; }).forEach(function (port) {\n                var startX = Math.floor(port.x / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var endX = Math.ceil((port.x + port.width) / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var startY = Math.floor(port.y / PathFinding_1.ROUTING_SCALING_FACTOR);\n                var endY = Math.ceil((port.y + port.height) / PathFinding_1.ROUTING_SCALING_FACTOR);\n                for (var x = startX - 1; x <= endX + 1; x++) {\n                    for (var y = startY - 1; y < endY + 1; y++) {\n                        _this.markMatrixPoint(matrix, _this.translateRoutingX(x), _this.translateRoutingY(y));\n                    }\n                }\n            });\n        };\n        _this.markMatrixPoint = function (matrix, x, y) {\n            if (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n                matrix[y][x] = 1;\n            }\n        };\n        _this.diagramModel = new DiagramModel_1.DiagramModel();\n        _this.nodeFactories = {};\n        _this.linkFactories = {};\n        _this.portFactories = {};\n        _this.labelFactories = {};\n        _this.canvas = null;\n        _this.paintableWidgets = null;\n        _this.linksThatHaveInitiallyRendered = {};\n        if (Toolkit_1.Toolkit.TESTING) {\n            Toolkit_1.Toolkit.TESTING_UID = 0;\n            //pop it onto the window so our E2E helpers can find it\n            if (window) {\n                window[\"diagram_instance\"] = _this;\n            }\n        }\n        return _this;\n    }\n    DiagramEngine.prototype.installDefaultFactories = function () {\n        this.registerNodeFactory(new main_1.DefaultNodeFactory());\n        this.registerLinkFactory(new main_1.DefaultLinkFactory());\n        this.registerPortFactory(new DefaultPortFactory_1.DefaultPortFactory());\n        this.registerLabelFactory(new DefaultLabelFactory_1.DefaultLabelFactory());\n    };\n    DiagramEngine.prototype.repaintCanvas = function () {\n        this.iterateListeners(function (listener) {\n            if (listener.repaintCanvas) {\n                listener.repaintCanvas();\n            }\n        });\n    };\n    DiagramEngine.prototype.clearRepaintEntities = function () {\n        this.paintableWidgets = null;\n    };\n    DiagramEngine.prototype.enableRepaintEntities = function (entities) {\n        var _this = this;\n        this.paintableWidgets = {};\n        entities.forEach(function (entity) {\n            //if a node is requested to repaint, add all of its links\n            if (entity instanceof NodeModel_1.NodeModel) {\n                _.forEach(entity.getPorts(), function (port) {\n                    _.forEach(port.getLinks(), function (link) {\n                        _this.paintableWidgets[link.getID()] = true;\n                    });\n                });\n            }\n            if (entity instanceof PointModel_1.PointModel) {\n                _this.paintableWidgets[entity.getLink().getID()] = true;\n            }\n            _this.paintableWidgets[entity.getID()] = true;\n        });\n    };\n    /**\n     * Checks to see if a model is locked by running through\n     * its parents to see if they are locked first\n     */\n    DiagramEngine.prototype.isModelLocked = function (model) {\n        //always check the diagram model\n        if (this.diagramModel.isLocked()) {\n            return true;\n        }\n        return model.isLocked();\n    };\n    DiagramEngine.prototype.recalculatePortsVisually = function () {\n        this.nodesRendered = false;\n        this.linksThatHaveInitiallyRendered = {};\n    };\n    DiagramEngine.prototype.canEntityRepaint = function (baseModel) {\n        //no rules applied, allow repaint\n        if (this.paintableWidgets === null) {\n            return true;\n        }\n        return this.paintableWidgets[baseModel.getID()] !== undefined;\n    };\n    DiagramEngine.prototype.setCanvas = function (canvas) {\n        this.canvas = canvas;\n    };\n    DiagramEngine.prototype.setDiagramModel = function (model) {\n        this.diagramModel = model;\n        this.recalculatePortsVisually();\n    };\n    DiagramEngine.prototype.getDiagramModel = function () {\n        return this.diagramModel;\n    };\n    //!-------------- FACTORIES ------------\n    DiagramEngine.prototype.getNodeFactories = function () {\n        return this.nodeFactories;\n    };\n    DiagramEngine.prototype.getLinkFactories = function () {\n        return this.linkFactories;\n    };\n    DiagramEngine.prototype.getLabelFactories = function () {\n        return this.labelFactories;\n    };\n    DiagramEngine.prototype.registerLabelFactory = function (factory) {\n        this.labelFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n            if (listener.labelFactoriesUpdated) {\n                listener.labelFactoriesUpdated();\n            }\n        });\n    };\n    DiagramEngine.prototype.registerPortFactory = function (factory) {\n        this.portFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n            if (listener.portFactoriesUpdated) {\n                listener.portFactoriesUpdated();\n            }\n        });\n    };\n    DiagramEngine.prototype.registerNodeFactory = function (factory) {\n        this.nodeFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n            if (listener.nodeFactoriesUpdated) {\n                listener.nodeFactoriesUpdated();\n            }\n        });\n    };\n    DiagramEngine.prototype.registerLinkFactory = function (factory) {\n        this.linkFactories[factory.getType()] = factory;\n        this.iterateListeners(function (listener) {\n            if (listener.linkFactoriesUpdated) {\n                listener.linkFactoriesUpdated();\n            }\n        });\n    };\n    DiagramEngine.prototype.getPortFactory = function (type) {\n        if (this.portFactories[type]) {\n            return this.portFactories[type];\n        }\n        throw new Error(\"cannot find factory for port of type: [\" + type + \"]\");\n    };\n    DiagramEngine.prototype.getNodeFactory = function (type) {\n        if (this.nodeFactories[type]) {\n            return this.nodeFactories[type];\n        }\n        throw new Error(\"cannot find factory for node of type: [\" + type + \"]\");\n    };\n    DiagramEngine.prototype.getLinkFactory = function (type) {\n        if (this.linkFactories[type]) {\n            return this.linkFactories[type];\n        }\n        throw new Error(\"cannot find factory for link of type: [\" + type + \"]\");\n    };\n    DiagramEngine.prototype.getLabelFactory = function (type) {\n        if (this.labelFactories[type]) {\n            return this.labelFactories[type];\n        }\n        throw new Error(\"cannot find factory for label of type: [\" + type + \"]\");\n    };\n    DiagramEngine.prototype.getFactoryForNode = function (node) {\n        return this.getNodeFactory(node.getType());\n    };\n    DiagramEngine.prototype.getFactoryForLink = function (link) {\n        return this.getLinkFactory(link.getType());\n    };\n    DiagramEngine.prototype.getFactoryForLabel = function (label) {\n        return this.getLabelFactory(label.getType());\n    };\n    DiagramEngine.prototype.generateWidgetForLink = function (link) {\n        var linkFactory = this.getFactoryForLink(link);\n        if (!linkFactory) {\n            throw new Error(\"Cannot find link factory for link: \" + link.getType());\n        }\n        return linkFactory.generateReactWidget(this, link);\n    };\n    DiagramEngine.prototype.generateWidgetForNode = function (node) {\n        var nodeFactory = this.getFactoryForNode(node);\n        if (!nodeFactory) {\n            throw new Error(\"Cannot find widget factory for node: \" + node.getType());\n        }\n        return nodeFactory.generateReactWidget(this, node);\n    };\n    DiagramEngine.prototype.getRelativeMousePoint = function (event) {\n        var point = this.getRelativePoint(event.clientX, event.clientY);\n        return {\n            x: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n            y: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n        };\n    };\n    DiagramEngine.prototype.getRelativePoint = function (x, y) {\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return { x: x - canvasRect.left, y: y - canvasRect.top };\n    };\n    DiagramEngine.prototype.getNodeElement = function (node) {\n        var selector = this.canvas.querySelector(\".node[data-nodeid=\\\"\" + node.getID() + \"\\\"]\");\n        if (selector === null) {\n            throw new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n        }\n        return selector;\n    };\n    DiagramEngine.prototype.getNodePortElement = function (port) {\n        var selector = this.canvas.querySelector(\".port[data-name=\\\"\" + port.getName() + \"\\\"][data-nodeid=\\\"\" + port.getParent().getID() + \"\\\"]\");\n        if (selector === null) {\n            throw new Error(\"Cannot find Node Port element with nodeID: [\" +\n                port.getParent().getID() +\n                \"] and name: [\" +\n                port.getName() +\n                \"]\");\n        }\n        return selector;\n    };\n    DiagramEngine.prototype.getPortCenter = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n        return {\n            x: sourceElement.offsetWidth / 2 +\n                (rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n            y: sourceElement.offsetHeight / 2 +\n                (rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n        };\n    };\n    /**\n     * Calculate rectangular coordinates of the port passed in.\n     */\n    DiagramEngine.prototype.getPortCoords = function (port) {\n        var sourceElement = this.getNodePortElement(port);\n        var sourceRect = sourceElement.getBoundingClientRect();\n        var canvasRect = this.canvas.getBoundingClientRect();\n        return {\n            x: (sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0) -\n                canvasRect.left,\n            y: (sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0) -\n                canvasRect.top,\n            width: sourceRect.width,\n            height: sourceRect.height\n        };\n    };\n    /**\n     * Determine the width and height of the node passed in.\n     * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\n     */\n    DiagramEngine.prototype.getNodeDimensions = function (node) {\n        if (!this.canvas) {\n            return {\n                width: 0,\n                height: 0\n            };\n        }\n        var nodeElement = this.getNodeElement(node);\n        var nodeRect = nodeElement.getBoundingClientRect();\n        return {\n            width: nodeRect.width,\n            height: nodeRect.height\n        };\n    };\n    DiagramEngine.prototype.getMaxNumberPointsPerLink = function () {\n        return this.maxNumberPointsPerLink;\n    };\n    DiagramEngine.prototype.setMaxNumberPointsPerLink = function (max) {\n        this.maxNumberPointsPerLink = max;\n    };\n    DiagramEngine.prototype.isSmartRoutingEnabled = function () {\n        return !!this.smartRouting;\n    };\n    DiagramEngine.prototype.setSmartRoutingStatus = function (status) {\n        this.smartRouting = status;\n    };\n    /**\n     * A representation of the canvas in the following format:\n     *\n     * +-----------------+\n     * | 0 0 0 0 0 0 0 0 |\n     * | 0 0 0 0 0 0 0 0 |\n     * | 0 0 0 0 0 0 0 0 |\n     * | 0 0 0 0 0 0 0 0 |\n     * | 0 0 0 0 0 0 0 0 |\n     * +-----------------+\n     *\n     * In which all walkable points are marked by zeros.\n     * It uses @link{#ROUTING_SCALING_FACTOR} to reduce the matrix dimensions and improve performance.\n     */\n    DiagramEngine.prototype.getCanvasMatrix = function () {\n        if (this.canvasMatrix.length === 0) {\n            this.calculateCanvasMatrix();\n        }\n        return this.canvasMatrix;\n    };\n    DiagramEngine.prototype.calculateCanvasMatrix = function () {\n        var _a = this.calculateMatrixDimensions(), canvasWidth = _a.width, hAdjustmentFactor = _a.hAdjustmentFactor, canvasHeight = _a.height, vAdjustmentFactor = _a.vAdjustmentFactor;\n        this.hAdjustmentFactor = hAdjustmentFactor;\n        this.vAdjustmentFactor = vAdjustmentFactor;\n        var matrixWidth = Math.ceil(canvasWidth / PathFinding_1.ROUTING_SCALING_FACTOR);\n        var matrixHeight = Math.ceil(canvasHeight / PathFinding_1.ROUTING_SCALING_FACTOR);\n        this.canvasMatrix = _.range(0, matrixHeight).map(function () {\n            return new Array(matrixWidth).fill(0);\n        });\n    };\n    /**\n     * A representation of the canvas in the following format:\n     *\n     * +-----------------+\n     * | 0 0 1 1 0 0 0 0 |\n     * | 0 0 1 1 0 0 1 1 |\n     * | 0 0 0 0 0 0 1 1 |\n     * | 1 1 0 0 0 0 0 0 |\n     * | 1 1 0 0 0 0 0 0 |\n     * +-----------------+\n     *\n     * In which all points blocked by a node (and its ports) are\n     * marked as 1; points were there is nothing (ie, free) receive 0.\n     */\n    DiagramEngine.prototype.getRoutingMatrix = function () {\n        if (this.routingMatrix.length === 0) {\n            this.calculateRoutingMatrix();\n        }\n        return this.routingMatrix;\n    };\n    DiagramEngine.prototype.calculateRoutingMatrix = function () {\n        var matrix = _.cloneDeep(this.getCanvasMatrix());\n        // nodes need to be marked as blocked points\n        this.markNodes(matrix);\n        // same thing for ports\n        this.markPorts(matrix);\n        this.routingMatrix = matrix;\n    };\n    /**\n     * The routing matrix does not have negative indexes, but elements could be negatively positioned.\n     * We use the functions below to translate back and forth between these coordinates, relying on the\n     * calculated values of hAdjustmentFactor and vAdjustmentFactor.\n     */\n    DiagramEngine.prototype.translateRoutingX = function (x, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        return x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n    };\n    DiagramEngine.prototype.translateRoutingY = function (y, reverse) {\n        if (reverse === void 0) { reverse = false; }\n        return y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n    };\n    DiagramEngine.prototype.zoomToFit = function () {\n        var xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n        var yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n        var zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n        this.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n        this.diagramModel.setOffset(0, 0);\n        this.repaintCanvas();\n    };\n    return DiagramEngine;\n}(BaseEntity_1.BaseEntity));\nexports.DiagramEngine = DiagramEngine;\n\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar DefaultLinkWidget_1 = __webpack_require__(33);\nvar AbstractLinkFactory_1 = __webpack_require__(34);\nvar DefaultLinkModel_1 = __webpack_require__(22);\n/**\n * @author Dylan Vorster\n */\nvar DefaultLinkFactory = /** @class */ (function (_super) {\n    __extends(DefaultLinkFactory, _super);\n    function DefaultLinkFactory() {\n        return _super.call(this, \"default\") || this;\n    }\n    DefaultLinkFactory.prototype.generateReactWidget = function (diagramEngine, link) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, {\n            link: link,\n            diagramEngine: diagramEngine\n        });\n    };\n    DefaultLinkFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n    };\n    DefaultLinkFactory.prototype.generateLinkSegment = function (model, widget, selected, path) {\n        return (React.createElement(\"path\", { className: selected ? widget.bem(\"--path-selected\") : \"\", strokeWidth: model.width, stroke: model.color, d: path }));\n    };\n    return DefaultLinkFactory;\n}(AbstractLinkFactory_1.AbstractLinkFactory));\nexports.DefaultLinkFactory = DefaultLinkFactory;\n\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DefaultNodeModel_1 = __webpack_require__(32);\nvar React = __webpack_require__(2);\nvar DefaultNodeWidget_1 = __webpack_require__(35);\nvar AbstractNodeFactory_1 = __webpack_require__(38);\n/**\n * @author Dylan Vorster\n */\nvar DefaultNodeFactory = /** @class */ (function (_super) {\n    __extends(DefaultNodeFactory, _super);\n    function DefaultNodeFactory() {\n        return _super.call(this, \"default\") || this;\n    }\n    DefaultNodeFactory.prototype.generateReactWidget = function (diagramEngine, node) {\n        return React.createElement(DefaultNodeWidget_1.DefaultNodeWidget, {\n            node: node,\n            diagramEngine: diagramEngine\n        });\n    };\n    DefaultNodeFactory.prototype.getNewInstance = function (initialConfig) {\n        return new DefaultNodeModel_1.DefaultNodeModel();\n    };\n    return DefaultNodeFactory;\n}(AbstractNodeFactory_1.AbstractNodeFactory));\nexports.DefaultNodeFactory = DefaultNodeFactory;\n\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = __webpack_require__(2);\nvar _ = __webpack_require__(0);\nvar LinkLayerWidget_1 = __webpack_require__(42);\nvar NodeLayerWidget_1 = __webpack_require__(44);\nvar Toolkit_1 = __webpack_require__(5);\nvar MoveCanvasAction_1 = __webpack_require__(39);\nvar MoveItemsAction_1 = __webpack_require__(40);\nvar SelectingAction_1 = __webpack_require__(41);\nvar NodeModel_1 = __webpack_require__(9);\nvar PointModel_1 = __webpack_require__(7);\nvar PortModel_1 = __webpack_require__(15);\nvar BaseWidget_1 = __webpack_require__(3);\n/**\n * @author Dylan Vorster\n */\nvar DiagramWidget = /** @class */ (function (_super) {\n    __extends(DiagramWidget, _super);\n    function DiagramWidget(props) {\n        var _this = _super.call(this, \"srd-diagram\", props) || this;\n        _this.onKeyUpPointer = null;\n        _this.onMouseMove = _this.onMouseMove.bind(_this);\n        _this.onMouseUp = _this.onMouseUp.bind(_this);\n        _this.state = {\n            action: null,\n            wasMoved: false,\n            renderedNodes: false,\n            windowListener: null,\n            diagramEngineListener: null,\n            document: null\n        };\n        return _this;\n    }\n    DiagramWidget.prototype.componentWillUnmount = function () {\n        this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n        this.props.diagramEngine.setCanvas(null);\n        window.removeEventListener(\"keyup\", this.onKeyUpPointer);\n        window.removeEventListener(\"mouseUp\", this.onMouseUp);\n        window.removeEventListener(\"mouseMove\", this.onMouseMove);\n    };\n    DiagramWidget.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n        if (this.props.diagramEngine !== nextProps.diagramEngine) {\n            this.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n            var diagramEngineListener = nextProps.diagramEngine.addListener({\n                repaintCanvas: function () { return _this.forceUpdate(); }\n            });\n            this.setState({ diagramEngineListener: diagramEngineListener });\n        }\n    };\n    DiagramWidget.prototype.componentWillUpdate = function (nextProps) {\n        if (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n            this.setState({ renderedNodes: false });\n            nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n        if (!nextProps.diagramEngine.diagramModel.rendered) {\n            this.setState({ renderedNodes: false });\n            nextProps.diagramEngine.diagramModel.rendered = true;\n        }\n    };\n    DiagramWidget.prototype.componentDidUpdate = function () {\n        if (!this.state.renderedNodes) {\n            this.setState({\n                renderedNodes: true\n            });\n        }\n    };\n    DiagramWidget.prototype.componentDidMount = function () {\n        var _this = this;\n        this.onKeyUpPointer = this.onKeyUp.bind(this);\n        //add a keyboard listener\n        this.setState({\n            document: document,\n            renderedNodes: true,\n            diagramEngineListener: this.props.diagramEngine.addListener({\n                repaintCanvas: function () {\n                    _this.forceUpdate();\n                }\n            })\n        });\n        window.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n        // dont focus the window when in test mode - jsdom fails\n        if (production !== \"test\") {\n            window.focus();\n        }\n    };\n    /**\n     * Gets a model and element under the mouse cursor\n     */\n    DiagramWidget.prototype.getMouseElement = function (event) {\n        var target = event.target;\n        var diagramModel = this.props.diagramEngine.diagramModel;\n        //is it a port\n        var element = Toolkit_1.Toolkit.closest(target, \".port[data-name]\");\n        if (element) {\n            var nodeElement = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n            return {\n                model: diagramModel\n                    .getNode(nodeElement.getAttribute(\"data-nodeid\"))\n                    .getPort(element.getAttribute(\"data-name\")),\n                element: element\n            };\n        }\n        //look for a point\n        element = Toolkit_1.Toolkit.closest(target, \".point[data-id]\");\n        if (element) {\n            return {\n                model: diagramModel\n                    .getLink(element.getAttribute(\"data-linkid\"))\n                    .getPointModel(element.getAttribute(\"data-id\")),\n                element: element\n            };\n        }\n        //look for a link\n        element = Toolkit_1.Toolkit.closest(target, \"[data-linkid]\");\n        if (element) {\n            return {\n                model: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n                element: element\n            };\n        }\n        //look for a node\n        element = Toolkit_1.Toolkit.closest(target, \".node[data-nodeid]\");\n        if (element) {\n            return {\n                model: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n                element: element\n            };\n        }\n        return null;\n    };\n    DiagramWidget.prototype.fireAction = function () {\n        if (this.state.action && this.props.actionStillFiring) {\n            this.props.actionStillFiring(this.state.action);\n        }\n    };\n    DiagramWidget.prototype.stopFiringAction = function (shouldSkipEvent) {\n        if (this.props.actionStoppedFiring && !shouldSkipEvent) {\n            this.props.actionStoppedFiring(this.state.action);\n        }\n        this.setState({ action: null });\n    };\n    DiagramWidget.prototype.startFiringAction = function (action) {\n        var setState = true;\n        if (this.props.actionStartedFiring) {\n            setState = this.props.actionStartedFiring(action);\n        }\n        if (setState) {\n            this.setState({ action: action });\n        }\n    };\n    DiagramWidget.prototype.onMouseMove = function (event) {\n        var _this = this;\n        var diagramEngine = this.props.diagramEngine;\n        var diagramModel = diagramEngine.getDiagramModel();\n        //select items so draw a bounding box\n        if (this.state.action instanceof SelectingAction_1.SelectingAction) {\n            var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n            _.forEach(diagramModel.getNodes(), function (node) {\n                if (_this.state.action.containsElement(node.x, node.y, diagramModel)) {\n                    node.setSelected(true);\n                }\n            });\n            _.forEach(diagramModel.getLinks(), function (link) {\n                var allSelected = true;\n                _.forEach(link.points, function (point) {\n                    if (_this.state.action.containsElement(point.x, point.y, diagramModel)) {\n                        point.setSelected(true);\n                    }\n                    else {\n                        allSelected = false;\n                    }\n                });\n                if (allSelected) {\n                    link.setSelected(true);\n                }\n            });\n            this.state.action.mouseX2 = relative.x;\n            this.state.action.mouseY2 = relative.y;\n            this.fireAction();\n            this.setState({ action: this.state.action });\n            return;\n        }\n        else if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n            var amountX_1 = event.clientX - this.state.action.mouseX;\n            var amountY_1 = event.clientY - this.state.action.mouseY;\n            var amountZoom_1 = diagramModel.getZoomLevel() / 100;\n            _.forEach(this.state.action.selectionModels, function (model) {\n                // in this case we need to also work out the relative grid position\n                if (model.model instanceof NodeModel_1.NodeModel ||\n                    (model.model instanceof PointModel_1.PointModel && !model.model.isConnectedToPort())) {\n                    model.model.x = diagramModel.getGridPosition(model.initialX + amountX_1 / amountZoom_1);\n                    model.model.y = diagramModel.getGridPosition(model.initialY + amountY_1 / amountZoom_1);\n                    // update port coordinates as well\n                    if (model.model instanceof NodeModel_1.NodeModel) {\n                        _.forEach(model.model.getPorts(), function (port) {\n                            var portCoords = _this.props.diagramEngine.getPortCoords(port);\n                            port.updateCoords(portCoords);\n                        });\n                    }\n                    if (diagramEngine.isSmartRoutingEnabled()) {\n                        diagramEngine.calculateRoutingMatrix();\n                    }\n                }\n                else if (model.model instanceof PointModel_1.PointModel) {\n                    // we want points that are connected to ports, to not neccesarilly snap to grid\n                    // this stuff needs to be pixel perfect, dont touch it\n                    model.model.x = model.initialX + diagramModel.getGridPosition(amountX_1 / amountZoom_1);\n                    model.model.y = model.initialY + diagramModel.getGridPosition(amountY_1 / amountZoom_1);\n                }\n            });\n            if (diagramEngine.isSmartRoutingEnabled()) {\n                diagramEngine.calculateCanvasMatrix();\n            }\n            this.fireAction();\n            if (!this.state.wasMoved) {\n                this.setState({ wasMoved: true });\n            }\n            else {\n                this.forceUpdate();\n            }\n        }\n        else if (this.state.action instanceof MoveCanvasAction_1.MoveCanvasAction) {\n            //translate the actual canvas\n            if (this.props.allowCanvasTranslation) {\n                diagramModel.setOffset(this.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX), this.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY));\n                this.fireAction();\n                this.forceUpdate();\n            }\n        }\n    };\n    DiagramWidget.prototype.onKeyUp = function (event) {\n        var _this = this;\n        //delete all selected\n        if (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n            _.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), function (element) {\n                //only delete items which are not locked\n                if (!_this.props.diagramEngine.isModelLocked(element)) {\n                    element.remove();\n                }\n            });\n            this.forceUpdate();\n        }\n    };\n    DiagramWidget.prototype.onMouseUp = function (event) {\n        var _this = this;\n        var diagramEngine = this.props.diagramEngine;\n        //are we going to connect a link to something?\n        if (this.state.action instanceof MoveItemsAction_1.MoveItemsAction) {\n            var element = this.getMouseElement(event);\n            var linkConnected = false;\n            _.forEach(this.state.action.selectionModels, function (model) {\n                //only care about points connecting to things\n                if (!(model.model instanceof PointModel_1.PointModel)) {\n                    return;\n                }\n                if (element && element.model instanceof PortModel_1.PortModel && !diagramEngine.isModelLocked(element.model)) {\n                    linkConnected = true;\n                    var link = model.model.getLink();\n                    if (link.getTargetPort() !== null) {\n                        //if this was a valid link already and we are adding a node in the middle, create 2 links from the original\n                        if (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n                            var targetPort = link.getTargetPort();\n                            var newLink = link.clone({});\n                            newLink.setSourcePort(element.model);\n                            newLink.setTargetPort(targetPort);\n                            link.setTargetPort(element.model);\n                            targetPort.removeLink(link);\n                            newLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n                            link.removePointsAfter(model.model);\n                            diagramEngine.getDiagramModel().addLink(newLink);\n                            //if we are connecting to the same target or source, remove tweener points\n                        }\n                        else if (link.getTargetPort() === element.model) {\n                            link.removePointsAfter(model.model);\n                        }\n                        else if (link.getSourcePort() === element.model) {\n                            link.removePointsBefore(model.model);\n                        }\n                    }\n                    else {\n                        link.setTargetPort(element.model);\n                    }\n                    delete _this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n                }\n                //if we moved a NodeModel and allowLooseLinks is false, we know that any links involved were valid\n                if ((!_this.props.allowLooseLinks && element.model instanceof NodeModel_1.NodeModel) || !_this.state.wasMoved) {\n                    linkConnected = true;\n                }\n            });\n            //do we want to allow loose links on the diagram model or not\n            if (!linkConnected && !this.props.allowLooseLinks) {\n                _.forEach(this.state.action.selectionModels, function (model) {\n                    //only care about points connecting to things\n                    if (!(model.model instanceof PointModel_1.PointModel)) {\n                        return;\n                    }\n                    var link = model.model.getLink();\n                    if (link.isLastPoint(model.model)) {\n                        link.remove();\n                    }\n                });\n            }\n            //remove any invalid links\n            _.forEach(this.state.action.selectionModels, function (model) {\n                //only care about points connecting to things\n                if (!(model.model instanceof PointModel_1.PointModel)) {\n                    return;\n                }\n                var link = model.model.getLink();\n                var sourcePort = link.getSourcePort();\n                var targetPort = link.getTargetPort();\n                if (sourcePort !== null && targetPort !== null) {\n                    if (!sourcePort.canLinkToPort(targetPort)) {\n                        //link not allowed\n                        link.remove();\n                    }\n                    else if (_.some(_.values(targetPort.getLinks()), function (l) {\n                        return l !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort);\n                    })) {\n                        //link is a duplicate\n                        link.remove();\n                    }\n                }\n            });\n            diagramEngine.clearRepaintEntities();\n            this.stopFiringAction(!this.state.wasMoved);\n        }\n        else {\n            diagramEngine.clearRepaintEntities();\n            this.stopFiringAction();\n        }\n        this.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n        this.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n    };\n    DiagramWidget.prototype.drawSelectionBox = function () {\n        var dimensions = this.state.action.getBoxDimensions();\n        return (React.createElement(\"div\", { className: this.bem(\"__selector\"), style: {\n                top: dimensions.top,\n                left: dimensions.left,\n                width: dimensions.width,\n                height: dimensions.height\n            } }));\n    };\n    DiagramWidget.prototype.render = function () {\n        var _this = this;\n        var diagramEngine = this.props.diagramEngine;\n        diagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n        diagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n        var diagramModel = diagramEngine.getDiagramModel();\n        return (React.createElement(\"div\", __assign({}, this.getProps(), { ref: function (ref) {\n                if (ref) {\n                    _this.props.diagramEngine.setCanvas(ref);\n                }\n            }, onWheel: function (event) {\n                if (_this.props.allowCanvasZoom) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    var oldZoomFactor = diagramModel.getZoomLevel() / 100;\n                    var scrollDelta = _this.props.inverseZoom ? -event.deltaY : event.deltaY;\n                    //check if it is pinch gesture\n                    if (event.ctrlKey && scrollDelta % 1 !== 0) {\n                        /*Chrome and Firefox sends wheel event with deltaY that\n            have fractional part, also `ctrlKey` prop of the event is true\n            though ctrl isn't pressed\n          */\n                        scrollDelta /= 3;\n                    }\n                    else {\n                        scrollDelta /= 60;\n                    }\n                    if (diagramModel.getZoomLevel() + scrollDelta > 10) {\n                        diagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n                    }\n                    var zoomFactor = diagramModel.getZoomLevel() / 100;\n                    var boundingRect = event.currentTarget.getBoundingClientRect();\n                    var clientWidth = boundingRect.width;\n                    var clientHeight = boundingRect.height;\n                    // compute difference between rect before and after scroll\n                    var widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n                    var heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n                    // compute mouse coords relative to canvas\n                    var clientX = event.clientX - boundingRect.left;\n                    var clientY = event.clientY - boundingRect.top;\n                    // compute width and height increment factor\n                    var xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n                    var yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n                    diagramModel.setOffset(diagramModel.getOffsetX() - widthDiff * xFactor, diagramModel.getOffsetY() - heightDiff * yFactor);\n                    diagramEngine.enableRepaintEntities([]);\n                    _this.forceUpdate();\n                }\n            }, onMouseDown: function (event) {\n                _this.setState(__assign({}, _this.state, { wasMoved: false }));\n                diagramEngine.clearRepaintEntities();\n                var model = _this.getMouseElement(event);\n                //the canvas was selected\n                if (model === null) {\n                    //is it a multiple selection\n                    if (event.shiftKey) {\n                        var relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n                        _this.startFiringAction(new SelectingAction_1.SelectingAction(relative.x, relative.y));\n                    }\n                    else {\n                        //its a drag the canvas event\n                        diagramModel.clearSelection();\n                        _this.startFiringAction(new MoveCanvasAction_1.MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n                    }\n                }\n                else if (model.model instanceof PortModel_1.PortModel) {\n                    //its a port element, we want to drag a link\n                    if (!_this.props.diagramEngine.isModelLocked(model.model)) {\n                        var relative = diagramEngine.getRelativeMousePoint(event);\n                        var sourcePort = model.model;\n                        var link = sourcePort.createLinkModel();\n                        link.setSourcePort(sourcePort);\n                        if (link) {\n                            link.removeMiddlePoints();\n                            if (link.getSourcePort() !== sourcePort) {\n                                link.setSourcePort(sourcePort);\n                            }\n                            link.setTargetPort(null);\n                            link.getFirstPoint().updateLocation(relative);\n                            link.getLastPoint().updateLocation(relative);\n                            diagramModel.clearSelection();\n                            link.getLastPoint().setSelected(true);\n                            diagramModel.addLink(link);\n                            _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n                        }\n                    }\n                    else {\n                        diagramModel.clearSelection();\n                    }\n                }\n                else {\n                    //its some or other element, probably want to move it\n                    if (!event.shiftKey && !model.model.isSelected()) {\n                        diagramModel.clearSelection();\n                    }\n                    model.model.setSelected(true);\n                    _this.startFiringAction(new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n                }\n                _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n                _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n            } }),\n            this.state.renderedNodes && (React.createElement(LinkLayerWidget_1.LinkLayerWidget, { diagramEngine: diagramEngine, pointAdded: function (point, event) {\n                    _this.state.document.addEventListener(\"mousemove\", _this.onMouseMove);\n                    _this.state.document.addEventListener(\"mouseup\", _this.onMouseUp);\n                    event.stopPropagation();\n                    diagramModel.clearSelection(point);\n                    _this.setState({\n                        action: new MoveItemsAction_1.MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n                    });\n                } })),\n            React.createElement(NodeLayerWidget_1.NodeLayerWidget, { diagramEngine: diagramEngine }),\n            this.state.action instanceof SelectingAction_1.SelectingAction && this.drawSelectionBox()));\n    };\n    DiagramWidget.defaultProps = {\n        diagramEngine: null,\n        allowLooseLinks: true,\n        allowCanvasTranslation: true,\n        allowCanvasZoom: true,\n        inverseZoom: false,\n        maxNumberPointsPerLink: Infinity,\n        smartRouting: false,\n        deleteKeys: [46, 8]\n    };\n    return DiagramWidget;\n}(BaseWidget_1.BaseWidget));\nexports.DiagramWidget = DiagramWidget;\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// main.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ade0229538eba6658140","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"_\",\"root\":\"_\"}\n// module id = 0\n// module chunks = 0","var DiagonalMovement = {\r\n    Always: 1,\r\n    Never: 2,\r\n    IfAtMostOneObstacle: 3,\r\n    OnlyWhenNoObstacles: 4\r\n};\r\n\r\nmodule.exports = DiagonalMovement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/core/DiagonalMovement.js\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}\n// module id = 2\n// module chunks = 0","import * as React from \"react\";\nimport * as _ from \"lodash\";\n\nexport interface BaseWidgetProps {\n\t/**\n\t * Override the base class name\n\t */\n\tbaseClass?: string;\n\t/**\n\t * append additional classes\n\t */\n\tclassName?: string;\n\n\t/**\n\t * Additional props to add\n\t */\n\textraProps?: any;\n}\n\nexport class BaseWidget<P extends BaseWidgetProps = BaseWidgetProps, S = any> extends React.Component<P, S> {\n\tclassName: string;\n\n\tconstructor(name: string, props: P) {\n\t\tsuper(props);\n\t\tthis.className = name;\n\t}\n\n\tbem(selector: string): string {\n\t\treturn (this.props.baseClass || this.className) + selector + \" \";\n\t}\n\n\tgetClassName(): string {\n\t\treturn (\n\t\t\t(this.props.baseClass || this.className) + \" \" + (this.props.className ? this.props.className + \" \" : \"\")\n\t\t);\n\t}\n\n\tgetProps(): any {\n\t\treturn {\n\t\t\t...((this.props.extraProps as any) || {}),\n\t\t\tclassName: this.getClassName()\n\t\t};\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/BaseWidget.tsx","/**\r\n * Backtrace according to the parent records and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node} node End node\r\n * @return {Array<Array<number>>} the path\r\n */\r\nfunction backtrace(node) {\r\n    var path = [[node.x, node.y]];\r\n    while (node.parent) {\r\n        node = node.parent;\r\n        path.push([node.x, node.y]);\r\n    }\r\n    return path.reverse();\r\n}\r\nexports.backtrace = backtrace;\r\n\r\n/**\r\n * Backtrace from start and end node, and return the path.\r\n * (including both start and end nodes)\r\n * @param {Node}\r\n * @param {Node}\r\n */\r\nfunction biBacktrace(nodeA, nodeB) {\r\n    var pathA = backtrace(nodeA),\r\n        pathB = backtrace(nodeB);\r\n    return pathA.concat(pathB.reverse());\r\n}\r\nexports.biBacktrace = biBacktrace;\r\n\r\n/**\r\n * Compute the length of the path.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {number} The length of the path\r\n */\r\nfunction pathLength(path) {\r\n    var i, sum = 0, a, b, dx, dy;\r\n    for (i = 1; i < path.length; ++i) {\r\n        a = path[i - 1];\r\n        b = path[i];\r\n        dx = a[0] - b[0];\r\n        dy = a[1] - b[1];\r\n        sum += Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    return sum;\r\n}\r\nexports.pathLength = pathLength;\r\n\r\n\r\n/**\r\n * Given the start and end coordinates, return all the coordinates lying\r\n * on the line formed by these coordinates, based on Bresenham's algorithm.\r\n * http://en.wikipedia.org/wiki/Bresenham's_line_algorithm#Simplification\r\n * @param {number} x0 Start x coordinate\r\n * @param {number} y0 Start y coordinate\r\n * @param {number} x1 End x coordinate\r\n * @param {number} y1 End y coordinate\r\n * @return {Array<Array<number>>} The coordinates on the line\r\n */\r\nfunction interpolate(x0, y0, x1, y1) {\r\n    var abs = Math.abs,\r\n        line = [],\r\n        sx, sy, dx, dy, err, e2;\r\n\r\n    dx = abs(x1 - x0);\r\n    dy = abs(y1 - y0);\r\n\r\n    sx = (x0 < x1) ? 1 : -1;\r\n    sy = (y0 < y1) ? 1 : -1;\r\n\r\n    err = dx - dy;\r\n\r\n    while (true) {\r\n        line.push([x0, y0]);\r\n\r\n        if (x0 === x1 && y0 === y1) {\r\n            break;\r\n        }\r\n        \r\n        e2 = 2 * err;\r\n        if (e2 > -dy) {\r\n            err = err - dy;\r\n            x0 = x0 + sx;\r\n        }\r\n        if (e2 < dx) {\r\n            err = err + dx;\r\n            y0 = y0 + sy;\r\n        }\r\n    }\r\n\r\n    return line;\r\n}\r\nexports.interpolate = interpolate;\r\n\r\n\r\n/**\r\n * Given a compressed path, return a new path that has all the segments\r\n * in it interpolated.\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} expanded path\r\n */\r\nfunction expandPath(path) {\r\n    var expanded = [],\r\n        len = path.length,\r\n        coord0, coord1,\r\n        interpolated,\r\n        interpolatedLen,\r\n        i, j;\r\n\r\n    if (len < 2) {\r\n        return expanded;\r\n    }\r\n\r\n    for (i = 0; i < len - 1; ++i) {\r\n        coord0 = path[i];\r\n        coord1 = path[i + 1];\r\n\r\n        interpolated = interpolate(coord0[0], coord0[1], coord1[0], coord1[1]);\r\n        interpolatedLen = interpolated.length;\r\n        for (j = 0; j < interpolatedLen - 1; ++j) {\r\n            expanded.push(interpolated[j]);\r\n        }\r\n    }\r\n    expanded.push(path[len - 1]);\r\n\r\n    return expanded;\r\n}\r\nexports.expandPath = expandPath;\r\n\r\n\r\n/**\r\n * Smoothen the give path.\r\n * The original path will not be modified; a new path will be returned.\r\n * @param {PF.Grid} grid\r\n * @param {Array<Array<number>>} path The path\r\n */\r\nfunction smoothenPath(grid, path) {\r\n    var len = path.length,\r\n        x0 = path[0][0],        // path start x\r\n        y0 = path[0][1],        // path start y\r\n        x1 = path[len - 1][0],  // path end x\r\n        y1 = path[len - 1][1],  // path end y\r\n        sx, sy,                 // current start coordinate\r\n        ex, ey,                 // current end coordinate\r\n        newPath,\r\n        i, j, coord, line, testCoord, blocked;\r\n\r\n    sx = x0;\r\n    sy = y0;\r\n    newPath = [[sx, sy]];\r\n\r\n    for (i = 2; i < len; ++i) {\r\n        coord = path[i];\r\n        ex = coord[0];\r\n        ey = coord[1];\r\n        line = interpolate(sx, sy, ex, ey);\r\n\r\n        blocked = false;\r\n        for (j = 1; j < line.length; ++j) {\r\n            testCoord = line[j];\r\n\r\n            if (!grid.isWalkableAt(testCoord[0], testCoord[1])) {\r\n                blocked = true;\r\n                break;\r\n            }\r\n        }\r\n        if (blocked) {\r\n            lastValidCoord = path[i - 1];\r\n            newPath.push(lastValidCoord);\r\n            sx = lastValidCoord[0];\r\n            sy = lastValidCoord[1];\r\n        }\r\n    }\r\n    newPath.push([x1, y1]);\r\n\r\n    return newPath;\r\n}\r\nexports.smoothenPath = smoothenPath;\r\n\r\n\r\n/**\r\n * Compress a path, remove redundant nodes without altering the shape\r\n * The original path is not modified\r\n * @param {Array<Array<number>>} path The path\r\n * @return {Array<Array<number>>} The compressed path\r\n */\r\nfunction compressPath(path) {\r\n\r\n    // nothing to compress\r\n    if(path.length < 3) {\r\n        return path;\r\n    }\r\n\r\n    var compressed = [],\r\n        sx = path[0][0], // start x\r\n        sy = path[0][1], // start y\r\n        px = path[1][0], // second point x\r\n        py = path[1][1], // second point y\r\n        dx = px - sx, // direction between the two points\r\n        dy = py - sy, // direction between the two points\r\n        lx, ly,\r\n        ldx, ldy,\r\n        sq, i;\r\n\r\n    // normalize the direction\r\n    sq = Math.sqrt(dx*dx + dy*dy);\r\n    dx /= sq;\r\n    dy /= sq;\r\n\r\n    // start the new path\r\n    compressed.push([sx,sy]);\r\n\r\n    for(i = 2; i < path.length; i++) {\r\n\r\n        // store the last point\r\n        lx = px;\r\n        ly = py;\r\n\r\n        // store the last direction\r\n        ldx = dx;\r\n        ldy = dy;\r\n\r\n        // next point\r\n        px = path[i][0];\r\n        py = path[i][1];\r\n\r\n        // next direction\r\n        dx = px - lx;\r\n        dy = py - ly;\r\n\r\n        // normalize\r\n        sq = Math.sqrt(dx*dx + dy*dy);\r\n        dx /= sq;\r\n        dy /= sq;\r\n\r\n        // if the direction has changed, store the point\r\n        if ( dx !== ldx || dy !== ldy ) {\r\n            compressed.push([lx,ly]);\r\n        }\r\n    }\r\n\r\n    // store the last point\r\n    compressed.push([px,py]);\r\n\r\n    return compressed;\r\n}\r\nexports.compressPath = compressPath;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/core/Util.js\n// module id = 4\n// module chunks = 0","// tslint:disable no-bitwise\nimport closest = require(\"closest\");\nimport { PointModel } from \"./models/PointModel\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport * as Path from \"paths-js/path\";\n/**\n * @author Dylan Vorster\n */\nexport class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn \"\" + Toolkit.TESTING_UID;\n\t\t}\n\t\treturn \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, c => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === \"x\" ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\t/**\n\t * Finds the closest element as a polyfill\n\t *\n\t * @param  {Element} element  [description]\n\t * @param  {string}  selector [description]\n\t */\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (document.body.closest) {\n\t\t\treturn element.closest(selector);\n\t\t}\n\t\treturn closest(element, selector);\n\t}\n\n\tpublic static generateLinePath(firstPoint: PointModel, lastPoint: PointModel): string {\n\t\treturn `M${firstPoint.x},${firstPoint.y} L ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateCurvePath(firstPoint: PointModel, lastPoint: PointModel, curvy: number = 0): string {\n\t\tvar isHorizontal = Math.abs(firstPoint.x - lastPoint.x) > Math.abs(firstPoint.y - lastPoint.y);\n\t\tvar curvyX = isHorizontal ? curvy : 0;\n\t\tvar curvyY = isHorizontal ? 0 : curvy;\n\n\t\treturn `M${firstPoint.x},${firstPoint.y} C ${firstPoint.x + curvyX},${firstPoint.y + curvyY}\n    ${lastPoint.x - curvyX},${lastPoint.y - curvyY} ${lastPoint.x},${lastPoint.y}`;\n\t}\n\n\tpublic static generateDynamicPath(pathCoords: number[][]) {\n\t\tlet path = Path();\n\t\tpath = path.moveto(pathCoords[0][0] * ROUTING_SCALING_FACTOR, pathCoords[0][1] * ROUTING_SCALING_FACTOR);\n\t\tpathCoords.slice(1).forEach(coords => {\n\t\t\tpath = path.lineto(coords[0] * ROUTING_SCALING_FACTOR, coords[1] * ROUTING_SCALING_FACTOR);\n\t\t});\n\t\treturn path.print();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Toolkit.ts","import { BaseEntity, BaseListener } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport interface BaseModelListener extends BaseListener {\n\tselectionChanged?(event: BaseEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEvent<BaseModel>): void;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class BaseModel<\n\tX extends BaseEntity = BaseEntity,\n\tT extends BaseModelListener = BaseModelListener\n> extends BaseEntity<T> {\n\ttype: string;\n\tselected: boolean;\n\tparent: X;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(id);\n\t\tthis.type = type;\n\t\tthis.selected = false;\n\t}\n\n\tpublic getParent(): X {\n\t\treturn this.parent;\n\t}\n\n\tpublic setParent(parent: X) {\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getSelectedEntities(): BaseModel<any, T>[] {\n\t\tif (this.isSelected()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tpublic deSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.type = ob.type;\n\t\tthis.selected = ob.selected;\n\t}\n\n\tpublic serialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\ttype: this.type,\n\t\t\tselected: this.selected\n\t\t});\n\t}\n\n\tpublic getType(): string {\n\t\treturn this.type;\n\t}\n\n\tpublic getID(): string {\n\t\treturn this.id;\n\t}\n\n\tpublic isSelected(): boolean {\n\t\treturn this.selected;\n\t}\n\n\tpublic setSelected(selected: boolean = true) {\n\t\tthis.selected = selected;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.selectionChanged) {\n\t\t\t\tlistener.selectionChanged({ ...event, isSelected: selected });\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic remove() {\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.entityRemoved) {\n\t\t\t\tlistener.entityRemoved(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/BaseModel.ts","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PointModel extends BaseModel<LinkModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\n\tconstructor(link: LinkModel, points: { x: number; y: number }) {\n\t\tsuper();\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t\tthis.parent = link;\n\t}\n\n\tgetSelectedEntities() {\n\t\tif (super.isSelected() && !this.isConnectedToPort()) {\n\t\t\treturn [this];\n\t\t}\n\t\treturn [];\n\t}\n\n\tisConnectedToPort(): boolean {\n\t\treturn this.parent.getPortForPoint(this) !== null;\n\t}\n\n\tgetLink(): LinkModel {\n\t\treturn this.getParent();\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y\n\t\t});\n\t}\n\n\tremove() {\n\t\t//clear references\n\t\tif (this.parent) {\n\t\t\tthis.parent.removePoint(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tupdateLocation(points: { x: number; y: number }) {\n\t\tthis.x = points.x;\n\t\tthis.y = points.y;\n\t}\n\n\tgetX(): number {\n\t\treturn this.x;\n\t}\n\n\tgetY(): number {\n\t\treturn this.y;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/PointModel.ts","/**\r\n * @namespace PF.Heuristic\r\n * @description A collection of heuristic functions.\r\n */\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Manhattan distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} dx + dy\r\n   */\r\n  manhattan: function(dx, dy) {\r\n      return dx + dy;\r\n  },\r\n\r\n  /**\r\n   * Euclidean distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy)\r\n   */\r\n  euclidean: function(dx, dy) {\r\n      return Math.sqrt(dx * dx + dy * dy);\r\n  },\r\n\r\n  /**\r\n   * Octile distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} sqrt(dx * dx + dy * dy) for grids\r\n   */\r\n  octile: function(dx, dy) {\r\n      var F = Math.SQRT2 - 1;\r\n      return (dx < dy) ? F * dx + dy : F * dy + dx;\r\n  },\r\n\r\n  /**\r\n   * Chebyshev distance.\r\n   * @param {number} dx - Difference in x.\r\n   * @param {number} dy - Difference in y.\r\n   * @return {number} max(dx, dy)\r\n   */\r\n  chebyshev: function(dx, dy) {\r\n      return Math.max(dx, dy);\r\n  }\r\n\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/core/Heuristic.js\n// module id = 8\n// module chunks = 0","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport class NodeModel extends BaseModel<DiagramModel, BaseModelListener> {\n\tx: number;\n\ty: number;\n\textras: any;\n\tports: { [s: string]: PortModel };\n\n\t// calculated post rendering so routing can be done correctly\n\twidth: number;\n\theight: number;\n\n\tconstructor(nodeType: string = \"default\", id?: string) {\n\t\tsuper(nodeType, id);\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.extras = {};\n\t\tthis.ports = {};\n\t}\n\n\tsetPosition(x, y) {\n\t\t//store position\n\t\tlet oldX = this.x;\n\t\tlet oldY = this.y;\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlet point = link.getPointForPort(port);\n\t\t\t\tpoint.x = point.x + x - oldX;\n\t\t\t\tpoint.y = point.y + y - oldY;\n\t\t\t});\n\t\t});\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tgetSelectedEntities() {\n\t\tlet entities = super.getSelectedEntities();\n\n\t\t// add the points of each link that are selected here\n\t\tif (this.isSelected()) {\n\t\t\t_.forEach(this.ports, port => {\n\t\t\t\tentities = entities.concat(\n\t\t\t\t\t_.map(port.getLinks(), link => {\n\t\t\t\t\t\treturn link.getPointForPort(port);\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\treturn entities;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.x = ob.x;\n\t\tthis.y = ob.y;\n\t\tthis.extras = ob.extras;\n\n\t\t//deserialize ports\n\t\t_.forEach(ob.ports, (port: any) => {\n\t\t\tlet portOb = engine.getPortFactory(port.type).getNewInstance();\n\t\t\tportOb.deSerialize(port, engine);\n\t\t\tthis.addPort(portOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tx: this.x,\n\t\t\ty: this.y,\n\t\t\textras: this.extras,\n\t\t\tports: _.map(this.ports, port => {\n\t\t\t\treturn port.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\t// also clone the ports\n\t\tclone.ports = {};\n\t\t_.forEach(this.ports, port => {\n\t\t\tclone.addPort(port.clone(lookupTable));\n\t\t});\n\t}\n\n\tremove() {\n\t\tsuper.remove();\n\t\t_.forEach(this.ports, port => {\n\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\tlink.remove();\n\t\t\t});\n\t\t});\n\t}\n\n\tgetPortFromID(id): PortModel | null {\n\t\tfor (var i in this.ports) {\n\t\t\tif (this.ports[i].id === id) {\n\t\t\t\treturn this.ports[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPort(name: string): PortModel | null {\n\t\treturn this.ports[name];\n\t}\n\n\tgetPorts(): { [s: string]: PortModel } {\n\t\treturn this.ports;\n\t}\n\n\tremovePort(port: PortModel) {\n\t\t//clear the parent node reference\n\t\tif (this.ports[port.name]) {\n\t\t\tthis.ports[port.name].setParent(null);\n\t\t\tdelete this.ports[port.name];\n\t\t}\n\t}\n\n\taddPort<T extends PortModel>(port: T): T {\n\t\tport.setParent(this);\n\t\tthis.ports[port.name] = port;\n\t\treturn port;\n\t}\n\n\tupdateDimensions({ width, height }: { width: number; height: number }) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/NodeModel.ts","import { BaseModel } from \"../models/BaseModel\";\n\nexport abstract class AbstractFactory<T extends BaseModel> {\n\ttype: string;\n\n\tconstructor(name: string) {\n\t\tthis.type = name;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n\n\tabstract getNewInstance(initialConfig?: any): T;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factories/AbstractFactory.ts","import * as PF from \"pathfinding\";\nimport { DiagramEngine } from \"../main\";\n\n/*\nit can be very expensive to calculate routes when every single pixel on the canvas\nis individually represented. Using the factor below, we combine values in order\nto achieve the best trade-off between accuracy and performance.\n*/\nexport const ROUTING_SCALING_FACTOR = 5;\n\nconst pathFinderInstance = new PF.JumpPointFinder({\n\theuristic: PF.Heuristic.manhattan,\n\tdiagonalMovement: PF.DiagonalMovement.Never\n});\n\nexport default class PathFinding {\n\tinstance: any;\n\tdiagramEngine: DiagramEngine;\n\n\tconstructor(diagramEngine: DiagramEngine) {\n\t\tthis.instance = pathFinderInstance;\n\t\tthis.diagramEngine = diagramEngine;\n\t}\n\n\t/**\n\t * Taking as argument a fully unblocked walking matrix, this method\n\t * finds a direct path from point A to B.\n\t */\n\tcalculateDirectPath(\n\t\tfrom: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tto: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t}\n\t): number[][] {\n\t\tconst matrix = this.diagramEngine.getCanvasMatrix();\n\t\tconst grid = new PF.Grid(matrix);\n\n\t\treturn pathFinderInstance.findPath(\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(from.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(from.y / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingX(Math.floor(to.x / ROUTING_SCALING_FACTOR)),\n\t\t\tthis.diagramEngine.translateRoutingY(Math.floor(to.y / ROUTING_SCALING_FACTOR)),\n\t\t\tgrid\n\t\t);\n\t}\n\n\t/**\n\t * Using @link{#calculateDirectPath}'s result as input, we here\n\t * determine the first walkable point found in the matrix that includes\n\t * blocked paths.\n\t */\n\tcalculateLinkStartEndCoords(\n\t\tmatrix: number[][],\n\t\tpath: number[][]\n\t): {\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t};\n\t\tpathToStart: number[][];\n\t\tpathToEnd: number[][];\n\t} {\n\t\tconst startIndex = path.findIndex(point => matrix[point[1]][point[0]] === 0);\n\t\tconst endIndex =\n\t\t\tpath.length -\n\t\t\t1 -\n\t\t\tpath\n\t\t\t\t.slice()\n\t\t\t\t.reverse()\n\t\t\t\t.findIndex(point => matrix[point[1]][point[0]] === 0);\n\n\t\t// are we trying to create a path exclusively through blocked areas?\n\t\t// if so, let's fallback to the linear routing\n\t\tif (startIndex === -1 || endIndex === -1) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst pathToStart = path.slice(0, startIndex);\n\t\tconst pathToEnd = path.slice(endIndex);\n\n\t\treturn {\n\t\t\tstart: {\n\t\t\t\tx: path[startIndex][0],\n\t\t\t\ty: path[startIndex][1]\n\t\t\t},\n\t\t\tend: {\n\t\t\t\tx: path[endIndex][0],\n\t\t\t\ty: path[endIndex][1]\n\t\t\t},\n\t\t\tpathToStart,\n\t\t\tpathToEnd\n\t\t};\n\t}\n\n\t/**\n\t * Puts everything together: merges the paths from/to the centre of the ports,\n\t * with the path calculated around other elements.\n\t */\n\tcalculateDynamicPath(\n\t\troutingMatrix: number[][],\n\t\tstart: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tend: {\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t},\n\t\tpathToStart: number[][],\n\t\tpathToEnd: number[][]\n\t) {\n\t\t// generate the path based on the matrix with obstacles\n\t\tconst grid = new PF.Grid(routingMatrix);\n\t\tconst dynamicPath = pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\n\n\t\t// aggregate everything to have the calculated path ready for rendering\n\t\tconst pathCoords = pathToStart\n\t\t\t.concat(dynamicPath, pathToEnd)\n\t\t\t.map(coords => [\n\t\t\t\tthis.diagramEngine.translateRoutingX(coords[0], true),\n\t\t\t\tthis.diagramEngine.translateRoutingY(coords[1], true)\n\t\t\t]);\n\t\treturn PF.Util.compressPath(pathCoords);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/routing/PathFinding.ts","module.exports = require('./lib/heap');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/heap/index.js\n// module id = 12\n// module chunks = 0","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Base class for the Jump Point Search algorithm\r\n * @param {object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction JumpPointFinderBase(opt) {\r\n    opt = opt || {};\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.trackJumpRecursion = opt.trackJumpRecursion || false;\r\n}\r\n\r\n/**\r\n * Find and return the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nJumpPointFinderBase.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = this.openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = this.startNode = grid.getNodeAt(startX, startY),\r\n        endNode = this.endNode = grid.getNodeAt(endX, endY), node;\r\n\r\n    this.grid = grid;\r\n\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        if (node === endNode) {\r\n            return Util.expandPath(Util.backtrace(endNode));\r\n        }\r\n\r\n        this._identifySuccessors(node);\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\n/**\r\n * Identify successors for the given node. Runs a jump point search in the\r\n * direction of each available neighbor, adding any points found to the open\r\n * list.\r\n * @protected\r\n */\r\nJumpPointFinderBase.prototype._identifySuccessors = function(node) {\r\n    var grid = this.grid,\r\n        heuristic = this.heuristic,\r\n        openList = this.openList,\r\n        endX = this.endNode.x,\r\n        endY = this.endNode.y,\r\n        neighbors, neighbor,\r\n        jumpPoint, i, l,\r\n        x = node.x, y = node.y,\r\n        jx, jy, dx, dy, d, ng, jumpNode,\r\n        abs = Math.abs, max = Math.max;\r\n\r\n    neighbors = this._findNeighbors(node);\r\n    for(i = 0, l = neighbors.length; i < l; ++i) {\r\n        neighbor = neighbors[i];\r\n        jumpPoint = this._jump(neighbor[0], neighbor[1], x, y);\r\n        if (jumpPoint) {\r\n\r\n            jx = jumpPoint[0];\r\n            jy = jumpPoint[1];\r\n            jumpNode = grid.getNodeAt(jx, jy);\r\n\r\n            if (jumpNode.closed) {\r\n                continue;\r\n            }\r\n\r\n            // include distance, as parent may not be immediately adjacent:\r\n            d = Heuristic.octile(abs(jx - x), abs(jy - y));\r\n            ng = node.g + d; // next `g` value\r\n\r\n            if (!jumpNode.opened || ng < jumpNode.g) {\r\n                jumpNode.g = ng;\r\n                jumpNode.h = jumpNode.h || heuristic(abs(jx - endX), abs(jy - endY));\r\n                jumpNode.f = jumpNode.g + jumpNode.h;\r\n                jumpNode.parent = node;\r\n\r\n                if (!jumpNode.opened) {\r\n                    openList.push(jumpNode);\r\n                    jumpNode.opened = true;\r\n                } else {\r\n                    openList.updateItem(jumpNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports = JumpPointFinderBase;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JumpPointFinderBase.js\n// module id = 13\n// module chunks = 0","import { Toolkit } from \"./Toolkit\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"./DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport interface BaseEvent<T extends BaseEntity = any> {\n\tentity: BaseEntity<BaseListener>;\n\tstopPropagation: () => any;\n\tfiring: boolean;\n\tid: string;\n}\n\nexport interface BaseListener<T extends BaseEntity = any> {\n\tlockChanged?(event: BaseEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = \"node\" | \"link\" | \"port\" | \"point\";\n\nexport class BaseEntity<T extends BaseListener = BaseListener> {\n\tpublic listeners: { [s: string]: T };\n\tpublic id: string;\n\tpublic locked: boolean;\n\n\tconstructor(id?: string) {\n\t\tthis.listeners = {};\n\t\tthis.id = id || Toolkit.UID();\n\t\tthis.locked = false;\n\t}\n\n\tgetID() {\n\t\treturn this.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.id]) {\n\t\t\treturn lookupTable[this.id];\n\t\t}\n\t\tlet clone = _.clone(this);\n\t\tclone.id = Toolkit.UID();\n\t\tclone.clearListeners();\n\t\tlookupTable[this.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tpublic deSerialize(data: { [s: string]: any }, engine: DiagramEngine) {\n\t\tthis.id = data.id;\n\t}\n\n\tpublic serialize() {\n\t\treturn {\n\t\t\tid: this.id\n\t\t};\n\t}\n\n\tpublic iterateListeners(cb: (t: T, event: BaseEvent) => any) {\n\t\tlet event: BaseEvent = {\n\t\t\tid: Toolkit.UID(),\n\t\t\tfiring: true,\n\t\t\tentity: this,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t}\n\t\t};\n\n\t\tfor (var i in this.listeners) {\n\t\t\tif (this.listeners.hasOwnProperty(i)) {\n\t\t\t\t// propagation stopped\n\t\t\t\tif (!event.firing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcb(this.listeners[i], event);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic removeListener(listener: string) {\n\t\tif (this.listeners[listener]) {\n\t\t\tdelete this.listeners[listener];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic addListener(listener: T): string {\n\t\tvar uid = Toolkit.UID();\n\t\tthis.listeners[uid] = listener;\n\t\treturn uid;\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.locked = locked;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.lockChanged) {\n\t\t\t\tlistener.lockChanged({ ...event, locked: locked });\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/BaseEntity.ts","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { LinkModel } from \"./LinkModel\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class PortModel extends BaseModel<NodeModel, BaseModelListener> {\n\tname: string;\n\tlinks: { [id: string]: LinkModel };\n\tmaximumLinks: number;\n\n\t// calculated post rendering so routing can be done correctly\n\tx: number;\n\ty: number;\n\twidth: number;\n\theight: number;\n\n\tconstructor(name: string, type?: string, id?: string, maximumLinks?: number) {\n\t\tsuper(type, id);\n\t\tthis.name = name;\n\t\tthis.links = {};\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.name = ob.name;\n\t\tthis.maximumLinks = ob.maximumLinks;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tparentNode: this.parent.id,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.id;\n\t\t\t}),\n\t\t\tmaximumLinks: this.maximumLinks\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.links = {};\n\t\tclone.parentNode = this.getParent().clone(lookupTable);\n\t}\n\n\tgetNode(): NodeModel {\n\t\treturn this.getParent();\n\t}\n\n\tgetName(): string {\n\t\treturn this.name;\n\t}\n\n\tgetMaximumLinks(): number {\n\t\treturn this.maximumLinks;\n\t}\n\n\tsetMaximumLinks(maximumLinks: number) {\n\t\tthis.maximumLinks = maximumLinks;\n\t}\n\n\tremoveLink(link: LinkModel) {\n\t\tdelete this.links[link.getID()];\n\t}\n\n\taddLink(link: LinkModel) {\n\t\tthis.links[link.getID()] = link;\n\t}\n\n\tgetLinks(): { [id: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tpublic createLinkModel(): LinkModel | null {\n\t\tif (_.isFinite(this.maximumLinks)) {\n\t\t\tvar numberOfLinks: number = _.size(this.links);\n\t\t\tif (this.maximumLinks === 1 && numberOfLinks >= 1) {\n\t\t\t\treturn _.values(this.links)[0];\n\t\t\t} else if (numberOfLinks >= this.maximumLinks) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tupdateCoords({ x, y, width, height }: { x: number; y: number; width: number; height: number }) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\treturn true;\n\t}\n\n\tisLocked() {\n\t\treturn super.isLocked() || this.getParent().isLocked();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/PortModel.ts","export class BaseAction {\n\tmouseX: number;\n\tmouseY: number;\n\tms: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tthis.mouseX = mouseX;\n\t\tthis.mouseY = mouseY;\n\t\tthis.ms = new Date().getTime();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/BaseAction.ts","/**\r\n * A node in grid. \r\n * This class holds some basic information about a node and custom \r\n * attributes may be added, depending on the algorithms' needs.\r\n * @constructor\r\n * @param {number} x - The x coordinate of the node on the grid.\r\n * @param {number} y - The y coordinate of the node on the grid.\r\n * @param {boolean} [walkable] - Whether this node is walkable.\r\n */\r\nfunction Node(x, y, walkable) {\r\n    /**\r\n     * The x coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.x = x;\r\n    /**\r\n     * The y coordinate of the node on the grid.\r\n     * @type number\r\n     */\r\n    this.y = y;\r\n    /**\r\n     * Whether this node can be walked through.\r\n     * @type boolean\r\n     */\r\n    this.walkable = (walkable === undefined ? true : walkable);\r\n}\r\n\r\nmodule.exports = Node;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/core/Node.js\n// module id = 17\n// module chunks = 0","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder. Based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching \r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction AStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    //admissible. It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = new Heap(function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        }),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n\r\n    // push the start node into the open list\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the open list is not empty\r\n    while (!openList.empty()) {\r\n        // pop the position of node which has the minimum `f` value.\r\n        node = openList.pop();\r\n        node.closed = true;\r\n\r\n        // if reached the end position, construct the path and return it\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h || weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    openList.push(neighbor);\r\n                    neighbor.opened = true;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    openList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = AStarFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/AStarFinder.js\n// module id = 18\n// module chunks = 0","var Heap       = require('heap');\r\nvar Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * A* path-finder.\r\n * based upon https://github.com/bgrins/javascript-astar\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n */\r\nfunction BiAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    //When diagonal movement is allowed the manhattan heuristic is not admissible\r\n    //It should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var cmp = function(nodeA, nodeB) {\r\n            return nodeA.f - nodeB.f;\r\n        },\r\n        startOpenList = new Heap(cmp),\r\n        endOpenList = new Heap(cmp),\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        heuristic = this.heuristic,\r\n        diagonalMovement = this.diagonalMovement,\r\n        weight = this.weight,\r\n        abs = Math.abs, SQRT2 = Math.SQRT2,\r\n        node, neighbors, neighbor, i, l, x, y, ng,\r\n        BY_START = 1, BY_END = 2;\r\n\r\n    // set the `g` and `f` value of the start node to be 0\r\n    // and push it into the start open list\r\n    startNode.g = 0;\r\n    startNode.f = 0;\r\n    startOpenList.push(startNode);\r\n    startNode.opened = BY_START;\r\n\r\n    // set the `g` and `f` value of the end node to be 0\r\n    // and push it into the open open list\r\n    endNode.g = 0;\r\n    endNode.f = 0;\r\n    endOpenList.push(endNode);\r\n    endNode.opened = BY_END;\r\n\r\n    // while both the open lists are not empty\r\n    while (!startOpenList.empty() && !endOpenList.empty()) {\r\n\r\n        // pop the position of start node which has the minimum `f` value.\r\n        node = startOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_END) {\r\n                return Util.biBacktrace(node, neighbor);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - endX), abs(y - endY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    startOpenList.push(neighbor);\r\n                    neighbor.opened = BY_START;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    startOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n\r\n\r\n        // pop the position of end node which has the minimum `f` value.\r\n        node = endOpenList.pop();\r\n        node.closed = true;\r\n\r\n        // get neigbours of the current node\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened === BY_START) {\r\n                return Util.biBacktrace(neighbor, node);\r\n            }\r\n\r\n            x = neighbor.x;\r\n            y = neighbor.y;\r\n\r\n            // get the distance between current node and the neighbor\r\n            // and calculate the next g score\r\n            ng = node.g + ((x - node.x === 0 || y - node.y === 0) ? 1 : SQRT2);\r\n\r\n            // check if the neighbor has not been inspected yet, or\r\n            // can be reached with smaller cost from the current node\r\n            if (!neighbor.opened || ng < neighbor.g) {\r\n                neighbor.g = ng;\r\n                neighbor.h = neighbor.h ||\r\n                    weight * heuristic(abs(x - startX), abs(y - startY));\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n                neighbor.parent = node;\r\n\r\n                if (!neighbor.opened) {\r\n                    endOpenList.push(neighbor);\r\n                    neighbor.opened = BY_END;\r\n                } else {\r\n                    // the neighbor can be reached with smaller cost.\r\n                    // Since its f value has been updated, we have to\r\n                    // update its position in the open list\r\n                    endOpenList.updateItem(neighbor);\r\n                }\r\n            }\r\n        } // end for each neighbor\r\n    } // end while not open list empty\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiAStarFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BiAStarFinder.js\n// module id = 19\n// module chunks = 0","import { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PortModel } from \"./PortModel\";\nimport { PointModel } from \"./PointModel\";\nimport * as _ from \"lodash\";\nimport { BaseEvent } from \"../BaseEntity\";\nimport { LabelModel } from \"./LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { DiagramModel } from \"./DiagramModel\";\n\nexport interface LinkModelListener extends BaseModelListener {\n\tsourcePortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n\n\ttargetPortChanged?(event: BaseEvent<LinkModel> & { port: null | PortModel }): void;\n}\n\nexport class LinkModel<T extends LinkModelListener = LinkModelListener> extends BaseModel<DiagramModel, T> {\n\tsourcePort: PortModel | null;\n\ttargetPort: PortModel | null;\n\tlabels: LabelModel[];\n\tpoints: PointModel[];\n\textras: {};\n\n\tconstructor(linkType: string = \"default\", id?: string) {\n\t\tsuper(linkType, id);\n\t\tthis.points = [new PointModel(this, { x: 0, y: 0 }), new PointModel(this, { x: 0, y: 0 })];\n\t\tthis.extras = {};\n\t\tthis.sourcePort = null;\n\t\tthis.targetPort = null;\n\t\tthis.labels = [];\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.extras = ob.extras;\n\t\tthis.points = _.map(ob.points || [], (point: { x; y }) => {\n\t\t\tvar p = new PointModel(this, { x: point.x, y: point.y });\n\t\t\tp.deSerialize(point, engine);\n\t\t\treturn p;\n\t\t});\n\n\t\t//deserialize labels\n\t\t_.forEach(ob.labels || [], (label: any) => {\n\t\t\tlet labelOb = engine.getLabelFactory(label.type).getNewInstance();\n\t\t\tlabelOb.deSerialize(label, engine);\n\t\t\tthis.addLabel(labelOb);\n\t\t});\n\n\t\tif (ob.target) {\n\t\t\tthis.setTargetPort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.target)\n\t\t\t\t\t.getPortFromID(ob.targetPort)\n\t\t\t);\n\t\t}\n\n\t\tif (ob.source) {\n\t\t\tthis.setSourcePort(\n\t\t\t\tthis.getParent()\n\t\t\t\t\t.getNode(ob.source)\n\t\t\t\t\t.getPortFromID(ob.sourcePort)\n\t\t\t);\n\t\t}\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tsource: this.sourcePort ? this.sourcePort.getParent().id : null,\n\t\t\tsourcePort: this.sourcePort ? this.sourcePort.id : null,\n\t\t\ttarget: this.targetPort ? this.targetPort.getParent().id : null,\n\t\t\ttargetPort: this.targetPort ? this.targetPort.id : null,\n\t\t\tpoints: _.map(this.points, point => {\n\t\t\t\treturn point.serialize();\n\t\t\t}),\n\t\t\textras: this.extras,\n\t\t\tlabels: _.map(this.labels, label => {\n\t\t\t\treturn label.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tdoClone(lookupTable = {}, clone) {\n\t\tclone.setPoints(\n\t\t\t_.map(this.getPoints(), (point: PointModel) => {\n\t\t\t\treturn point.clone(lookupTable);\n\t\t\t})\n\t\t);\n\t\tif (this.sourcePort) {\n\t\t\tclone.setSourcePort(this.sourcePort.clone(lookupTable));\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tclone.setTargetPort(this.targetPort.clone(lookupTable));\n\t\t}\n\t}\n\n\tremove() {\n\t\tif (this.sourcePort) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t}\n\t\tif (this.targetPort) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\tisLastPoint(point: PointModel) {\n\t\tvar index = this.getPointIndex(point);\n\t\treturn index === this.points.length - 1;\n\t}\n\n\tgetPointIndex(point: PointModel) {\n\t\treturn this.points.indexOf(point);\n\t}\n\n\tgetPointModel(id: string): PointModel | null {\n\t\tfor (var i = 0; i < this.points.length; i++) {\n\t\t\tif (this.points[i].id === id) {\n\t\t\t\treturn this.points[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPortForPoint(point: PointModel): PortModel {\n\t\tif (this.sourcePort !== null && this.getFirstPoint().getID() === point.getID()) {\n\t\t\treturn this.sourcePort;\n\t\t}\n\t\tif (this.targetPort !== null && this.getLastPoint().getID() === point.getID()) {\n\t\t\treturn this.targetPort;\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetPointForPort(port: PortModel): PointModel {\n\t\tif (this.sourcePort !== null && this.sourcePort.getID() === port.getID()) {\n\t\t\treturn this.getFirstPoint();\n\t\t}\n\t\tif (this.targetPort !== null && this.targetPort.getID() === port.getID()) {\n\t\t\treturn this.getLastPoint();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetFirstPoint(): PointModel {\n\t\treturn this.points[0];\n\t}\n\n\tgetLastPoint(): PointModel {\n\t\treturn this.points[this.points.length - 1];\n\t}\n\n\tsetSourcePort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t} else if (this.sourcePort !== null) {\n\t\t\tthis.sourcePort.removeLink(this);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\tthis.sourcePort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.sourcePortChanged) {\n\t\t\t\tlistener.sourcePortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetSourcePort(): PortModel {\n\t\treturn this.sourcePort;\n\t}\n\n\tgetTargetPort(): PortModel {\n\t\treturn this.targetPort;\n\t}\n\n\tsetTargetPort(port: PortModel) {\n\t\tif (port !== null) {\n\t\t\tport.addLink(this);\n\t\t} else if (this.targetPort !== null) {\n\t\t\tthis.targetPort.removeLink(this);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\tthis.targetPort = port;\n\t\tthis.iterateListeners((listener: LinkModelListener, event) => {\n\t\t\tif (listener.targetPortChanged) {\n\t\t\t\tlistener.targetPortChanged({ ...event, port: port });\n\t\t\t}\n\t\t});\n\t}\n\n\tpoint(x: number, y: number): PointModel {\n\t\treturn this.addPoint(this.generatePoint(x, y));\n\t}\n\n\taddLabel(label: LabelModel) {\n\t\tlabel.setParent(this);\n\t\tthis.labels.push(label);\n\t}\n\n\tgetPoints(): PointModel[] {\n\t\treturn this.points;\n\t}\n\n\tsetPoints(points: PointModel[]) {\n\t\t_.forEach(points, point => {\n\t\t\tpoint.setParent(this);\n\t\t});\n\t\tthis.points = points;\n\t}\n\n\tremovePoint(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel), 1);\n\t}\n\n\tremovePointsBefore(pointModel: PointModel) {\n\t\tthis.points.splice(0, this.getPointIndex(pointModel));\n\t}\n\n\tremovePointsAfter(pointModel: PointModel) {\n\t\tthis.points.splice(this.getPointIndex(pointModel) + 1);\n\t}\n\n\tremoveMiddlePoints() {\n\t\tif (this.points.length > 2) {\n\t\t\tthis.points.splice(0, this.points.length - 2);\n\t\t}\n\t}\n\n\taddPoint<P extends PointModel>(pointModel: P, index = 1): P {\n\t\tpointModel.setParent(this);\n\t\tthis.points.splice(index, 0, pointModel);\n\t\treturn pointModel;\n\t}\n\n\tgeneratePoint(x: number = 0, y: number = 0): PointModel {\n\t\treturn new PointModel(this, { x: x, y: y });\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/LinkModel.ts","import * as _ from \"lodash\";\nimport { PortModel } from \"../../models/PortModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLinkModel } from \"./DefaultLinkModel\";\nimport { LinkModel } from \"../../models/LinkModel\";\n\nexport class DefaultPortModel extends PortModel {\n\tin: boolean;\n\tlabel: string;\n\tlinks: { [id: string]: DefaultLinkModel };\n\n\tconstructor(isInput: boolean, name: string, label: string = null, id?: string) {\n\t\tsuper(name, \"default\", id);\n\t\tthis.in = isInput;\n\t\tthis.label = label || name;\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.in = object.in;\n\t\tthis.label = object.label;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tin: this.in,\n\t\t\tlabel: this.label\n\t\t});\n\t}\n\n\tlink(port: PortModel): LinkModel {\n\t\tlet link = this.createLinkModel();\n\t\tlink.setSourcePort(this);\n\t\tlink.setTargetPort(port);\n\t\treturn link;\n\t}\n\n\tcanLinkToPort(port: PortModel): boolean {\n\t\tif (port instanceof DefaultPortModel) {\n\t\t\treturn this.in !== port.in;\n\t\t}\n\t\treturn true;\n\t}\n\n\tcreateLinkModel(): LinkModel {\n\t\tlet link = super.createLinkModel();\n\t\treturn link || new DefaultLinkModel();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/models/DefaultPortModel.ts","/**\n * @author Dylan Vorster\n */\nimport { LinkModel, LinkModelListener } from \"../../models/LinkModel\";\nimport { BaseEvent } from \"../../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { DefaultLabelModel } from \"./DefaultLabelModel\";\nimport { LabelModel } from \"../../models/LabelModel\";\n\nexport interface DefaultLinkModelListener extends LinkModelListener {\n\tcolorChanged?(event: BaseEvent<DefaultLinkModel> & { color: null | string }): void;\n\n\twidthChanged?(event: BaseEvent<DefaultLinkModel> & { width: 0 | number }): void;\n}\n\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelListener> {\n\twidth: number;\n\tcolor: string;\n\tcurvyness: number;\n\n\tconstructor(type: string = \"default\") {\n\t\tsuper(type);\n\t\tthis.color = \"rgba(255,255,255,0.5)\";\n\t\tthis.width = 3;\n\t\tthis.curvyness = 50;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\twidth: this.width,\n\t\t\tcolor: this.color,\n\t\t\tcurvyness: this.curvyness\n\t\t});\n\t}\n\n\tdeSerialize(ob, engine: DiagramEngine) {\n\t\tsuper.deSerialize(ob, engine);\n\t\tthis.color = ob.color;\n\t\tthis.width = ob.width;\n\t\tthis.curvyness = ob.curvyness;\n\t}\n\n\taddLabel(label: LabelModel | string) {\n\t\tif (label instanceof LabelModel) {\n\t\t\treturn super.addLabel(label);\n\t\t}\n\t\tlet labelOb = new DefaultLabelModel();\n\t\tlabelOb.setLabel(label);\n\t\treturn super.addLabel(labelOb);\n\t}\n\n\tsetWidth(width: number) {\n\t\tthis.width = width;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.widthChanged) {\n\t\t\t\tlistener.widthChanged({ ...event, width: width });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetColor(color: string) {\n\t\tthis.color = color;\n\t\tthis.iterateListeners((listener: DefaultLinkModelListener, event: BaseEvent) => {\n\t\t\tif (listener.colorChanged) {\n\t\t\t\tlistener.colorChanged({ ...event, color: color });\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/models/DefaultLinkModel.ts","import { LabelModel } from \"../../models/LabelModel\";\n\nexport class DefaultLabelModel extends LabelModel {\n\tlabel: string;\n\n\tconstructor() {\n\t\tsuper(\"default\");\n\t\tthis.offsetY = -23;\n\t}\n\n\tsetLabel(label: string) {\n\t\tthis.label = label;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/models/DefaultLabelModel.tsx","import { BaseModel } from \"./BaseModel\";\nimport { LinkModel } from \"./LinkModel\";\n\nexport class LabelModel extends BaseModel<LinkModel> {\n\toffsetX: number;\n\toffsetY: number;\n\n\tconstructor(type?: string, id?: string) {\n\t\tsuper(type, id);\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/LabelModel.ts","/**\n * @author Dylan Vorster\n */\n\nexport * from \"./Toolkit\";\nexport * from \"./BaseEntity\";\nexport * from \"./DiagramEngine\";\n\nexport * from \"./defaults/models/DefaultNodeModel\";\nexport * from \"./defaults/models/DefaultPortModel\";\nexport * from \"./defaults/models/DefaultLinkModel\";\nexport * from \"./defaults/models/DefaultLabelModel\";\n\nexport * from \"./defaults/factories/DefaultLinkFactory\";\nexport * from \"./defaults/factories/DefaultNodeFactory\";\nexport * from \"./defaults/factories/DefaultPortFactory\";\nexport * from \"./defaults/factories/DefaultLabelFactory\";\n\nexport * from \"./defaults/widgets/DefaultLinkWidget\";\nexport * from \"./defaults/widgets/DefaultLabelWidget\";\nexport * from \"./defaults/widgets/DefaultNodeWidget\";\nexport * from \"./defaults/widgets/DefaultPortLabelWidget\";\n\nexport * from \"./factories/AbstractFactory\";\nexport * from \"./factories/AbstractLabelFactory\";\nexport * from \"./factories/AbstractLinkFactory\";\nexport * from \"./factories/AbstractNodeFactory\";\nexport * from \"./factories/AbstractPortFactory\";\n\nexport * from \"./routing/PathFinding\";\n\nexport * from \"./actions/BaseAction\";\nexport * from \"./actions/MoveCanvasAction\";\nexport * from \"./actions/MoveItemsAction\";\nexport * from \"./actions/SelectingAction\";\n\nexport * from \"./models/SelectionModel\";\nexport * from \"./models/BaseModel\";\nexport * from \"./models/DiagramModel\";\nexport * from \"./models/LinkModel\";\nexport * from \"./models/NodeModel\";\nexport * from \"./models/PointModel\";\nexport * from \"./models/PortModel\";\nexport * from \"./models/LabelModel\";\n\nexport * from \"./widgets/DiagramWidget\";\nexport * from \"./widgets/LinkWidget\";\nexport * from \"./widgets/NodeWidget\";\nexport * from \"./widgets/PortWidget\";\nexport * from \"./widgets/BaseWidget\";\n\nexport * from \"./widgets/layers/LinkLayerWidget\";\nexport * from \"./widgets/layers/NodeLayerWidget\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { BaseListener, BaseEntity, BaseEvent, BaseEntityType } from \"../BaseEntity\";\nimport * as _ from \"lodash\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"./LinkModel\";\nimport { NodeModel } from \"./NodeModel\";\nimport { PortModel } from \"./PortModel\";\nimport { BaseModel, BaseModelListener } from \"./BaseModel\";\nimport { PointModel } from \"./PointModel\";\n/**\n * @author Dylan Vorster\n *\n */\nexport interface DiagramListener extends BaseListener {\n\tnodesUpdated?(event: BaseEvent & { node: NodeModel; isCreated: boolean }): void;\n\n\tlinksUpdated?(event: BaseEvent & { link: LinkModel; isCreated: boolean }): void;\n\n\toffsetUpdated?(event: BaseEvent<DiagramModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEvent<DiagramModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEvent<DiagramModel> & { size: number }): void;\n}\n\n/**\n *\n */\nexport class DiagramModel extends BaseEntity<DiagramListener> {\n\t//models\n\tlinks: { [s: string]: LinkModel };\n\tnodes: { [s: string]: NodeModel };\n\n\t//control variables\n\toffsetX: number;\n\toffsetY: number;\n\tzoom: number;\n\trendered: boolean;\n\tgridSize: number;\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.links = {};\n\t\tthis.nodes = {};\n\n\t\tthis.offsetX = 0;\n\t\tthis.offsetY = 0;\n\t\tthis.zoom = 100;\n\t\tthis.rendered = false;\n\t\tthis.gridSize = 0;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.gridSize = size;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.gridUpdated) {\n\t\t\t\tlistener.gridUpdated({ ...event, size: size });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetGridPosition(pos) {\n\t\tif (this.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.gridSize * Math.floor((pos + this.gridSize / 2) / this.gridSize);\n\t}\n\n\tdeSerializeDiagram(object: any, diagramEngine: DiagramEngine) {\n\t\tthis.deSerialize(object, diagramEngine);\n\n\t\tthis.offsetX = object.offsetX;\n\t\tthis.offsetY = object.offsetY;\n\t\tthis.zoom = object.zoom;\n\t\tthis.gridSize = object.gridSize;\n\n\t\t// deserialize nodes\n\t\t_.forEach(object.nodes, (node: any) => {\n\t\t\tlet nodeOb = diagramEngine.getNodeFactory(node.type).getNewInstance(node);\n\t\t\tnodeOb.setParent(this);\n\t\t\tnodeOb.deSerialize(node, diagramEngine);\n\t\t\tthis.addNode(nodeOb);\n\t\t});\n\n\t\t// deserialze links\n\t\t_.forEach(object.links, (link: any) => {\n\t\t\tlet linkOb = diagramEngine.getLinkFactory(link.type).getNewInstance();\n\t\t\tlinkOb.setParent(this);\n\t\t\tlinkOb.deSerialize(link, diagramEngine);\n\t\t\tthis.addLink(linkOb);\n\t\t});\n\t}\n\n\tserializeDiagram() {\n\t\treturn _.merge(this.serialize(), {\n\t\t\toffsetX: this.offsetX,\n\t\t\toffsetY: this.offsetY,\n\t\t\tzoom: this.zoom,\n\t\t\tgridSize: this.gridSize,\n\t\t\tlinks: _.map(this.links, link => {\n\t\t\t\treturn link.serialize();\n\t\t\t}),\n\t\t\tnodes: _.map(this.nodes, node => {\n\t\t\t\treturn node.serialize();\n\t\t\t})\n\t\t});\n\t}\n\n\tclearSelection(ignore: BaseModel<BaseEntity, BaseModelListener> | null = null) {\n\t\t_.forEach(this.getSelectedItems(), element => {\n\t\t\tif (ignore && ignore.getID() === element.getID()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telement.setSelected(false); //TODO dont fire the listener\n\t\t});\n\t}\n\n\tgetSelectedItems(...filters: BaseEntityType[]): BaseModel<BaseEntity, BaseModelListener>[] {\n\t\tif (!Array.isArray(filters)) {\n\t\t\tfilters = [filters];\n\t\t}\n\t\tvar items = [];\n\n\t\t// run through nodes\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.nodes, node => {\n\t\t\t\treturn node.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t// find all the links\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn link.getSelectedEntities();\n\t\t\t})\n\t\t);\n\n\t\t//find all points\n\t\titems = items.concat(\n\t\t\t_.flatMap(this.links, link => {\n\t\t\t\treturn _.flatMap(link.points, point => {\n\t\t\t\t\treturn point.getSelectedEntities();\n\t\t\t\t});\n\t\t\t})\n\t\t);\n\n\t\titems = _.uniq(items);\n\n\t\tif (filters.length > 0) {\n\t\t\titems = _.filter(_.uniq(items), (item: BaseModel<any>) => {\n\t\t\t\tif (_.includes(filters, \"node\") && item instanceof NodeModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"link\") && item instanceof LinkModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"port\") && item instanceof PortModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (_.includes(filters, \"point\") && item instanceof PointModel) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.zoom = zoom;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.zoomUpdated) {\n\t\t\t\tlistener.zoomUpdated({ ...event, zoom: zoom });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.offsetY = offsetY;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.offsetX = offsetX;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\tsetOffsetY(offsetY: number) {\n\t\tthis.offsetY = offsetY;\n\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.offsetUpdated) {\n\t\t\t\tlistener.offsetUpdated({ ...event, offsetX: this.offsetX, offsetY: this.offsetY });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.zoom;\n\t}\n\n\tgetNode(node: string | NodeModel): NodeModel | null {\n\t\tif (node instanceof NodeModel) {\n\t\t\treturn node;\n\t\t}\n\t\tif (!this.nodes[node]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.nodes[node];\n\t}\n\n\tgetLink(link: string | LinkModel): LinkModel | null {\n\t\tif (link instanceof LinkModel) {\n\t\t\treturn link;\n\t\t}\n\t\tif (!this.links[link]) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.links[link];\n\t}\n\n\taddAll(...models: BaseModel[]): BaseModel[] {\n\t\t_.forEach(models, model => {\n\t\t\tif (model instanceof LinkModel) {\n\t\t\t\tthis.addLink(model);\n\t\t\t} else if (model instanceof NodeModel) {\n\t\t\t\tthis.addNode(model);\n\t\t\t}\n\t\t});\n\t\treturn models;\n\t}\n\n\taddLink(link: LinkModel): LinkModel {\n\t\tlink.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeLink(link);\n\t\t\t}\n\t\t});\n\t\tthis.links[link.getID()] = link;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn link;\n\t}\n\n\taddNode(node: NodeModel): NodeModel {\n\t\tnode.addListener({\n\t\t\tentityRemoved: () => {\n\t\t\t\tthis.removeNode(node);\n\t\t\t}\n\t\t});\n\t\tthis.nodes[node.getID()] = node;\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node, isCreated: true });\n\t\t\t}\n\t\t});\n\t\treturn node;\n\t}\n\n\tremoveLink(link: LinkModel | string) {\n\t\tlink = this.getLink(link);\n\t\tdelete this.links[link.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.linksUpdated) {\n\t\t\t\tlistener.linksUpdated({ ...event, link: link as LinkModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tremoveNode(node: NodeModel | string) {\n\t\tnode = this.getNode(node);\n\t\tdelete this.nodes[node.getID()];\n\t\tthis.iterateListeners((listener, event) => {\n\t\t\tif (listener.nodesUpdated) {\n\t\t\t\tlistener.nodesUpdated({ ...event, node: node as NodeModel, isCreated: false });\n\t\t\t}\n\t\t});\n\t}\n\n\tgetLinks(): { [s: string]: LinkModel } {\n\t\treturn this.links;\n\t}\n\n\tgetNodes(): { [s: string]: NodeModel } {\n\t\treturn this.nodes;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/DiagramModel.ts","import { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { AbstractPortFactory } from \"../../factories/AbstractPortFactory\";\n\nexport class DefaultPortFactory extends AbstractPortFactory<DefaultPortModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultPortModel {\n\t\treturn new DefaultPortModel(true, \"unknown\");\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/factories/DefaultPortFactory.tsx","import { PortModel } from \"../models/PortModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractPortFactory<T extends PortModel = PortModel> extends AbstractFactory<T> {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factories/AbstractPortFactory.ts","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLabelFactory } from \"../../factories/AbstractLabelFactory\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { DefaultLabelWidget } from \"../widgets/DefaultLabelWidget\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLabelFactory extends AbstractLabelFactory<DefaultLabelModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, label: DefaultLabelModel): JSX.Element {\n\t\treturn <DefaultLabelWidget model={label} />;\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLabelModel {\n\t\treturn new DefaultLabelModel();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/factories/DefaultLabelFactory.tsx","import { LabelModel } from \"../models/LabelModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLabelFactory<T extends LabelModel = LabelModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factories/AbstractLabelFactory.ts","import * as React from \"react\";\nimport { DefaultLabelModel } from \"../models/DefaultLabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLabelWidgetProps extends BaseWidgetProps {\n\tmodel: DefaultLabelModel;\n}\n\nexport class DefaultLabelWidget extends BaseWidget<DefaultLabelWidgetProps> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-label\", props);\n\t}\n\n\trender() {\n\t\treturn <div {...this.getProps()}>{this.props.model.label}</div>;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/widgets/DefaultLabelWidget.tsx","import { DefaultPortModel } from \"./DefaultPortModel\";\nimport * as _ from \"lodash\";\n\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeModel extends NodeModel {\n\tname: string;\n\tcolor: string;\n\tports: { [s: string]: DefaultPortModel };\n\n\tconstructor(name: string = \"Untitled\", color: string = \"rgb(0,192,255)\") {\n\t\tsuper(\"default\");\n\t\tthis.name = name;\n\t\tthis.color = color;\n\t}\n\n\taddInPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(true, Toolkit.UID(), label));\n\t}\n\n\taddOutPort(label: string): DefaultPortModel {\n\t\treturn this.addPort(new DefaultPortModel(false, Toolkit.UID(), label));\n\t}\n\n\tdeSerialize(object, engine: DiagramEngine) {\n\t\tsuper.deSerialize(object, engine);\n\t\tthis.name = object.name;\n\t\tthis.color = object.color;\n\t}\n\n\tserialize() {\n\t\treturn _.merge(super.serialize(), {\n\t\t\tname: this.name,\n\t\t\tcolor: this.color\n\t\t});\n\t}\n\n\tgetInPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn portModel.in;\n\t\t});\n\t}\n\n\tgetOutPorts(): DefaultPortModel[] {\n\t\treturn _.filter(this.ports, portModel => {\n\t\t\treturn !portModel.in;\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/models/DefaultNodeModel.ts","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { Toolkit } from \"../../Toolkit\";\nimport { DefaultLinkFactory } from \"../factories/DefaultLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\nimport PathFinding from \"../../routing/PathFinding\";\nimport * as _ from \"lodash\";\nimport { LabelModel } from \"../../models/LabelModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultLinkProps extends BaseWidgetProps {\n\tcolor?: string;\n\twidth?: number;\n\tsmooth?: boolean;\n\tlink: DefaultLinkModel;\n\tdiagramEngine: DiagramEngine;\n\tpointAdded?: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface DefaultLinkState {\n\tselected: boolean;\n}\n\nexport class DefaultLinkWidget extends BaseWidget<DefaultLinkProps, DefaultLinkState> {\n\tpublic static defaultProps: DefaultLinkProps = {\n\t\tcolor: \"black\",\n\t\twidth: 3,\n\t\tlink: null,\n\t\tengine: null,\n\t\tsmooth: false,\n\t\tdiagramEngine: null\n\t};\n\n\t// DOM references to the label and paths (if label is given), used to calculate dynamic positioning\n\trefLabels: { [id: string]: HTMLElement };\n\trefPaths: SVGPathElement[];\n\n\tpathFinding: PathFinding; // only set when smart routing is active\n\n\tconstructor(props: DefaultLinkProps) {\n\t\tsuper(\"srd-default-link\", props);\n\n\t\tthis.refLabels = {};\n\t\tthis.refPaths = [];\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\n\t\tif (props.diagramEngine.isSmartRoutingEnabled()) {\n\t\t\tthis.pathFinding = new PathFinding(this.props.diagramEngine);\n\t\t}\n\t}\n\n\tcalculateAllLabelPosition() {\n\t\t_.forEach(this.props.link.labels, (label, index) => {\n\t\t\tthis.calculateLabelPosition(label, index + 1);\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.link.labels.length > 0) {\n\t\t\twindow.requestAnimationFrame(this.calculateAllLabelPosition.bind(this));\n\t\t}\n\t}\n\n\taddPointToLink = (event: MouseEvent, index: number): void => {\n\t\tif (\n\t\t\t!event.shiftKey &&\n\t\t\t!this.props.diagramEngine.isModelLocked(this.props.link) &&\n\t\t\tthis.props.link.points.length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()\n\t\t) {\n\t\t\tconst point = new PointModel(this.props.link, this.props.diagramEngine.getRelativeMousePoint(event));\n\t\t\tpoint.setSelected(true);\n\t\t\tthis.forceUpdate();\n\t\t\tthis.props.link.addPoint(point, index);\n\t\t\tthis.props.pointAdded(point, event);\n\t\t}\n\t};\n\n\tgeneratePoint(pointIndex: number): JSX.Element {\n\t\tlet x = this.props.link.points[pointIndex].x;\n\t\tlet y = this.props.link.points[pointIndex].y;\n\n\t\treturn (\n\t\t\t<g key={\"point-\" + this.props.link.points[pointIndex].id}>\n\t\t\t\t<circle\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={5}\n\t\t\t\t\tclassName={\n\t\t\t\t\t\t\"point \" +\n\t\t\t\t\t\tthis.bem(\"__point\") +\n\t\t\t\t\t\t(this.props.link.points[pointIndex].isSelected() ? this.bem(\"--point-selected\") : \"\")\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<circle\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t\t}}\n\t\t\t\t\tdata-id={this.props.link.points[pointIndex].id}\n\t\t\t\t\tdata-linkid={this.props.link.id}\n\t\t\t\t\tcx={x}\n\t\t\t\t\tcy={y}\n\t\t\t\t\tr={15}\n\t\t\t\t\topacity={0}\n\t\t\t\t\tclassName={\"point \" + this.bem(\"__point\")}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n\n\tgenerateLabel(label: LabelModel) {\n\t\tconst canvas = this.props.diagramEngine.canvas as HTMLElement;\n\t\treturn (\n\t\t\t<foreignObject\n\t\t\t\tkey={label.id}\n\t\t\t\tclassName={this.bem(\"__label\")}\n\t\t\t\twidth={canvas.offsetWidth}\n\t\t\t\theight={canvas.offsetHeight}\n\t\t\t>\n\t\t\t\t<div ref={ref => (this.refLabels[label.id] = ref)}>\n\t\t\t\t\t{this.props.diagramEngine\n\t\t\t\t\t\t.getFactoryForLabel(label)\n\t\t\t\t\t\t.generateReactWidget(this.props.diagramEngine, label)}\n\t\t\t\t</div>\n\t\t\t</foreignObject>\n\t\t);\n\t}\n\n\tgenerateLink(path: string, extraProps: any, id: string | number): JSX.Element {\n\t\tvar props = this.props;\n\n\t\tvar Bottom = React.cloneElement(\n\t\t\t(props.diagramEngine.getFactoryForLink(this.props.link) as DefaultLinkFactory).generateLinkSegment(\n\t\t\t\tthis.props.link,\n\t\t\t\tthis,\n\t\t\t\tthis.state.selected || this.props.link.isSelected(),\n\t\t\t\tpath\n\t\t\t),\n\t\t\t{\n\t\t\t\tref: ref => ref && this.refPaths.push(ref)\n\t\t\t}\n\t\t);\n\n\t\tvar Top = React.cloneElement(Bottom, {\n\t\t\t...extraProps,\n\t\t\tstrokeLinecap: \"round\",\n\t\t\tonMouseLeave: () => {\n\t\t\t\tthis.setState({ selected: false });\n\t\t\t},\n\t\t\tonMouseEnter: () => {\n\t\t\t\tthis.setState({ selected: true });\n\t\t\t},\n\t\t\tref: null,\n\t\t\t\"data-linkid\": this.props.link.getID(),\n\t\t\tstrokeOpacity: this.state.selected ? 0.1 : 0,\n\t\t\tstrokeWidth: 20,\n\t\t\tonContextMenu: () => {\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(this.props.link)) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tthis.props.link.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn (\n\t\t\t<g key={\"link-\" + id}>\n\t\t\t\t{Bottom}\n\t\t\t\t{Top}\n\t\t\t</g>\n\t\t);\n\t}\n\n\tfindPathAndRelativePositionToRenderLabel = (index: number): { path: any; position: number } => {\n\t\t// an array to hold all path lengths, making sure we hit the DOM only once to fetch this information\n\t\tconst lengths = this.refPaths.map(path => path.getTotalLength());\n\n\t\t// calculate the point where we want to display the label\n\t\tlet labelPosition =\n\t\t\tlengths.reduce((previousValue, currentValue) => previousValue + currentValue, 0) *\n\t\t\t(index / (this.props.link.labels.length + 1));\n\n\t\t// find the path where the label will be rendered and calculate the relative position\n\t\tlet pathIndex = 0;\n\t\twhile (pathIndex < this.refPaths.length) {\n\t\t\tif (labelPosition - lengths[pathIndex] < 0) {\n\t\t\t\treturn {\n\t\t\t\t\tpath: this.refPaths[pathIndex],\n\t\t\t\t\tposition: labelPosition\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// keep searching\n\t\t\tlabelPosition -= lengths[pathIndex];\n\t\t\tpathIndex++;\n\t\t}\n\t};\n\n\tcalculateLabelPosition = (label, index: number) => {\n\t\tif (!this.refLabels[label.id]) {\n\t\t\t// no label? nothing to do here\n\t\t\treturn;\n\t\t}\n\n\t\tconst { path, position } = this.findPathAndRelativePositionToRenderLabel(index);\n\n\t\tconst labelDimensions = {\n\t\t\twidth: this.refLabels[label.id].offsetWidth,\n\t\t\theight: this.refLabels[label.id].offsetHeight\n\t\t};\n\n\t\tconst pathCentre = path.getPointAtLength(position);\n\n\t\tconst labelCoordinates = {\n\t\t\tx: pathCentre.x - labelDimensions.width / 2 + label.offsetX,\n\t\t\ty: pathCentre.y - labelDimensions.height / 2 + label.offsetY\n\t\t};\n\t\tthis.refLabels[label.id].setAttribute(\n\t\t\t\"style\",\n\t\t\t`transform: translate(${labelCoordinates.x}px, ${labelCoordinates.y}px);`\n\t\t);\n\t};\n\n\t/**\n\t * Smart routing is only applicable when all conditions below are true:\n\t * - smart routing is set to true on the engine\n\t * - current link is between two nodes (not between a node and an empty point)\n\t * - no custom points exist along the line\n\t */\n\tisSmartRoutingApplicable(): boolean {\n\t\tconst { diagramEngine, link } = this.props;\n\n\t\tif (!diagramEngine.isSmartRoutingEnabled()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.points.length !== 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (link.sourcePort === null || link.targetPort === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\trender() {\n\t\tconst { diagramEngine } = this.props;\n\t\tif (!diagramEngine.nodesRendered) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//ensure id is present for all points on the path\n\t\tvar points = this.props.link.points;\n\t\tvar paths = [];\n\n\t\tif (this.isSmartRoutingApplicable()) {\n\t\t\t// first step: calculate a direct path between the points being linked\n\t\t\tconst directPathCoords = this.pathFinding.calculateDirectPath(_.first(points), _.last(points));\n\n\t\t\tconst routingMatrix = diagramEngine.getRoutingMatrix();\n\t\t\t// now we need to extract, from the routing matrix, the very first walkable points\n\t\t\t// so they can be used as origin and destination of the link to be created\n\t\t\tconst smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\n\n\t\t\tif (smartLink) {\n\t\t\t\tconst { start, end, pathToStart, pathToEnd } = smartLink;\n\n\t\t\t\t// second step: calculate a path avoiding hitting other elements\n\t\t\t\tconst simplifiedPath = this.pathFinding.calculateDynamicPath(\n\t\t\t\t\troutingMatrix,\n\t\t\t\t\tstart,\n\t\t\t\t\tend,\n\t\t\t\t\tpathToStart,\n\t\t\t\t\tpathToEnd\n\t\t\t\t);\n\n\t\t\t\tpaths.push(\n\t\t\t\t\t//smooth: boolean, extraProps: any, id: string | number, firstPoint: PointModel, lastPoint: PointModel\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateDynamicPath(simplifiedPath),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// true when smart routing was skipped or not enabled.\n\t\t// See @link{#isSmartRoutingApplicable()}.\n\t\tif (paths.length === 0) {\n\t\t\tif (points.length === 2) {\n\t\t\t\tvar isHorizontal = Math.abs(points[0].x - points[1].x) > Math.abs(points[0].y - points[1].y);\n\t\t\t\tvar xOrY = isHorizontal ? \"x\" : \"y\";\n\n\t\t\t\t//draw the smoothing\n\t\t\t\t//if the points are too close, just draw a straight line\n\t\t\t\tvar margin = 50;\n\t\t\t\tif (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\n\t\t\t\t\tmargin = 5;\n\t\t\t\t}\n\n\t\t\t\tvar pointLeft = points[0];\n\t\t\t\tvar pointRight = points[1];\n\n\t\t\t\t//some defensive programming to make sure the smoothing is\n\t\t\t\t//always in the right direction\n\t\t\t\tif (pointLeft[xOrY] > pointRight[xOrY]) {\n\t\t\t\t\tpointLeft = points[1];\n\t\t\t\t\tpointRight = points[0];\n\t\t\t\t}\n\n\t\t\t\tpaths.push(\n\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\tToolkit.generateCurvePath(pointLeft, pointRight, this.props.link.curvyness),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tonMouseDown: event => {\n\t\t\t\t\t\t\t\tthis.addPointToLink(event, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"0\"\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t// draw the link as dangeling\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//draw the multiple anchors and complex line instead\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tpaths.push(\n\t\t\t\t\t\tthis.generateLink(\n\t\t\t\t\t\t\tToolkit.generateLinePath(points[j], points[j + 1]),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"data-linkid\": this.props.link.id,\n\t\t\t\t\t\t\t\t\"data-point\": j,\n\t\t\t\t\t\t\t\tonMouseDown: (event: MouseEvent) => {\n\t\t\t\t\t\t\t\t\tthis.addPointToLink(event, j + 1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tj\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t//render the circles\n\t\t\t\tfor (var i = 1; i < points.length - 1; i++) {\n\t\t\t\t\tpaths.push(this.generatePoint(i));\n\t\t\t\t}\n\n\t\t\t\tif (this.props.link.targetPort === null) {\n\t\t\t\t\tpaths.push(this.generatePoint(points.length - 1));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.refPaths = [];\n\t\treturn (\n\t\t\t<g {...this.getProps()}>\n\t\t\t\t{paths}\n\t\t\t\t{_.map(this.props.link.labels, labelModel => {\n\t\t\t\t\treturn this.generateLabel(labelModel);\n\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/widgets/DefaultLinkWidget.tsx","import { LinkModel } from \"../models/LinkModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractLinkFactory<T extends LinkModel = LinkModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, link: T): JSX.Element;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factories/AbstractLinkFactory.ts","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport { DefaultPortLabel } from \"./DefaultPortLabelWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultNodeProps extends BaseWidgetProps {\n\tnode: DefaultNodeModel;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface DefaultNodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeWidget extends BaseWidget<DefaultNodeProps, DefaultNodeState> {\n\tconstructor(props: DefaultNodeProps) {\n\t\tsuper(\"srd-default-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tgeneratePort(port) {\n\t\treturn <DefaultPortLabel model={port} key={port.id} />;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div {...this.getProps()} style={{ background: this.props.node.color }}>\n\t\t\t\t<div className={this.bem(\"__title\")}>\n\t\t\t\t\t<div className={this.bem(\"__name\")}>{this.props.node.name}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={this.bem(\"__ports\")}>\n\t\t\t\t\t<div className={this.bem(\"__in\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getInPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={this.bem(\"__out\")}>\n\t\t\t\t\t\t{_.map(this.props.node.getOutPorts(), this.generatePort.bind(this))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/widgets/DefaultNodeWidget.tsx","import * as React from \"react\";\nimport { DefaultPortModel } from \"../models/DefaultPortModel\";\nimport { PortWidget } from \"../../widgets/PortWidget\";\nimport { BaseWidget, BaseWidgetProps } from \"../../widgets/BaseWidget\";\n\nexport interface DefaultPortLabelProps extends BaseWidgetProps {\n\tmodel: DefaultPortModel;\n}\n\nexport interface DefaultPortLabelState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultPortLabel extends BaseWidget<DefaultPortLabelProps, DefaultPortLabelState> {\n\tconstructor(props) {\n\t\tsuper(\"srd-default-port\", props);\n\t}\n\n\tgetClassName() {\n\t\treturn super.getClassName() + (this.props.model.in ? this.bem(\"--in\") : this.bem(\"--out\"));\n\t}\n\n\trender() {\n\t\tvar port = <PortWidget node={this.props.model.getParent()} name={this.props.model.name} />;\n\t\tvar label = <div className=\"name\">{this.props.model.label}</div>;\n\n\t\treturn (\n\t\t\t<div {...this.getProps()}>\n\t\t\t\t{this.props.model.in ? port : label}\n\t\t\t\t{this.props.model.in ? label : port}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/widgets/DefaultPortLabelWidget.tsx","import * as React from \"react\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface PortProps extends BaseWidgetProps {\n\tname: string;\n\tnode: NodeModel;\n}\n\nexport interface PortState {\n\tselected: boolean;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class PortWidget extends BaseWidget<PortProps, PortState> {\n\tconstructor(props: PortProps) {\n\t\tsuper(\"srd-port\", props);\n\t\tthis.state = {\n\t\t\tselected: false\n\t\t};\n\t}\n\n\tgetClassName() {\n\t\treturn \"port \" + super.getClassName() + (this.state.selected ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\tthis.setState({ selected: true });\n\t\t\t\t}}\n\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\tthis.setState({ selected: false });\n\t\t\t\t}}\n\t\t\t\tdata-name={this.props.name}\n\t\t\t\tdata-nodeid={this.props.node.getID()}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/PortWidget.tsx","import { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { AbstractFactory } from \"./AbstractFactory\";\n\nexport abstract class AbstractNodeFactory<T extends NodeModel = NodeModel> extends AbstractFactory<T> {\n\tabstract generateReactWidget(diagramEngine: DiagramEngine, node: T): JSX.Element;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/factories/AbstractNodeFactory.ts","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class MoveCanvasAction extends BaseAction {\n\tinitialOffsetX: number;\n\tinitialOffsetY: number;\n\n\tconstructor(mouseX: number, mouseY: number, diagramModel: DiagramModel) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.initialOffsetX = diagramModel.getOffsetX();\n\t\tthis.initialOffsetY = diagramModel.getOffsetY();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/MoveCanvasAction.ts","import { BaseAction } from \"./BaseAction\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { DiagramEngine } from \"../DiagramEngine\";\n\nexport class MoveItemsAction extends BaseAction {\n\tselectionModels: SelectionModel[];\n\tmoved: boolean;\n\n\tconstructor(mouseX: number, mouseY: number, diagramEngine: DiagramEngine) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.moved = false;\n\t\tdiagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\n\t\tvar selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\n\n\t\t//dont allow items which are locked to move\n\t\tselectedItems = selectedItems.filter(item => {\n\t\t\treturn !diagramEngine.isModelLocked(item);\n\t\t});\n\n\t\tthis.selectionModels = selectedItems.map((item: PointModel | NodeModel) => {\n\t\t\treturn {\n\t\t\t\tmodel: item,\n\t\t\t\tinitialX: item.x,\n\t\t\t\tinitialY: item.y\n\t\t\t};\n\t\t});\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/MoveItemsAction.ts","import { BaseAction } from \"./BaseAction\";\nimport { DiagramModel } from \"../models/DiagramModel\";\n\nexport class SelectingAction extends BaseAction {\n\tmouseX2: number;\n\tmouseY2: number;\n\n\tconstructor(mouseX: number, mouseY: number) {\n\t\tsuper(mouseX, mouseY);\n\t\tthis.mouseX2 = mouseX;\n\t\tthis.mouseY2 = mouseY;\n\t}\n\n\tgetBoxDimensions() {\n\t\treturn {\n\t\t\tleft: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\ttop: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\n\t\t\twidth: Math.abs(this.mouseX2 - this.mouseX),\n\t\t\theight: Math.abs(this.mouseY2 - this.mouseY),\n\t\t\tright: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\n\t\t\tbottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\n\t\t};\n\t}\n\n\tcontainsElement(x: number, y: number, diagramModel: DiagramModel): boolean {\n\t\tvar z = diagramModel.getZoomLevel() / 100.0;\n\t\tlet dimensions = this.getBoxDimensions();\n\n\t\treturn (\n\t\t\tx * z + diagramModel.getOffsetX() > dimensions.left &&\n\t\t\tx * z + diagramModel.getOffsetX() < dimensions.right &&\n\t\t\ty * z + diagramModel.getOffsetY() > dimensions.top &&\n\t\t\ty * z + diagramModel.getOffsetY() < dimensions.bottom\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/SelectingAction.ts","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { LinkWidget } from \"../LinkWidget\";\nimport * as _ from \"lodash\";\nimport { PointModel } from \"../../models/PointModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface LinkLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\tpointAdded: (point: PointModel, event: MouseEvent) => any;\n}\n\nexport interface LinkLayerState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkLayerWidget extends BaseWidget<LinkLayerProps, LinkLayerState> {\n\tconstructor(props: LinkLayerProps) {\n\t\tsuper(\"srd-link-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<svg\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{//only perform these actions when we have a diagram\n\t\t\t\tthis.props.diagramEngine.canvas &&\n\t\t\t\t\t_.map(diagramModel.getLinks(), link => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tthis.props.diagramEngine.nodesRendered &&\n\t\t\t\t\t\t\t!this.props.diagramEngine.linksThatHaveInitiallyRendered[link.id]\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (link.sourcePort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.points[0].updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.sourcePort);\n\t\t\t\t\t\t\t\t\tlink.sourcePort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (link.targetPort !== null) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst portCenter = this.props.diagramEngine.getPortCenter(link.targetPort);\n\t\t\t\t\t\t\t\t\t_.last(link.points).updateLocation(portCenter);\n\n\t\t\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(link.targetPort);\n\t\t\t\t\t\t\t\t\tlink.targetPort.updateCoords(portCoords);\n\n\t\t\t\t\t\t\t\t\tthis.props.diagramEngine.linksThatHaveInitiallyRendered[link.id] = true;\n\t\t\t\t\t\t\t\t} catch (ignore) {\n\t\t\t\t\t\t\t\t\t/*noop*/\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//generate links\n\t\t\t\t\t\tvar generatedLink = this.props.diagramEngine.generateWidgetForLink(link);\n\t\t\t\t\t\tif (!generatedLink) {\n\t\t\t\t\t\t\tthrow new Error(`no link generated for type: ${link.getType()}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LinkWidget key={link.getID()} link={link} diagramEngine={this.props.diagramEngine}>\n\t\t\t\t\t\t\t\t{React.cloneElement(generatedLink, {\n\t\t\t\t\t\t\t\t\tpointAdded: this.props.pointAdded\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</LinkWidget>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t</svg>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/layers/LinkLayerWidget.tsx","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface LinkProps extends BaseWidgetProps {\n\tlink: LinkModel;\n\tdiagramEngine: DiagramEngine;\n\tchildren?: any;\n}\n\nexport interface LinkState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class LinkWidget extends BaseWidget<LinkProps, LinkState> {\n\tconstructor(props: LinkProps) {\n\t\tsuper(\"srd-link\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.link);\n\t}\n\n\trender() {\n\t\treturn this.props.children;\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/LinkWidget.tsx","import * as React from \"react\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { NodeWidget } from \"../NodeWidget\";\nimport { NodeModel } from \"../../models/NodeModel\";\nimport { BaseWidget, BaseWidgetProps } from \"../BaseWidget\";\n\nexport interface NodeLayerProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeLayerState {}\n\nexport class NodeLayerWidget extends BaseWidget<NodeLayerProps, NodeLayerState> {\n\tconstructor(props: NodeLayerProps) {\n\t\tsuper(\"srd-node-layer\", props);\n\t\tthis.state = {};\n\t}\n\n\tupdateNodeDimensions = () => {\n\t\tif (!this.props.diagramEngine.nodesRendered) {\n\t\t\tconst diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\t\t_.map(diagramModel.getNodes(), node => {\n\t\t\t\tnode.updateDimensions(this.props.diagramEngine.getNodeDimensions(node));\n\t\t\t});\n\t\t}\n\t};\n\n\tcomponentDidUpdate() {\n\t\tthis.updateNodeDimensions();\n\t\tthis.props.diagramEngine.nodesRendered = true;\n\t}\n\n\trender() {\n\t\tvar diagramModel = this.props.diagramEngine.getDiagramModel();\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:\n\t\t\t\t\t\t\"translate(\" +\n\t\t\t\t\t\tdiagramModel.getOffsetX() +\n\t\t\t\t\t\t\"px,\" +\n\t\t\t\t\t\tdiagramModel.getOffsetY() +\n\t\t\t\t\t\t\"px) scale(\" +\n\t\t\t\t\t\tdiagramModel.getZoomLevel() / 100.0 +\n\t\t\t\t\t\t\")\"\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{_.map(diagramModel.getNodes(), (node: NodeModel) => {\n\t\t\t\t\treturn React.createElement(\n\t\t\t\t\t\tNodeWidget,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdiagramEngine: this.props.diagramEngine,\n\t\t\t\t\t\t\tkey: node.id,\n\t\t\t\t\t\t\tnode: node\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.props.diagramEngine.generateWidgetForNode(node)\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/layers/NodeLayerWidget.tsx","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface NodeProps extends BaseWidgetProps {\n\tnode: NodeModel;\n\tchildren?: any;\n\tdiagramEngine: DiagramEngine;\n}\n\nexport interface NodeState {}\n\n/**\n * @author Dylan Vorster\n */\nexport class NodeWidget extends BaseWidget<NodeProps, NodeState> {\n\tconstructor(props: NodeProps) {\n\t\tsuper(\"srd-node\", props);\n\t\tthis.state = {};\n\t}\n\n\tshouldComponentUpdate() {\n\t\treturn this.props.diagramEngine.canEntityRepaint(this.props.node);\n\t}\n\n\tgetClassName() {\n\t\treturn \"node \" + super.getClassName() + (this.props.node.isSelected() ? this.bem(\"--selected\") : \"\");\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tdata-nodeid={this.props.node.id}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: this.props.node.y,\n\t\t\t\t\tleft: this.props.node.x\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/NodeWidget.tsx","var matches = require('matches-selector')\r\n\r\nmodule.exports = function (element, selector, checkYoSelf) {\r\n  var parent = checkYoSelf ? element : element.parentNode\r\n\r\n  while (parent && parent !== document) {\r\n    if (matches(parent, selector)) return parent;\r\n    parent = parent.parentNode\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/closest/index.js\n// module id = 46\n// module chunks = 0","\r\n/**\r\n * Element prototype.\r\n */\r\n\r\nvar proto = Element.prototype;\r\n\r\n/**\r\n * Vendor function.\r\n */\r\n\r\nvar vendor = proto.matchesSelector\r\n  || proto.webkitMatchesSelector\r\n  || proto.mozMatchesSelector\r\n  || proto.msMatchesSelector\r\n  || proto.oMatchesSelector;\r\n\r\n/**\r\n * Expose `match()`.\r\n */\r\n\r\nmodule.exports = match;\r\n\r\n/**\r\n * Match `el` to `selector`.\r\n *\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nfunction match(el, selector) {\r\n  if (vendor) return vendor.call(el, selector);\r\n  var nodes = el.parentNode.querySelectorAll(selector);\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (nodes[i] == el) return true;\r\n  }\r\n  return false;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/matches-selector/index.js\n// module id = 47\n// module chunks = 0","module.exports = require('./src/PathFinding');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/index.js\n// module id = 48\n// module chunks = 0","module.exports = {\r\n    'Heap'                      : require('heap'),\r\n    'Node'                      : require('./core/Node'),\r\n    'Grid'                      : require('./core/Grid'),\r\n    'Util'                      : require('./core/Util'),\r\n    'DiagonalMovement'          : require('./core/DiagonalMovement'),\r\n    'Heuristic'                 : require('./core/Heuristic'),\r\n    'AStarFinder'               : require('./finders/AStarFinder'),\r\n    'BestFirstFinder'           : require('./finders/BestFirstFinder'),\r\n    'BreadthFirstFinder'        : require('./finders/BreadthFirstFinder'),\r\n    'DijkstraFinder'            : require('./finders/DijkstraFinder'),\r\n    'BiAStarFinder'             : require('./finders/BiAStarFinder'),\r\n    'BiBestFirstFinder'         : require('./finders/BiBestFirstFinder'),\r\n    'BiBreadthFirstFinder'      : require('./finders/BiBreadthFirstFinder'),\r\n    'BiDijkstraFinder'          : require('./finders/BiDijkstraFinder'),\r\n    'IDAStarFinder'             : require('./finders/IDAStarFinder'),\r\n    'JumpPointFinder'           : require('./finders/JumpPointFinder'),\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/PathFinding.js\n// module id = 49\n// module chunks = 0","// Generated by CoffeeScript 1.8.0\n(function() {\n  var Heap, defaultCmp, floor, heapify, heappop, heappush, heappushpop, heapreplace, insort, min, nlargest, nsmallest, updateItem, _siftdown, _siftup;\n\n  floor = Math.floor, min = Math.min;\n\n\n  /*\n  Default comparison function to be used\n   */\n\n  defaultCmp = function(x, y) {\n    if (x < y) {\n      return -1;\n    }\n    if (x > y) {\n      return 1;\n    }\n    return 0;\n  };\n\n\n  /*\n  Insert item x in list a, and keep it sorted assuming a is sorted.\n  \n  If x is already in a, insert it to the right of the rightmost x.\n  \n  Optional args lo (default 0) and hi (default a.length) bound the slice\n  of a to be searched.\n   */\n\n  insort = function(a, x, lo, hi, cmp) {\n    var mid;\n    if (lo == null) {\n      lo = 0;\n    }\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (lo < 0) {\n      throw new Error('lo must be non-negative');\n    }\n    if (hi == null) {\n      hi = a.length;\n    }\n    while (lo < hi) {\n      mid = floor((lo + hi) / 2);\n      if (cmp(x, a[mid]) < 0) {\n        hi = mid;\n      } else {\n        lo = mid + 1;\n      }\n    }\n    return ([].splice.apply(a, [lo, lo - lo].concat(x)), x);\n  };\n\n\n  /*\n  Push item onto heap, maintaining the heap invariant.\n   */\n\n  heappush = function(array, item, cmp) {\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    array.push(item);\n    return _siftdown(array, 0, array.length - 1, cmp);\n  };\n\n\n  /*\n  Pop the smallest item off the heap, maintaining the heap invariant.\n   */\n\n  heappop = function(array, cmp) {\n    var lastelt, returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    lastelt = array.pop();\n    if (array.length) {\n      returnitem = array[0];\n      array[0] = lastelt;\n      _siftup(array, 0, cmp);\n    } else {\n      returnitem = lastelt;\n    }\n    return returnitem;\n  };\n\n\n  /*\n  Pop and return the current smallest value, and add the new item.\n  \n  This is more efficient than heappop() followed by heappush(), and can be\n  more appropriate when using a fixed size heap. Note that the value\n  returned may be larger than item! That constrains reasonable use of\n  this routine unless written as part of a conditional replacement:\n      if item > array[0]\n        item = heapreplace(array, item)\n   */\n\n  heapreplace = function(array, item, cmp) {\n    var returnitem;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    returnitem = array[0];\n    array[0] = item;\n    _siftup(array, 0, cmp);\n    return returnitem;\n  };\n\n\n  /*\n  Fast version of a heappush followed by a heappop.\n   */\n\n  heappushpop = function(array, item, cmp) {\n    var _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (array.length && cmp(array[0], item) < 0) {\n      _ref = [array[0], item], item = _ref[0], array[0] = _ref[1];\n      _siftup(array, 0, cmp);\n    }\n    return item;\n  };\n\n\n  /*\n  Transform list into a heap, in-place, in O(array.length) time.\n   */\n\n  heapify = function(array, cmp) {\n    var i, _i, _j, _len, _ref, _ref1, _results, _results1;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    _ref1 = (function() {\n      _results1 = [];\n      for (var _j = 0, _ref = floor(array.length / 2); 0 <= _ref ? _j < _ref : _j > _ref; 0 <= _ref ? _j++ : _j--){ _results1.push(_j); }\n      return _results1;\n    }).apply(this).reverse();\n    _results = [];\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      i = _ref1[_i];\n      _results.push(_siftup(array, i, cmp));\n    }\n    return _results;\n  };\n\n\n  /*\n  Update the position of the given item in the heap.\n  This function should be called every time the item is being modified.\n   */\n\n  updateItem = function(array, item, cmp) {\n    var pos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    pos = array.indexOf(item);\n    if (pos === -1) {\n      return;\n    }\n    _siftdown(array, 0, pos, cmp);\n    return _siftup(array, pos, cmp);\n  };\n\n\n  /*\n  Find the n largest elements in a dataset.\n   */\n\n  nlargest = function(array, n, cmp) {\n    var elem, result, _i, _len, _ref;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    result = array.slice(0, n);\n    if (!result.length) {\n      return result;\n    }\n    heapify(result, cmp);\n    _ref = array.slice(n);\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      elem = _ref[_i];\n      heappushpop(result, elem, cmp);\n    }\n    return result.sort(cmp).reverse();\n  };\n\n\n  /*\n  Find the n smallest elements in a dataset.\n   */\n\n  nsmallest = function(array, n, cmp) {\n    var elem, i, los, result, _i, _j, _len, _ref, _ref1, _results;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    if (n * 10 <= array.length) {\n      result = array.slice(0, n).sort(cmp);\n      if (!result.length) {\n        return result;\n      }\n      los = result[result.length - 1];\n      _ref = array.slice(n);\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elem = _ref[_i];\n        if (cmp(elem, los) < 0) {\n          insort(result, elem, 0, null, cmp);\n          result.pop();\n          los = result[result.length - 1];\n        }\n      }\n      return result;\n    }\n    heapify(array, cmp);\n    _results = [];\n    for (i = _j = 0, _ref1 = min(n, array.length); 0 <= _ref1 ? _j < _ref1 : _j > _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\n      _results.push(heappop(array, cmp));\n    }\n    return _results;\n  };\n\n  _siftdown = function(array, startpos, pos, cmp) {\n    var newitem, parent, parentpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    newitem = array[pos];\n    while (pos > startpos) {\n      parentpos = (pos - 1) >> 1;\n      parent = array[parentpos];\n      if (cmp(newitem, parent) < 0) {\n        array[pos] = parent;\n        pos = parentpos;\n        continue;\n      }\n      break;\n    }\n    return array[pos] = newitem;\n  };\n\n  _siftup = function(array, pos, cmp) {\n    var childpos, endpos, newitem, rightpos, startpos;\n    if (cmp == null) {\n      cmp = defaultCmp;\n    }\n    endpos = array.length;\n    startpos = pos;\n    newitem = array[pos];\n    childpos = 2 * pos + 1;\n    while (childpos < endpos) {\n      rightpos = childpos + 1;\n      if (rightpos < endpos && !(cmp(array[childpos], array[rightpos]) < 0)) {\n        childpos = rightpos;\n      }\n      array[pos] = array[childpos];\n      pos = childpos;\n      childpos = 2 * pos + 1;\n    }\n    array[pos] = newitem;\n    return _siftdown(array, startpos, pos, cmp);\n  };\n\n  Heap = (function() {\n    Heap.push = heappush;\n\n    Heap.pop = heappop;\n\n    Heap.replace = heapreplace;\n\n    Heap.pushpop = heappushpop;\n\n    Heap.heapify = heapify;\n\n    Heap.updateItem = updateItem;\n\n    Heap.nlargest = nlargest;\n\n    Heap.nsmallest = nsmallest;\n\n    function Heap(cmp) {\n      this.cmp = cmp != null ? cmp : defaultCmp;\n      this.nodes = [];\n    }\n\n    Heap.prototype.push = function(x) {\n      return heappush(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pop = function() {\n      return heappop(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.peek = function() {\n      return this.nodes[0];\n    };\n\n    Heap.prototype.contains = function(x) {\n      return this.nodes.indexOf(x) !== -1;\n    };\n\n    Heap.prototype.replace = function(x) {\n      return heapreplace(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.pushpop = function(x) {\n      return heappushpop(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.heapify = function() {\n      return heapify(this.nodes, this.cmp);\n    };\n\n    Heap.prototype.updateItem = function(x) {\n      return updateItem(this.nodes, x, this.cmp);\n    };\n\n    Heap.prototype.clear = function() {\n      return this.nodes = [];\n    };\n\n    Heap.prototype.empty = function() {\n      return this.nodes.length === 0;\n    };\n\n    Heap.prototype.size = function() {\n      return this.nodes.length;\n    };\n\n    Heap.prototype.clone = function() {\n      var heap;\n      heap = new Heap();\n      heap.nodes = this.nodes.slice(0);\n      return heap;\n    };\n\n    Heap.prototype.toArray = function() {\n      return this.nodes.slice(0);\n    };\n\n    Heap.prototype.insert = Heap.prototype.push;\n\n    Heap.prototype.top = Heap.prototype.peek;\n\n    Heap.prototype.front = Heap.prototype.peek;\n\n    Heap.prototype.has = Heap.prototype.contains;\n\n    Heap.prototype.copy = Heap.prototype.clone;\n\n    return Heap;\n\n  })();\n\n  if (typeof module !== \"undefined\" && module !== null ? module.exports : void 0) {\n    module.exports = Heap;\n  } else {\n    window.Heap = Heap;\n  }\n\n}).call(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/heap/lib/heap.js\n// module id = 50\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 51\n// module chunks = 0","var Node = require('./Node');\r\nvar DiagonalMovement = require('./DiagonalMovement');\r\n\r\n/**\r\n * The Grid class, which serves as the encapsulation of the layout of the nodes.\r\n * @constructor\r\n * @param {number|Array<Array<(number|boolean)>>} width_or_matrix Number of columns of the grid, or matrix\r\n * @param {number} height Number of rows of the grid.\r\n * @param {Array<Array<(number|boolean)>>} [matrix] - A 0-1 matrix\r\n *     representing the walkable status of the nodes(0 or false for walkable).\r\n *     If the matrix is not supplied, all the nodes will be walkable.  */\r\nfunction Grid(width_or_matrix, height, matrix) {\r\n    var width;\r\n\r\n    if (typeof width_or_matrix !== 'object') {\r\n        width = width_or_matrix;\r\n    } else {\r\n        height = width_or_matrix.length;\r\n        width = width_or_matrix[0].length;\r\n        matrix = width_or_matrix;\r\n    }\r\n\r\n    /**\r\n     * The number of columns of the grid.\r\n     * @type number\r\n     */\r\n    this.width = width;\r\n    /**\r\n     * The number of rows of the grid.\r\n     * @type number\r\n     */\r\n    this.height = height;\r\n\r\n    /**\r\n     * A 2D array of nodes.\r\n     */\r\n    this.nodes = this._buildNodes(width, height, matrix);\r\n}\r\n\r\n/**\r\n * Build and return the nodes.\r\n * @private\r\n * @param {number} width\r\n * @param {number} height\r\n * @param {Array<Array<number|boolean>>} [matrix] - A 0-1 matrix representing\r\n *     the walkable status of the nodes.\r\n * @see Grid\r\n */\r\nGrid.prototype._buildNodes = function(width, height, matrix) {\r\n    var i, j,\r\n        nodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        nodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            nodes[i][j] = new Node(j, i);\r\n        }\r\n    }\r\n\r\n\r\n    if (matrix === undefined) {\r\n        return nodes;\r\n    }\r\n\r\n    if (matrix.length !== height || matrix[0].length !== width) {\r\n        throw new Error('Matrix size does not fit');\r\n    }\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        for (j = 0; j < width; ++j) {\r\n            if (matrix[i][j]) {\r\n                // 0, false, null will be walkable\r\n                // while others will be un-walkable\r\n                nodes[i][j].walkable = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return nodes;\r\n};\r\n\r\n\r\nGrid.prototype.getNodeAt = function(x, y) {\r\n    return this.nodes[y][x];\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the node at the given position is walkable.\r\n * (Also returns false if the position is outside the grid.)\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @return {boolean} - The walkability of the node.\r\n */\r\nGrid.prototype.isWalkableAt = function(x, y) {\r\n    return this.isInside(x, y) && this.nodes[y][x].walkable;\r\n};\r\n\r\n\r\n/**\r\n * Determine whether the position is inside the grid.\r\n * XXX: `grid.isInside(x, y)` is wierd to read.\r\n * It should be `(x, y) is inside grid`, but I failed to find a better\r\n * name for this method.\r\n * @param {number} x\r\n * @param {number} y\r\n * @return {boolean}\r\n */\r\nGrid.prototype.isInside = function(x, y) {\r\n    return (x >= 0 && x < this.width) && (y >= 0 && y < this.height);\r\n};\r\n\r\n\r\n/**\r\n * Set whether the node on the given position is walkable.\r\n * NOTE: throws exception if the coordinate is not inside the grid.\r\n * @param {number} x - The x coordinate of the node.\r\n * @param {number} y - The y coordinate of the node.\r\n * @param {boolean} walkable - Whether the position is walkable.\r\n */\r\nGrid.prototype.setWalkableAt = function(x, y, walkable) {\r\n    this.nodes[y][x].walkable = walkable;\r\n};\r\n\r\n\r\n/**\r\n * Get the neighbors of the given node.\r\n *\r\n *     offsets      diagonalOffsets:\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 0 |   |    | 0 |   | 1 |\r\n *  +---+---+---+    +---+---+---+\r\n *  | 3 |   | 1 |    |   |   |   |\r\n *  +---+---+---+    +---+---+---+\r\n *  |   | 2 |   |    | 3 |   | 2 |\r\n *  +---+---+---+    +---+---+---+\r\n *\r\n *  When allowDiagonal is true, if offsets[i] is valid, then\r\n *  diagonalOffsets[i] and\r\n *  diagonalOffsets[(i + 1) % 4] is valid.\r\n * @param {Node} node\r\n * @param {DiagonalMovement} diagonalMovement\r\n */\r\nGrid.prototype.getNeighbors = function(node, diagonalMovement) {\r\n    var x = node.x,\r\n        y = node.y,\r\n        neighbors = [],\r\n        s0 = false, d0 = false,\r\n        s1 = false, d1 = false,\r\n        s2 = false, d2 = false,\r\n        s3 = false, d3 = false,\r\n        nodes = this.nodes;\r\n\r\n    // ↑\r\n    if (this.isWalkableAt(x, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x]);\r\n        s0 = true;\r\n    }\r\n    // →\r\n    if (this.isWalkableAt(x + 1, y)) {\r\n        neighbors.push(nodes[y][x + 1]);\r\n        s1 = true;\r\n    }\r\n    // ↓\r\n    if (this.isWalkableAt(x, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x]);\r\n        s2 = true;\r\n    }\r\n    // ←\r\n    if (this.isWalkableAt(x - 1, y)) {\r\n        neighbors.push(nodes[y][x - 1]);\r\n        s3 = true;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.Never) {\r\n        return neighbors;\r\n    }\r\n\r\n    if (diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        d0 = s3 && s0;\r\n        d1 = s0 && s1;\r\n        d2 = s1 && s2;\r\n        d3 = s2 && s3;\r\n    } else if (diagonalMovement === DiagonalMovement.IfAtMostOneObstacle) {\r\n        d0 = s3 || s0;\r\n        d1 = s0 || s1;\r\n        d2 = s1 || s2;\r\n        d3 = s2 || s3;\r\n    } else if (diagonalMovement === DiagonalMovement.Always) {\r\n        d0 = true;\r\n        d1 = true;\r\n        d2 = true;\r\n        d3 = true;\r\n    } else {\r\n        throw new Error('Incorrect value of diagonalMovement');\r\n    }\r\n\r\n    // ↖\r\n    if (d0 && this.isWalkableAt(x - 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x - 1]);\r\n    }\r\n    // ↗\r\n    if (d1 && this.isWalkableAt(x + 1, y - 1)) {\r\n        neighbors.push(nodes[y - 1][x + 1]);\r\n    }\r\n    // ↘\r\n    if (d2 && this.isWalkableAt(x + 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x + 1]);\r\n    }\r\n    // ↙\r\n    if (d3 && this.isWalkableAt(x - 1, y + 1)) {\r\n        neighbors.push(nodes[y + 1][x - 1]);\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\n\r\n/**\r\n * Get a clone of this grid.\r\n * @return {Grid} Cloned grid.\r\n */\r\nGrid.prototype.clone = function() {\r\n    var i, j,\r\n\r\n        width = this.width,\r\n        height = this.height,\r\n        thisNodes = this.nodes,\r\n\r\n        newGrid = new Grid(width, height),\r\n        newNodes = new Array(height);\r\n\r\n    for (i = 0; i < height; ++i) {\r\n        newNodes[i] = new Array(width);\r\n        for (j = 0; j < width; ++j) {\r\n            newNodes[i][j] = new Node(j, i, thisNodes[i][j].walkable);\r\n        }\r\n    }\r\n\r\n    newGrid.nodes = newNodes;\r\n\r\n    return newGrid;\r\n};\r\n\r\nmodule.exports = Grid;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/core/Grid.js\n// module id = 52\n// module chunks = 0","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Best-First-Search path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BestFirstFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBestFirstFinder.prototype = new AStarFinder();\r\nBestFirstFinder.prototype.constructor = BestFirstFinder;\r\n\r\nmodule.exports = BestFirstFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BestFirstFinder.js\n// module id = 53\n// module chunks = 0","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var openList = [],\r\n        diagonalMovement = this.diagonalMovement,\r\n        startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        neighbors, neighbor, node, i, l;\r\n\r\n    // push the start pos into the queue\r\n    openList.push(startNode);\r\n    startNode.opened = true;\r\n\r\n    // while the queue is not empty\r\n    while (openList.length) {\r\n        // take the front node from the queue\r\n        node = openList.shift();\r\n        node.closed = true;\r\n\r\n        // reached the end position\r\n        if (node === endNode) {\r\n            return Util.backtrace(endNode);\r\n        }\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            // skip this neighbor if it has been inspected before\r\n            if (neighbor.closed || neighbor.opened) {\r\n                continue;\r\n            }\r\n\r\n            openList.push(neighbor);\r\n            neighbor.opened = true;\r\n            neighbor.parent = node;\r\n        }\r\n    }\r\n    \r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BreadthFirstFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BreadthFirstFinder.js\n// module id = 54\n// module chunks = 0","var AStarFinder = require('./AStarFinder');\r\n\r\n/**\r\n * Dijkstra path-finder.\r\n * @constructor\r\n * @extends AStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction DijkstraFinder(opt) {\r\n    AStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nDijkstraFinder.prototype = new AStarFinder();\r\nDijkstraFinder.prototype.constructor = DijkstraFinder;\r\n\r\nmodule.exports = DijkstraFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/DijkstraFinder.js\n// module id = 55\n// module chunks = 0","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-direcitional Best-First-Search path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n */\r\nfunction BiBestFirstFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n\r\n    var orig = this.heuristic;\r\n    this.heuristic = function(dx, dy) {\r\n        return orig(dx, dy) * 1000000;\r\n    };\r\n}\r\n\r\nBiBestFirstFinder.prototype = new BiAStarFinder();\r\nBiBestFirstFinder.prototype.constructor = BiBestFirstFinder;\r\n\r\nmodule.exports = BiBestFirstFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BiBestFirstFinder.js\n// module id = 56\n// module chunks = 0","var Util = require('../core/Util');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Bi-directional Breadth-First-Search path finder.\r\n * @constructor\r\n * @param {object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiBreadthFirstFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Find and return the the path.\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nBiBreadthFirstFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    var startNode = grid.getNodeAt(startX, startY),\r\n        endNode = grid.getNodeAt(endX, endY),\r\n        startOpenList = [], endOpenList = [],\r\n        neighbors, neighbor, node,\r\n        diagonalMovement = this.diagonalMovement,\r\n        BY_START = 0, BY_END = 1,\r\n        i, l;\r\n\r\n    // push the start and end nodes into the queues\r\n    startOpenList.push(startNode);\r\n    startNode.opened = true;\r\n    startNode.by = BY_START;\r\n\r\n    endOpenList.push(endNode);\r\n    endNode.opened = true;\r\n    endNode.by = BY_END;\r\n\r\n    // while both the queues are not empty\r\n    while (startOpenList.length && endOpenList.length) {\r\n\r\n        // expand start open list\r\n\r\n        node = startOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                // if this node has been inspected by the reversed search,\r\n                // then a path is found.\r\n                if (neighbor.by === BY_END) {\r\n                    return Util.biBacktrace(node, neighbor);\r\n                }\r\n                continue;\r\n            }\r\n            startOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_START;\r\n        }\r\n\r\n        // expand end open list\r\n\r\n        node = endOpenList.shift();\r\n        node.closed = true;\r\n\r\n        neighbors = grid.getNeighbors(node, diagonalMovement);\r\n        for (i = 0, l = neighbors.length; i < l; ++i) {\r\n            neighbor = neighbors[i];\r\n\r\n            if (neighbor.closed) {\r\n                continue;\r\n            }\r\n            if (neighbor.opened) {\r\n                if (neighbor.by === BY_START) {\r\n                    return Util.biBacktrace(neighbor, node);\r\n                }\r\n                continue;\r\n            }\r\n            endOpenList.push(neighbor);\r\n            neighbor.parent = node;\r\n            neighbor.opened = true;\r\n            neighbor.by = BY_END;\r\n        }\r\n    }\r\n\r\n    // fail to find the path\r\n    return [];\r\n};\r\n\r\nmodule.exports = BiBreadthFirstFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BiBreadthFirstFinder.js\n// module id = 57\n// module chunks = 0","var BiAStarFinder = require('./BiAStarFinder');\r\n\r\n/**\r\n * Bi-directional Dijkstra path-finder.\r\n * @constructor\r\n * @extends BiAStarFinder\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n */\r\nfunction BiDijkstraFinder(opt) {\r\n    BiAStarFinder.call(this, opt);\r\n    this.heuristic = function(dx, dy) {\r\n        return 0;\r\n    };\r\n}\r\n\r\nBiDijkstraFinder.prototype = new BiAStarFinder();\r\nBiDijkstraFinder.prototype.constructor = BiDijkstraFinder;\r\n\r\nmodule.exports = BiDijkstraFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/BiDijkstraFinder.js\n// module id = 58\n// module chunks = 0","var Util       = require('../core/Util');\r\nvar Heuristic  = require('../core/Heuristic');\r\nvar Node       = require('../core/Node');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Iterative Deeping A Star (IDA*) path-finder.\r\n *\r\n * Recursion based on:\r\n *   http://www.apl.jhu.edu/~hall/AI-Programming/IDA-Star.html\r\n *\r\n * Path retracing based on:\r\n *  V. Nageshwara Rao, Vipin Kumar and K. Ramesh\r\n *  \"A Parallel Implementation of Iterative-Deeping-A*\", January 1987.\r\n *  ftp://ftp.cs.utexas.edu/.snapshot/hourly.1/pub/AI-Lab/tech-reports/UT-AI-TR-87-46.pdf\r\n *\r\n * @author Gerard Meier (www.gerardmeier.com)\r\n *\r\n * @constructor\r\n * @param {Object} opt\r\n * @param {boolean} opt.allowDiagonal Whether diagonal movement is allowed.\r\n *     Deprecated, use diagonalMovement instead.\r\n * @param {boolean} opt.dontCrossCorners Disallow diagonal movement touching\r\n *     block corners. Deprecated, use diagonalMovement instead.\r\n * @param {DiagonalMovement} opt.diagonalMovement Allowed diagonal movement.\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {number} opt.weight Weight to apply to the heuristic to allow for\r\n *     suboptimal paths, in order to speed up the search.\r\n * @param {boolean} opt.trackRecursion Whether to track recursion for\r\n *     statistical purposes.\r\n * @param {number} opt.timeLimit Maximum execution time. Use <= 0 for infinite.\r\n */\r\nfunction IDAStarFinder(opt) {\r\n    opt = opt || {};\r\n    this.allowDiagonal = opt.allowDiagonal;\r\n    this.dontCrossCorners = opt.dontCrossCorners;\r\n    this.diagonalMovement = opt.diagonalMovement;\r\n    this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    this.weight = opt.weight || 1;\r\n    this.trackRecursion = opt.trackRecursion || false;\r\n    this.timeLimit = opt.timeLimit || Infinity; // Default: no time limit.\r\n\r\n    if (!this.diagonalMovement) {\r\n        if (!this.allowDiagonal) {\r\n            this.diagonalMovement = DiagonalMovement.Never;\r\n        } else {\r\n            if (this.dontCrossCorners) {\r\n                this.diagonalMovement = DiagonalMovement.OnlyWhenNoObstacles;\r\n            } else {\r\n                this.diagonalMovement = DiagonalMovement.IfAtMostOneObstacle;\r\n            }\r\n        }\r\n    }\r\n\r\n    // When diagonal movement is allowed the manhattan heuristic is not\r\n    // admissible, it should be octile instead\r\n    if (this.diagonalMovement === DiagonalMovement.Never) {\r\n        this.heuristic = opt.heuristic || Heuristic.manhattan;\r\n    } else {\r\n        this.heuristic = opt.heuristic || Heuristic.octile;\r\n    }\r\n}\r\n\r\n/**\r\n * Find and return the the path. When an empty array is returned, either\r\n * no path is possible, or the maximum execution time is reached.\r\n *\r\n * @return {Array<Array<number>>} The path, including both start and\r\n *     end positions.\r\n */\r\nIDAStarFinder.prototype.findPath = function(startX, startY, endX, endY, grid) {\r\n    // Used for statistics:\r\n    var nodesVisited = 0;\r\n\r\n    // Execution time limitation:\r\n    var startTime = new Date().getTime();\r\n\r\n    // Heuristic helper:\r\n    var h = function(a, b) {\r\n        return this.heuristic(Math.abs(b.x - a.x), Math.abs(b.y - a.y));\r\n    }.bind(this);\r\n\r\n    // Step cost from a to b:\r\n    var cost = function(a, b) {\r\n        return (a.x === b.x || a.y === b.y) ? 1 : Math.SQRT2;\r\n    };\r\n\r\n    /**\r\n     * IDA* search implementation.\r\n     *\r\n     * @param {Node} The node currently expanding from.\r\n     * @param {number} Cost to reach the given node.\r\n     * @param {number} Maximum search depth (cut-off value).\r\n     * @param {Array<Array<number>>} The found route.\r\n     * @param {number} Recursion depth.\r\n     *\r\n     * @return {Object} either a number with the new optimal cut-off depth,\r\n     * or a valid node instance, in which case a path was found.\r\n     */\r\n    var search = function(node, g, cutoff, route, depth) {\r\n        nodesVisited++;\r\n\r\n        // Enforce timelimit:\r\n        if (this.timeLimit > 0 &&\r\n            new Date().getTime() - startTime > this.timeLimit * 1000) {\r\n            // Enforced as \"path-not-found\".\r\n            return Infinity;\r\n        }\r\n\r\n        var f = g + h(node, end) * this.weight;\r\n\r\n        // We've searched too deep for this iteration.\r\n        if (f > cutoff) {\r\n            return f;\r\n        }\r\n\r\n        if (node == end) {\r\n            route[depth] = [node.x, node.y];\r\n            return node;\r\n        }\r\n\r\n        var min, t, k, neighbour;\r\n\r\n        var neighbours = grid.getNeighbors(node, this.diagonalMovement);\r\n\r\n        // Sort the neighbours, gives nicer paths. But, this deviates\r\n        // from the original algorithm - so I left it out.\r\n        //neighbours.sort(function(a, b){\r\n        //    return h(a, end) - h(b, end);\r\n        //});\r\n\r\n        \r\n        /*jshint -W084 *///Disable warning: Expected a conditional expression and instead saw an assignment\r\n        for (k = 0, min = Infinity; neighbour = neighbours[k]; ++k) {\r\n        /*jshint +W084 *///Enable warning: Expected a conditional expression and instead saw an assignment\r\n            if (this.trackRecursion) {\r\n                // Retain a copy for visualisation. Due to recursion, this\r\n                // node may be part of other paths too.\r\n                neighbour.retainCount = neighbour.retainCount + 1 || 1;\r\n\r\n                if(neighbour.tested !== true) {\r\n                    neighbour.tested = true;\r\n                }\r\n            }\r\n\r\n            t = search(neighbour, g + cost(node, neighbour), cutoff, route, depth + 1);\r\n\r\n            if (t instanceof Node) {\r\n                route[depth] = [node.x, node.y];\r\n\r\n                // For a typical A* linked list, this would work:\r\n                // neighbour.parent = node;\r\n                return t;\r\n            }\r\n\r\n            // Decrement count, then determine whether it's actually closed.\r\n            if (this.trackRecursion && (--neighbour.retainCount) === 0) {\r\n                neighbour.tested = false;\r\n            }\r\n\r\n            if (t < min) {\r\n                min = t;\r\n            }\r\n        }\r\n\r\n        return min;\r\n\r\n    }.bind(this);\r\n\r\n    // Node instance lookups:\r\n    var start = grid.getNodeAt(startX, startY);\r\n    var end   = grid.getNodeAt(endX, endY);\r\n\r\n    // Initial search depth, given the typical heuristic contraints,\r\n    // there should be no cheaper route possible.\r\n    var cutOff = h(start, end);\r\n\r\n    var j, route, t;\r\n\r\n    // With an overflow protection.\r\n    for (j = 0; true; ++j) {\r\n\r\n        route = [];\r\n\r\n        // Search till cut-off depth:\r\n        t = search(start, 0, cutOff, route, 0);\r\n\r\n        // Route not possible, or not found in time limit.\r\n        if (t === Infinity) {\r\n            return [];\r\n        }\r\n\r\n        // If t is a node, it's also the end node. Route is now\r\n        // populated with a valid path to the end node.\r\n        if (t instanceof Node) {\r\n            return route;\r\n        }\r\n\r\n        // Try again, this time with a deeper cut-off. The t score\r\n        // is the closest we got to the end node.\r\n        cutOff = t;\r\n    }\r\n\r\n    // This _should_ never to be reached.\r\n    return [];\r\n};\r\n\r\nmodule.exports = IDAStarFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/IDAStarFinder.js\n// module id = 59\n// module chunks = 0","/**\r\n * @author aniero / https://github.com/aniero\r\n */\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\nvar JPFNeverMoveDiagonally = require('./JPFNeverMoveDiagonally');\r\nvar JPFAlwaysMoveDiagonally = require('./JPFAlwaysMoveDiagonally');\r\nvar JPFMoveDiagonallyIfNoObstacles = require('./JPFMoveDiagonallyIfNoObstacles');\r\nvar JPFMoveDiagonallyIfAtMostOneObstacle = require('./JPFMoveDiagonallyIfAtMostOneObstacle');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm\r\n * @param {Object} opt\r\n * @param {function} opt.heuristic Heuristic function to estimate the distance\r\n *     (defaults to manhattan).\r\n * @param {DiagonalMovement} opt.diagonalMovement Condition under which diagonal\r\n *      movement will be allowed.\r\n */\r\nfunction JumpPointFinder(opt) {\r\n    opt = opt || {};\r\n    if (opt.diagonalMovement === DiagonalMovement.Never) {\r\n        return new JPFNeverMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.Always) {\r\n        return new JPFAlwaysMoveDiagonally(opt);\r\n    } else if (opt.diagonalMovement === DiagonalMovement.OnlyWhenNoObstacles) {\r\n        return new JPFMoveDiagonallyIfNoObstacles(opt);\r\n    } else {\r\n        return new JPFMoveDiagonallyIfAtMostOneObstacle(opt);\r\n    }\r\n}\r\n\r\nmodule.exports = JumpPointFinder;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JumpPointFinder.js\n// module id = 60\n// module chunks = 0","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm allowing only horizontal\r\n * or vertical movements.\r\n */\r\nfunction JPFNeverMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFNeverMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFNeverMoveDiagonally.prototype.constructor = JPFNeverMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFNeverMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    if (dx !== 0) {\r\n        if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n            (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else if (dy !== 0) {\r\n        if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n            (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        //When moving vertically, must check for horizontal jump points\r\n        if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(\"Only horizontal and vertical movements are allowed\");\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFNeverMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        if (dx !== 0) {\r\n            if (grid.isWalkableAt(x, y - 1)) {\r\n                neighbors.push([x, y - 1]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + 1)) {\r\n                neighbors.push([x, y + 1]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if (grid.isWalkableAt(x - 1, y)) {\r\n                neighbors.push([x - 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + 1, y)) {\r\n                neighbors.push([x + 1, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Never);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFNeverMoveDiagonally;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JPFNeverMoveDiagonally.js\n// module id = 61\n// module chunks = 0","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which always moves\r\n * diagonally irrespective of the number of obstacles.\r\n */\r\nfunction JPFAlwaysMoveDiagonally(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFAlwaysMoveDiagonally.prototype = new JumpPointFinderBase();\r\nJPFAlwaysMoveDiagonally.prototype.constructor = JPFAlwaysMoveDiagonally;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    return this._jump(x + dx, y + dy, x, y);\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFAlwaysMoveDiagonally.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y + dy)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x + 1, y)) {\r\n                    neighbors.push([x + 1, y + dy]);\r\n                }\r\n                if (!grid.isWalkableAt(x - 1, y)) {\r\n                    neighbors.push([x - 1, y + dy]);\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y + 1)) {\r\n                    neighbors.push([x + dx, y + 1]);\r\n                }\r\n                if (!grid.isWalkableAt(x, y - 1)) {\r\n                    neighbors.push([x + dx, y - 1]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.Always);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFAlwaysMoveDiagonally;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JPFAlwaysMoveDiagonally.js\n// module id = 62\n// module chunks = 0","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there are no obstacles.\r\n */\r\nfunction JPFMoveDiagonallyIfNoObstacles(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfNoObstacles.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfNoObstacles.prototype.constructor = JPFMoveDiagonallyIfNoObstacles;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        // if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            // (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            // return [x, y];\r\n        // }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if (dx !== 0) {\r\n            if ((grid.isWalkableAt(x, y - 1) && !grid.isWalkableAt(x - dx, y - 1)) ||\r\n                (grid.isWalkableAt(x, y + 1) && !grid.isWalkableAt(x - dx, y + 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else if (dy !== 0) {\r\n            if ((grid.isWalkableAt(x - 1, y) && !grid.isWalkableAt(x - 1, y - dy)) ||\r\n                (grid.isWalkableAt(x + 1, y) && !grid.isWalkableAt(x + 1, y - dy))) {\r\n                return [x, y];\r\n            }\r\n            // When moving vertically, must check for horizontal jump points\r\n            // if (this._jump(x + 1, y, x, y) || this._jump(x - 1, y, x, y)) {\r\n                // return [x, y];\r\n            // }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfNoObstacles.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            var isNextWalkable;\r\n            if (dx !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x + dx, y);\r\n                var isTopWalkable = grid.isWalkableAt(x, y + 1);\r\n                var isBottomWalkable = grid.isWalkableAt(x, y - 1);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (isTopWalkable) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (isBottomWalkable) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n                if (isTopWalkable) {\r\n                    neighbors.push([x, y + 1]);\r\n                }\r\n                if (isBottomWalkable) {\r\n                    neighbors.push([x, y - 1]);\r\n                }\r\n            }\r\n            else if (dy !== 0) {\r\n                isNextWalkable = grid.isWalkableAt(x, y + dy);\r\n                var isRightWalkable = grid.isWalkableAt(x + 1, y);\r\n                var isLeftWalkable = grid.isWalkableAt(x - 1, y);\r\n\r\n                if (isNextWalkable) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (isRightWalkable) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (isLeftWalkable) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n                if (isRightWalkable) {\r\n                    neighbors.push([x + 1, y]);\r\n                }\r\n                if (isLeftWalkable) {\r\n                    neighbors.push([x - 1, y]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.OnlyWhenNoObstacles);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfNoObstacles;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfNoObstacles.js\n// module id = 63\n// module chunks = 0","/**\r\n * @author imor / https://github.com/imor\r\n */\r\nvar JumpPointFinderBase = require('./JumpPointFinderBase');\r\nvar DiagonalMovement = require('../core/DiagonalMovement');\r\n\r\n/**\r\n * Path finder using the Jump Point Search algorithm which moves\r\n * diagonally only when there is at most one obstacle.\r\n */\r\nfunction JPFMoveDiagonallyIfAtMostOneObstacle(opt) {\r\n    JumpPointFinderBase.call(this, opt);\r\n}\r\n\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype = new JumpPointFinderBase();\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype.constructor = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\r\n/**\r\n * Search recursively in the direction (parent -> child), stopping only when a\r\n * jump point is found.\r\n * @protected\r\n * @return {Array<Array<number>>} The x, y coordinate of the jump point\r\n *     found, or null if not found\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._jump = function(x, y, px, py) {\r\n    var grid = this.grid,\r\n        dx = x - px, dy = y - py;\r\n\r\n    if (!grid.isWalkableAt(x, y)) {\r\n        return null;\r\n    }\r\n\r\n    if(this.trackJumpRecursion === true) {\r\n        grid.getNodeAt(x, y).tested = true;\r\n    }\r\n\r\n    if (grid.getNodeAt(x, y) === this.endNode) {\r\n        return [x, y];\r\n    }\r\n\r\n    // check for forced neighbors\r\n    // along the diagonal\r\n    if (dx !== 0 && dy !== 0) {\r\n        if ((grid.isWalkableAt(x - dx, y + dy) && !grid.isWalkableAt(x - dx, y)) ||\r\n            (grid.isWalkableAt(x + dx, y - dy) && !grid.isWalkableAt(x, y - dy))) {\r\n            return [x, y];\r\n        }\r\n        // when moving diagonally, must check for vertical/horizontal jump points\r\n        if (this._jump(x + dx, y, x, y) || this._jump(x, y + dy, x, y)) {\r\n            return [x, y];\r\n        }\r\n    }\r\n    // horizontally/vertically\r\n    else {\r\n        if( dx !== 0 ) { // moving along x\r\n            if((grid.isWalkableAt(x + dx, y + 1) && !grid.isWalkableAt(x, y + 1)) ||\r\n               (grid.isWalkableAt(x + dx, y - 1) && !grid.isWalkableAt(x, y - 1))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n        else {\r\n            if((grid.isWalkableAt(x + 1, y + dy) && !grid.isWalkableAt(x + 1, y)) ||\r\n               (grid.isWalkableAt(x - 1, y + dy) && !grid.isWalkableAt(x - 1, y))) {\r\n                return [x, y];\r\n            }\r\n        }\r\n    }\r\n\r\n    // moving diagonally, must make sure one of the vertical/horizontal\r\n    // neighbors is open to allow the path\r\n    if (grid.isWalkableAt(x + dx, y) || grid.isWalkableAt(x, y + dy)) {\r\n        return this._jump(x + dx, y + dy, x, y);\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\n/**\r\n * Find the neighbors for the given node. If the node has a parent,\r\n * prune the neighbors based on the jump point search algorithm, otherwise\r\n * return all available neighbors.\r\n * @return {Array<Array<number>>} The neighbors found.\r\n */\r\nJPFMoveDiagonallyIfAtMostOneObstacle.prototype._findNeighbors = function(node) {\r\n    var parent = node.parent,\r\n        x = node.x, y = node.y,\r\n        grid = this.grid,\r\n        px, py, nx, ny, dx, dy,\r\n        neighbors = [], neighborNodes, neighborNode, i, l;\r\n\r\n    // directed pruning: can ignore most neighbors, unless forced.\r\n    if (parent) {\r\n        px = parent.x;\r\n        py = parent.y;\r\n        // get the normalized direction of travel\r\n        dx = (x - px) / Math.max(Math.abs(x - px), 1);\r\n        dy = (y - py) / Math.max(Math.abs(y - py), 1);\r\n\r\n        // search diagonally\r\n        if (dx !== 0 && dy !== 0) {\r\n            if (grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x, y + dy]);\r\n            }\r\n            if (grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y]);\r\n            }\r\n            if (grid.isWalkableAt(x, y + dy) || grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x - dx, y) && grid.isWalkableAt(x, y + dy)) {\r\n                neighbors.push([x - dx, y + dy]);\r\n            }\r\n            if (!grid.isWalkableAt(x, y - dy) && grid.isWalkableAt(x + dx, y)) {\r\n                neighbors.push([x + dx, y - dy]);\r\n            }\r\n        }\r\n        // search horizontally/vertically\r\n        else {\r\n            if(dx === 0) {\r\n                if (grid.isWalkableAt(x, y + dy)) {\r\n                    neighbors.push([x, y + dy]);\r\n                    if (!grid.isWalkableAt(x + 1, y)) {\r\n                        neighbors.push([x + 1, y + dy]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x - 1, y)) {\r\n                        neighbors.push([x - 1, y + dy]);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (grid.isWalkableAt(x + dx, y)) {\r\n                    neighbors.push([x + dx, y]);\r\n                    if (!grid.isWalkableAt(x, y + 1)) {\r\n                        neighbors.push([x + dx, y + 1]);\r\n                    }\r\n                    if (!grid.isWalkableAt(x, y - 1)) {\r\n                        neighbors.push([x + dx, y - 1]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // return all neighbors\r\n    else {\r\n        neighborNodes = grid.getNeighbors(node, DiagonalMovement.IfAtMostOneObstacle);\r\n        for (i = 0, l = neighborNodes.length; i < l; ++i) {\r\n            neighborNode = neighborNodes[i];\r\n            neighbors.push([neighborNode.x, neighborNode.y]);\r\n        }\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nmodule.exports = JPFMoveDiagonallyIfAtMostOneObstacle;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pathfinding/src/finders/JPFMoveDiagonallyIfAtMostOneObstacle.js\n// module id = 64\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\nvar Path = function Path(init) {\n  var _instructions = init || [];\n\n  var push = function push(arr, el) {\n    var copy = arr.slice(0, arr.length);\n    copy.push(el);\n    return copy;\n  };\n\n  var areEqualPoints = function areEqualPoints(_ref, _ref3) {\n    var _ref2 = _slicedToArray(_ref, 2);\n\n    var a1 = _ref2[0];\n    var b1 = _ref2[1];\n\n    var _ref32 = _slicedToArray(_ref3, 2);\n\n    var a2 = _ref32[0];\n    var b2 = _ref32[1];\n    return a1 === a2 && b1 === b2;\n  };\n\n  var trimZeros = function trimZeros(string, char) {\n    var l = string.length;\n    while (string.charAt(l - 1) === '0') {\n      l = l - 1;\n    }\n    if (string.charAt(l - 1) === '.') {\n      l = l - 1;\n    }\n    return string.substr(0, l);\n  };\n\n  var round = function round(number, digits) {\n    var str = number.toFixed(digits);\n    return trimZeros(str);\n  };\n\n  var printInstrunction = function printInstrunction(_ref4) {\n    var command = _ref4.command;\n    var params = _ref4.params;\n\n    var numbers = params.map(function (param) {\n      return round(param, 6);\n    });\n    return command + ' ' + numbers.join(' ');\n  };\n\n  var point = function point(_ref5, _ref6) {\n    var command = _ref5.command;\n    var params = _ref5.params;\n\n    var _ref62 = _slicedToArray(_ref6, 2);\n\n    var prevX = _ref62[0];\n    var prevY = _ref62[1];\n\n    switch (command) {\n      case 'M':\n        return [params[0], params[1]];\n      case 'L':\n        return [params[0], params[1]];\n      case 'H':\n        return [params[0], prevY];\n      case 'V':\n        return [prevX, params[0]];\n      case 'Z':\n        return null;\n      case 'C':\n        return [params[4], params[5]];\n      case 'S':\n        return [params[2], params[3]];\n      case 'Q':\n        return [params[2], params[3]];\n      case 'T':\n        return [params[0], params[1]];\n      case 'A':\n        return [params[5], params[6]];\n    }\n  };\n\n  var verbosify = function verbosify(keys, f) {\n    return function (a) {\n      var args = typeof a === 'object' ? keys.map(function (k) {\n        return a[k];\n      }) : arguments;\n      return f.apply(null, args);\n    };\n  };\n\n  var plus = function plus(instruction) {\n    return Path(push(_instructions, instruction));\n  };\n\n  return {\n    moveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'M',\n        params: [x, y]\n      });\n    }),\n    lineto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'L',\n        params: [x, y]\n      });\n    }),\n    hlineto: verbosify(['x'], function (x) {\n      return plus({\n        command: 'H',\n        params: [x]\n      });\n    }),\n    vlineto: verbosify(['y'], function (y) {\n      return plus({\n        command: 'V',\n        params: [y]\n      });\n    }),\n    closepath: function closepath() {\n      return plus({\n        command: 'Z',\n        params: []\n      });\n    },\n    curveto: verbosify(['x1', 'y1', 'x2', 'y2', 'x', 'y'], function (x1, y1, x2, y2, x, y) {\n      return plus({\n        command: 'C',\n        params: [x1, y1, x2, y2, x, y]\n      });\n    }),\n    smoothcurveto: verbosify(['x2', 'y2', 'x', 'y'], function (x2, y2, x, y) {\n      return plus({\n        command: 'S',\n        params: [x2, y2, x, y]\n      });\n    }),\n    qcurveto: verbosify(['x1', 'y1', 'x', 'y'], function (x1, y1, x, y) {\n      return plus({\n        command: 'Q',\n        params: [x1, y1, x, y]\n      });\n    }),\n    smoothqcurveto: verbosify(['x', 'y'], function (x, y) {\n      return plus({\n        command: 'T',\n        params: [x, y]\n      });\n    }),\n    arc: verbosify(['rx', 'ry', 'xrot', 'largeArcFlag', 'sweepFlag', 'x', 'y'], function (rx, ry, xrot, largeArcFlag, sweepFlag, x, y) {\n      return plus({\n        command: 'A',\n        params: [rx, ry, xrot, largeArcFlag, sweepFlag, x, y]\n      });\n    }),\n    print: function print() {\n      return _instructions.map(printInstrunction).join(' ');\n    },\n    toString: function toString() {\n      return undefined.print();\n    },\n    points: function points() {\n      var ps = [];\n      var prev = [0, 0];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _instructions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var instruction = _step.value;\n\n          var p = point(instruction, prev);\n          prev = p;\n          if (p) {\n            ps.push(p);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator['return']) {\n            _iterator['return']();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return ps;\n    },\n    instructions: function instructions() {\n      return _instructions.slice(0, _instructions.length);\n    },\n    connect: function connect(path) {\n      var ps = this.points();\n      var last = ps[ps.length - 1];\n      var first = path.points()[0];\n      var newInstructions = path.instructions().slice(1);\n      if (!areEqualPoints(last, first)) {\n        newInstructions.unshift({\n          command: \"L\",\n          params: first\n        });\n      }\n      return Path(this.instructions().concat(newInstructions));\n    }\n  };\n};\n\nexports['default'] = function () {\n  return Path();\n};\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/paths-js/path.js\n// module id = 65\n// module chunks = 0","import { BaseEntity, BaseListener } from \"./BaseEntity\";\nimport { DiagramModel } from \"./models/DiagramModel\";\nimport * as _ from \"lodash\";\nimport { BaseModel, BaseModelListener } from \"./models/BaseModel\";\nimport { NodeModel } from \"./models/NodeModel\";\nimport { PointModel } from \"./models/PointModel\";\nimport { PortModel } from \"./models/PortModel\";\nimport { LinkModel } from \"./models/LinkModel\";\nimport { AbstractLabelFactory } from \"./factories/AbstractLabelFactory\";\nimport { AbstractLinkFactory } from \"./factories/AbstractLinkFactory\";\nimport { AbstractNodeFactory } from \"./factories/AbstractNodeFactory\";\nimport { AbstractPortFactory } from \"./factories/AbstractPortFactory\";\nimport { DefaultLinkFactory, DefaultNodeFactory } from \"./main\";\nimport { ROUTING_SCALING_FACTOR } from \"./routing/PathFinding\";\nimport { DefaultPortFactory } from \"./defaults/factories/DefaultPortFactory\";\nimport { LabelModel } from \"./models/LabelModel\";\nimport { DefaultLabelFactory } from \"./defaults/factories/DefaultLabelFactory\";\nimport { Toolkit } from \"./Toolkit\";\n/**\n * @author Dylan Vorster\n */\nexport interface DiagramEngineListener extends BaseListener {\n\tportFactoriesUpdated?(): void;\n\n\tnodeFactoriesUpdated?(): void;\n\n\tlinkFactoriesUpdated?(): void;\n\n\tlabelFactoriesUpdated?(): void;\n\n\trepaintCanvas?(): void;\n}\n\n/**\n * Passed as a parameter to the DiagramWidget\n */\nexport class DiagramEngine extends BaseEntity<DiagramEngineListener> {\n\tnodeFactories: { [s: string]: AbstractNodeFactory };\n\tlinkFactories: { [s: string]: AbstractLinkFactory };\n\tportFactories: { [s: string]: AbstractPortFactory };\n\tlabelFactories: { [s: string]: AbstractLabelFactory };\n\n\tdiagramModel: DiagramModel;\n\tcanvas: Element;\n\tpaintableWidgets: {};\n\tlinksThatHaveInitiallyRendered: {};\n\tnodesRendered: boolean;\n\tmaxNumberPointsPerLink: number;\n\tsmartRouting: boolean;\n\n\t// calculated only when smart routing is active\n\tcanvasMatrix: number[][] = [];\n\troutingMatrix: number[][] = [];\n\t// used when at least one element has negative coordinates\n\thAdjustmentFactor: number = 0;\n\tvAdjustmentFactor: number = 0;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.diagramModel = new DiagramModel();\n\t\tthis.nodeFactories = {};\n\t\tthis.linkFactories = {};\n\t\tthis.portFactories = {};\n\t\tthis.labelFactories = {};\n\t\tthis.canvas = null;\n\t\tthis.paintableWidgets = null;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID = 0;\n\n\t\t\t//pop it onto the window so our E2E helpers can find it\n\t\t\tif (window) {\n\t\t\t\t(window as any)[\"diagram_instance\"] = this;\n\t\t\t}\n\t\t}\n\t}\n\n\tinstallDefaultFactories() {\n\t\tthis.registerNodeFactory(new DefaultNodeFactory());\n\t\tthis.registerLinkFactory(new DefaultLinkFactory());\n\t\tthis.registerPortFactory(new DefaultPortFactory());\n\t\tthis.registerLabelFactory(new DefaultLabelFactory());\n\t}\n\n\trepaintCanvas() {\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.repaintCanvas) {\n\t\t\t\tlistener.repaintCanvas();\n\t\t\t}\n\t\t});\n\t}\n\n\tclearRepaintEntities() {\n\t\tthis.paintableWidgets = null;\n\t}\n\n\tenableRepaintEntities(entities: BaseModel<BaseEntity, BaseModelListener>[]) {\n\t\tthis.paintableWidgets = {};\n\t\tentities.forEach(entity => {\n\t\t\t//if a node is requested to repaint, add all of its links\n\t\t\tif (entity instanceof NodeModel) {\n\t\t\t\t_.forEach(entity.getPorts(), port => {\n\t\t\t\t\t_.forEach(port.getLinks(), link => {\n\t\t\t\t\t\tthis.paintableWidgets[link.getID()] = true;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (entity instanceof PointModel) {\n\t\t\t\tthis.paintableWidgets[entity.getLink().getID()] = true;\n\t\t\t}\n\n\t\t\tthis.paintableWidgets[entity.getID()] = true;\n\t\t});\n\t}\n\n\t/**\n\t * Checks to see if a model is locked by running through\n\t * its parents to see if they are locked first\n\t */\n\tisModelLocked(model: BaseEntity<BaseListener>) {\n\t\t//always check the diagram model\n\t\tif (this.diagramModel.isLocked()) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn model.isLocked();\n\t}\n\n\trecalculatePortsVisually() {\n\t\tthis.nodesRendered = false;\n\t\tthis.linksThatHaveInitiallyRendered = {};\n\t}\n\n\tcanEntityRepaint(baseModel: BaseModel<BaseEntity, BaseModelListener>) {\n\t\t//no rules applied, allow repaint\n\t\tif (this.paintableWidgets === null) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.paintableWidgets[baseModel.getID()] !== undefined;\n\t}\n\n\tsetCanvas(canvas: Element | null) {\n\t\tthis.canvas = canvas;\n\t}\n\n\tsetDiagramModel(model: DiagramModel) {\n\t\tthis.diagramModel = model;\n\t\tthis.recalculatePortsVisually();\n\t}\n\n\tgetDiagramModel(): DiagramModel {\n\t\treturn this.diagramModel;\n\t}\n\n\t//!-------------- FACTORIES ------------\n\n\tgetNodeFactories(): { [s: string]: AbstractNodeFactory } {\n\t\treturn this.nodeFactories;\n\t}\n\n\tgetLinkFactories(): { [s: string]: AbstractLinkFactory } {\n\t\treturn this.linkFactories;\n\t}\n\n\tgetLabelFactories(): { [s: string]: AbstractLabelFactory } {\n\t\treturn this.labelFactories;\n\t}\n\n\tregisterLabelFactory(factory: AbstractLabelFactory) {\n\t\tthis.labelFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.labelFactoriesUpdated) {\n\t\t\t\tlistener.labelFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterPortFactory(factory: AbstractPortFactory) {\n\t\tthis.portFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.portFactoriesUpdated) {\n\t\t\t\tlistener.portFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterNodeFactory(factory: AbstractNodeFactory) {\n\t\tthis.nodeFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.nodeFactoriesUpdated) {\n\t\t\t\tlistener.nodeFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tregisterLinkFactory(factory: AbstractLinkFactory) {\n\t\tthis.linkFactories[factory.getType()] = factory;\n\t\tthis.iterateListeners(listener => {\n\t\t\tif (listener.linkFactoriesUpdated) {\n\t\t\t\tlistener.linkFactoriesUpdated();\n\t\t\t}\n\t\t});\n\t}\n\n\tgetPortFactory(type: string): AbstractPortFactory {\n\t\tif (this.portFactories[type]) {\n\t\t\treturn this.portFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for port of type: [${type}]`);\n\t}\n\n\tgetNodeFactory(type: string): AbstractNodeFactory {\n\t\tif (this.nodeFactories[type]) {\n\t\t\treturn this.nodeFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for node of type: [${type}]`);\n\t}\n\n\tgetLinkFactory(type: string): AbstractLinkFactory {\n\t\tif (this.linkFactories[type]) {\n\t\t\treturn this.linkFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for link of type: [${type}]`);\n\t}\n\n\tgetLabelFactory(type: string): AbstractLabelFactory {\n\t\tif (this.labelFactories[type]) {\n\t\t\treturn this.labelFactories[type];\n\t\t}\n\t\tthrow new Error(`cannot find factory for label of type: [${type}]`);\n\t}\n\n\tgetFactoryForNode(node: NodeModel): AbstractNodeFactory | null {\n\t\treturn this.getNodeFactory(node.getType());\n\t}\n\n\tgetFactoryForLink(link: LinkModel): AbstractLinkFactory | null {\n\t\treturn this.getLinkFactory(link.getType());\n\t}\n\n\tgetFactoryForLabel(label: LabelModel): AbstractLabelFactory | null {\n\t\treturn this.getLabelFactory(label.getType());\n\t}\n\n\tgenerateWidgetForLink(link: LinkModel): JSX.Element | null {\n\t\tvar linkFactory = this.getFactoryForLink(link);\n\t\tif (!linkFactory) {\n\t\t\tthrow new Error(\"Cannot find link factory for link: \" + link.getType());\n\t\t}\n\t\treturn linkFactory.generateReactWidget(this, link);\n\t}\n\n\tgenerateWidgetForNode(node: NodeModel): JSX.Element | null {\n\t\tvar nodeFactory = this.getFactoryForNode(node);\n\t\tif (!nodeFactory) {\n\t\t\tthrow new Error(\"Cannot find widget factory for node: \" + node.getType());\n\t\t}\n\t\treturn nodeFactory.generateReactWidget(this, node);\n\t}\n\n\tgetRelativeMousePoint(event): { x: number; y: number } {\n\t\tvar point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn {\n\t\t\tx: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\tgetRelativePoint(x, y) {\n\t\tvar canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn { x: x - canvasRect.left, y: y - canvasRect.top };\n\t}\n\n\tgetNodeElement(node: NodeModel): Element {\n\t\tconst selector = this.canvas.querySelector(`.node[data-nodeid=\"${node.getID()}\"]`);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\"Cannot find Node element with nodeID: [\" + node.getID() + \"]\");\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetNodePortElement(port: PortModel): any {\n\t\tvar selector = this.canvas.querySelector(\n\t\t\t`.port[data-name=\"${port.getName()}\"][data-nodeid=\"${port.getParent().getID()}\"]`\n\t\t);\n\t\tif (selector === null) {\n\t\t\tthrow new Error(\n\t\t\t\t\"Cannot find Node Port element with nodeID: [\" +\n\t\t\t\t\tport.getParent().getID() +\n\t\t\t\t\t\"] and name: [\" +\n\t\t\t\t\tport.getName() +\n\t\t\t\t\t\"]\"\n\t\t\t);\n\t\t}\n\t\treturn selector;\n\t}\n\n\tgetPortCenter(port: PortModel) {\n\t\tvar sourceElement = this.getNodePortElement(port);\n\t\tvar sourceRect = sourceElement.getBoundingClientRect();\n\n\t\tvar rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\tsourceElement.offsetWidth / 2 +\n\t\t\t\t(rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\n\t\t\ty:\n\t\t\t\tsourceElement.offsetHeight / 2 +\n\t\t\t\t(rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0)\n\t\t};\n\t}\n\n\t/**\n\t * Calculate rectangular coordinates of the port passed in.\n\t */\n\tgetPortCoords(\n\t\tport: PortModel\n\t): {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t} {\n\t\tconst sourceElement = this.getNodePortElement(port);\n\t\tconst sourceRect = sourceElement.getBoundingClientRect();\n\t\tconst canvasRect = this.canvas.getBoundingClientRect() as ClientRect;\n\n\t\treturn {\n\t\t\tx:\n\t\t\t\t(sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.left,\n\t\t\ty:\n\t\t\t\t(sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0) -\n\t\t\t\tcanvasRect.top,\n\t\t\twidth: sourceRect.width,\n\t\t\theight: sourceRect.height\n\t\t};\n\t}\n\n\t/**\n\t * Determine the width and height of the node passed in.\n\t * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\n\t */\n\tgetNodeDimensions(node: NodeModel): { width: number; height: number } {\n\t\tif (!this.canvas) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\t\t}\n\n\t\tconst nodeElement = this.getNodeElement(node);\n\t\tconst nodeRect = nodeElement.getBoundingClientRect();\n\n\t\treturn {\n\t\t\twidth: nodeRect.width,\n\t\t\theight: nodeRect.height\n\t\t};\n\t}\n\n\tgetMaxNumberPointsPerLink(): number {\n\t\treturn this.maxNumberPointsPerLink;\n\t}\n\n\tsetMaxNumberPointsPerLink(max: number) {\n\t\tthis.maxNumberPointsPerLink = max;\n\t}\n\n\tisSmartRoutingEnabled() {\n\t\treturn !!this.smartRouting;\n\t}\n\tsetSmartRoutingStatus(status: boolean) {\n\t\tthis.smartRouting = status;\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * | 0 0 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all walkable points are marked by zeros.\n\t * It uses @link{#ROUTING_SCALING_FACTOR} to reduce the matrix dimensions and improve performance.\n\t */\n\tgetCanvasMatrix(): number[][] {\n\t\tif (this.canvasMatrix.length === 0) {\n\t\t\tthis.calculateCanvasMatrix();\n\t\t}\n\n\t\treturn this.canvasMatrix;\n\t}\n\tcalculateCanvasMatrix() {\n\t\tconst {\n\t\t\twidth: canvasWidth,\n\t\t\thAdjustmentFactor,\n\t\t\theight: canvasHeight,\n\t\t\tvAdjustmentFactor\n\t\t} = this.calculateMatrixDimensions();\n\n\t\tthis.hAdjustmentFactor = hAdjustmentFactor;\n\t\tthis.vAdjustmentFactor = vAdjustmentFactor;\n\n\t\tconst matrixWidth = Math.ceil(canvasWidth / ROUTING_SCALING_FACTOR);\n\t\tconst matrixHeight = Math.ceil(canvasHeight / ROUTING_SCALING_FACTOR);\n\n\t\tthis.canvasMatrix = _.range(0, matrixHeight).map(() => {\n\t\t\treturn new Array(matrixWidth).fill(0);\n\t\t});\n\t}\n\n\t/**\n\t * A representation of the canvas in the following format:\n\t *\n\t * +-----------------+\n\t * | 0 0 1 1 0 0 0 0 |\n\t * | 0 0 1 1 0 0 1 1 |\n\t * | 0 0 0 0 0 0 1 1 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * | 1 1 0 0 0 0 0 0 |\n\t * +-----------------+\n\t *\n\t * In which all points blocked by a node (and its ports) are\n\t * marked as 1; points were there is nothing (ie, free) receive 0.\n\t */\n\tgetRoutingMatrix(): number[][] {\n\t\tif (this.routingMatrix.length === 0) {\n\t\t\tthis.calculateRoutingMatrix();\n\t\t}\n\n\t\treturn this.routingMatrix;\n\t}\n\tcalculateRoutingMatrix(): void {\n\t\tconst matrix = _.cloneDeep(this.getCanvasMatrix());\n\n\t\t// nodes need to be marked as blocked points\n\t\tthis.markNodes(matrix);\n\t\t// same thing for ports\n\t\tthis.markPorts(matrix);\n\n\t\tthis.routingMatrix = matrix;\n\t}\n\n\t/**\n\t * The routing matrix does not have negative indexes, but elements could be negatively positioned.\n\t * We use the functions below to translate back and forth between these coordinates, relying on the\n\t * calculated values of hAdjustmentFactor and vAdjustmentFactor.\n\t */\n\ttranslateRoutingX(x: number, reverse: boolean = false) {\n\t\treturn x + this.hAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\ttranslateRoutingY(y: number, reverse: boolean = false) {\n\t\treturn y + this.vAdjustmentFactor * (reverse ? -1 : 1);\n\t}\n\n\t/**\n\t * Despite being a long method, we simply iterate over all three collections (nodes, ports and points)\n\t * to find the highest X and Y dimensions, so we can build the matrix large enough to contain all elements.\n\t */\n\tcalculateMatrixDimensions = (): {\n\t\twidth: number;\n\t\thAdjustmentFactor: number;\n\t\theight: number;\n\t\tvAdjustmentFactor: number;\n\t} => {\n\t\tconst allNodesCoords = _.values(this.diagramModel.nodes).map(item => ({\n\t\t\tx: item.x,\n\t\t\twidth: item.width,\n\t\t\ty: item.y,\n\t\t\theight: item.height\n\t\t}));\n\n\t\tconst allLinks = _.values(this.diagramModel.links);\n\t\tconst allPortsCoords = _.flatMap(allLinks.map(link => [link.sourcePort, link.targetPort]))\n\t\t\t.filter(port => port !== null)\n\t\t\t.map(item => ({\n\t\t\t\tx: item.x,\n\t\t\t\twidth: item.width,\n\t\t\t\ty: item.y,\n\t\t\t\theight: item.height\n\t\t\t}));\n\t\tconst allPointsCoords = _.flatMap(allLinks.map(link => link.points)).map(item => ({\n\t\t\t// points don't have width/height, so let's just use 0\n\t\t\tx: item.x,\n\t\t\twidth: 0,\n\t\t\ty: item.y,\n\t\t\theight: 0\n\t\t}));\n\n\t\tconst canvas = this.canvas as HTMLDivElement;\n\t\tconst minX =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.x).x, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxXElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.x + item.width\n\t\t);\n\t\tconst maxX = Math.max(maxXElement.x + maxXElement.width, canvas.offsetWidth);\n\n\t\tconst minY =\n\t\t\tMath.floor(\n\t\t\t\tMath.min(_.minBy(_.concat(allNodesCoords, allPortsCoords, allPointsCoords), item => item.y).y, 0) /\n\t\t\t\t\tROUTING_SCALING_FACTOR\n\t\t\t) * ROUTING_SCALING_FACTOR;\n\t\tconst maxYElement = _.maxBy(\n\t\t\t_.concat(allNodesCoords, allPortsCoords, allPointsCoords),\n\t\t\titem => item.y + item.height\n\t\t);\n\t\tconst maxY = Math.max(maxYElement.y + maxYElement.height, canvas.offsetHeight);\n\n\t\treturn {\n\t\t\twidth: Math.ceil(Math.abs(minX) + maxX),\n\t\t\thAdjustmentFactor: Math.abs(minX) / ROUTING_SCALING_FACTOR + 1,\n\t\t\theight: Math.ceil(Math.abs(minY) + maxY),\n\t\t\tvAdjustmentFactor: Math.abs(minY) / ROUTING_SCALING_FACTOR + 1\n\t\t};\n\t};\n\n\t/**\n\t * Updates (by reference) where nodes will be drawn on the matrix passed in.\n\t */\n\tmarkNodes = (matrix: number[][]): void => {\n\t\t_.values(this.diagramModel.nodes).forEach(node => {\n\t\t\tconst startX = Math.floor(node.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((node.x + node.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(node.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((node.y + node.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t/**\n\t * Updates (by reference) where ports will be drawn on the matrix passed in.\n\t */\n\tmarkPorts = (matrix: number[][]): void => {\n\t\tconst allElements = _.flatMap(\n\t\t\t_.values(this.diagramModel.links).map(link => [].concat(link.sourcePort, link.targetPort))\n\t\t);\n\t\tallElements.filter(port => port !== null).forEach(port => {\n\t\t\tconst startX = Math.floor(port.x / ROUTING_SCALING_FACTOR);\n\t\t\tconst endX = Math.ceil((port.x + port.width) / ROUTING_SCALING_FACTOR);\n\t\t\tconst startY = Math.floor(port.y / ROUTING_SCALING_FACTOR);\n\t\t\tconst endY = Math.ceil((port.y + port.height) / ROUTING_SCALING_FACTOR);\n\n\t\t\tfor (let x = startX - 1; x <= endX + 1; x++) {\n\t\t\t\tfor (let y = startY - 1; y < endY + 1; y++) {\n\t\t\t\t\tthis.markMatrixPoint(matrix, this.translateRoutingX(x), this.translateRoutingY(y));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tmarkMatrixPoint = (matrix: number[][], x: number, y: number) => {\n\t\tif (matrix[y] !== undefined && matrix[y][x] !== undefined) {\n\t\t\tmatrix[y][x] = 1;\n\t\t}\n\t};\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.diagramModel.setZoomLevel(this.diagramModel.getZoomLevel() * zoomFactor);\n\t\tthis.diagramModel.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/DiagramEngine.ts","import * as React from \"react\";\nimport { DefaultLinkWidget } from \"../widgets/DefaultLinkWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractLinkFactory } from \"../../factories/AbstractLinkFactory\";\nimport { DefaultLinkModel } from \"../models/DefaultLinkModel\";\n\n/**\n * @author Dylan Vorster\n */\nexport class DefaultLinkFactory extends AbstractLinkFactory<DefaultLinkModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, link: DefaultLinkModel): JSX.Element {\n\t\treturn React.createElement(DefaultLinkWidget, {\n\t\t\tlink: link,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultLinkModel {\n\t\treturn new DefaultLinkModel();\n\t}\n\n\tgenerateLinkSegment(model: DefaultLinkModel, widget: DefaultLinkWidget, selected: boolean, path: string) {\n\t\treturn (\n\t\t\t<path\n\t\t\t\tclassName={selected ? widget.bem(\"--path-selected\") : \"\"}\n\t\t\t\tstrokeWidth={model.width}\n\t\t\t\tstroke={model.color}\n\t\t\t\td={path}\n\t\t\t/>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/factories/DefaultLinkFactory.tsx","import { DefaultNodeModel } from \"../models/DefaultNodeModel\";\nimport * as React from \"react\";\nimport { DefaultNodeWidget } from \"../widgets/DefaultNodeWidget\";\nimport { DiagramEngine } from \"../../DiagramEngine\";\nimport { AbstractNodeFactory } from \"../../factories/AbstractNodeFactory\";\n/**\n * @author Dylan Vorster\n */\nexport class DefaultNodeFactory extends AbstractNodeFactory<DefaultNodeModel> {\n\tconstructor() {\n\t\tsuper(\"default\");\n\t}\n\n\tgenerateReactWidget(diagramEngine: DiagramEngine, node: DefaultNodeModel): JSX.Element {\n\t\treturn React.createElement(DefaultNodeWidget, {\n\t\t\tnode: node,\n\t\t\tdiagramEngine: diagramEngine\n\t\t});\n\t}\n\n\tgetNewInstance(initialConfig?: any): DefaultNodeModel {\n\t\treturn new DefaultNodeModel();\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults/factories/DefaultNodeFactory.ts","import * as React from \"react\";\nimport { DiagramEngine } from \"../DiagramEngine\";\nimport * as _ from \"lodash\";\nimport { LinkLayerWidget } from \"./layers/LinkLayerWidget\";\nimport { NodeLayerWidget } from \"./layers/NodeLayerWidget\";\nimport { Toolkit } from \"../Toolkit\";\nimport { BaseAction } from \"../actions/BaseAction\";\nimport { MoveCanvasAction } from \"../actions/MoveCanvasAction\";\nimport { MoveItemsAction } from \"../actions/MoveItemsAction\";\nimport { SelectingAction } from \"../actions/SelectingAction\";\nimport { NodeModel } from \"../models/NodeModel\";\nimport { PointModel } from \"../models/PointModel\";\nimport { PortModel } from \"../models/PortModel\";\nimport { LinkModel } from \"../models/LinkModel\";\nimport { SelectionModel } from \"../models/SelectionModel\";\nimport { BaseModel, BaseModelListener } from \"../models/BaseModel\";\nimport { BaseEntity } from \"../BaseEntity\";\nimport { BaseWidget, BaseWidgetProps } from \"./BaseWidget\";\n\nexport interface DiagramProps extends BaseWidgetProps {\n\tdiagramEngine: DiagramEngine;\n\n\tallowLooseLinks?: boolean;\n\tallowCanvasTranslation?: boolean;\n\tallowCanvasZoom?: boolean;\n\tinverseZoom?: boolean;\n\tmaxNumberPointsPerLink?: number;\n\tsmartRouting?: boolean;\n\n\tactionStartedFiring?: (action: BaseAction) => boolean;\n\tactionStillFiring?: (action: BaseAction) => void;\n\tactionStoppedFiring?: (action: BaseAction) => void;\n\n\tdeleteKeys?: number[];\n}\n\nexport interface DiagramState {\n\taction: BaseAction | null;\n\twasMoved: boolean;\n\trenderedNodes: boolean;\n\twindowListener: any;\n\tdiagramEngineListener: any;\n\tdocument: any;\n}\n\n/**\n * @author Dylan Vorster\n */\nexport class DiagramWidget extends BaseWidget<DiagramProps, DiagramState> {\n\tpublic static defaultProps: DiagramProps = {\n\t\tdiagramEngine: null,\n\t\tallowLooseLinks: true,\n\t\tallowCanvasTranslation: true,\n\t\tallowCanvasZoom: true,\n\t\tinverseZoom: false,\n\t\tmaxNumberPointsPerLink: Infinity, // backwards compatible default\n\t\tsmartRouting: false,\n\t\tdeleteKeys: [46, 8]\n\t};\n\n\tonKeyUpPointer: (this: Window, ev: KeyboardEvent) => void = null;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(\"srd-diagram\", props);\n\t\tthis.onMouseMove = this.onMouseMove.bind(this);\n\t\tthis.onMouseUp = this.onMouseUp.bind(this);\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\twasMoved: false,\n\t\t\trenderedNodes: false,\n\t\t\twindowListener: null,\n\t\t\tdiagramEngineListener: null,\n\t\t\tdocument: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\tthis.props.diagramEngine.setCanvas(null);\n\t\twindow.removeEventListener(\"keyup\", this.onKeyUpPointer);\n\t\twindow.removeEventListener(\"mouseUp\", this.onMouseUp);\n\t\twindow.removeEventListener(\"mouseMove\", this.onMouseMove);\n\t}\n\n\tcomponentWillReceiveProps(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine !== nextProps.diagramEngine) {\n\t\t\tthis.props.diagramEngine.removeListener(this.state.diagramEngineListener);\n\t\t\tconst diagramEngineListener = nextProps.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => this.forceUpdate()\n\t\t\t});\n\t\t\tthis.setState({ diagramEngineListener });\n\t\t}\n\t}\n\n\tcomponentWillUpdate(nextProps: DiagramProps) {\n\t\tif (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t\tif (!nextProps.diagramEngine.diagramModel.rendered) {\n\t\t\tthis.setState({ renderedNodes: false });\n\t\t\tnextProps.diagramEngine.diagramModel.rendered = true;\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (!this.state.renderedNodes) {\n\t\t\tthis.setState({\n\t\t\t\trenderedNodes: true\n\t\t\t});\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onKeyUpPointer = this.onKeyUp.bind(this);\n\n\t\t//add a keyboard listener\n\t\tthis.setState({\n\t\t\tdocument: document,\n\t\t\trenderedNodes: true,\n\t\t\tdiagramEngineListener: this.props.diagramEngine.addListener({\n\t\t\t\trepaintCanvas: () => {\n\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\twindow.addEventListener(\"keyup\", this.onKeyUpPointer, false);\n\n\t\t// dont focus the window when in test mode - jsdom fails\n\t\tif (process.env.NODE_ENV !== \"test\") {\n\t\t\twindow.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Gets a model and element under the mouse cursor\n\t */\n\tgetMouseElement(event): { model: BaseModel<BaseEntity, BaseModelListener>; element: Element } {\n\t\tvar target = event.target as Element;\n\t\tvar diagramModel = this.props.diagramEngine.diagramModel;\n\n\t\t//is it a port\n\t\tvar element = Toolkit.closest(target, \".port[data-name]\");\n\t\tif (element) {\n\t\t\tvar nodeElement = Toolkit.closest(target, \".node[data-nodeid]\") as HTMLElement;\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getNode(nodeElement.getAttribute(\"data-nodeid\"))\n\t\t\t\t\t.getPort(element.getAttribute(\"data-name\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a point\n\t\telement = Toolkit.closest(target, \".point[data-id]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel\n\t\t\t\t\t.getLink(element.getAttribute(\"data-linkid\"))\n\t\t\t\t\t.getPointModel(element.getAttribute(\"data-id\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a link\n\t\telement = Toolkit.closest(target, \"[data-linkid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getLink(element.getAttribute(\"data-linkid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\t//look for a node\n\t\telement = Toolkit.closest(target, \".node[data-nodeid]\");\n\t\tif (element) {\n\t\t\treturn {\n\t\t\t\tmodel: diagramModel.getNode(element.getAttribute(\"data-nodeid\")),\n\t\t\t\telement: element\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfireAction() {\n\t\tif (this.state.action && this.props.actionStillFiring) {\n\t\t\tthis.props.actionStillFiring(this.state.action);\n\t\t}\n\t}\n\n\tstopFiringAction(shouldSkipEvent?: boolean) {\n\t\tif (this.props.actionStoppedFiring && !shouldSkipEvent) {\n\t\t\tthis.props.actionStoppedFiring(this.state.action);\n\t\t}\n\t\tthis.setState({ action: null });\n\t}\n\n\tstartFiringAction(action: BaseAction) {\n\t\tvar setState = true;\n\t\tif (this.props.actionStartedFiring) {\n\t\t\tsetState = this.props.actionStartedFiring(action);\n\t\t}\n\t\tif (setState) {\n\t\t\tthis.setState({ action: action });\n\t\t}\n\t}\n\n\tonMouseMove(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\t\t//select items so draw a bounding box\n\t\tif (this.state.action instanceof SelectingAction) {\n\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\n\t\t\t_.forEach(diagramModel.getNodes(), node => {\n\t\t\t\tif ((this.state.action as SelectingAction).containsElement(node.x, node.y, diagramModel)) {\n\t\t\t\t\tnode.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t_.forEach(diagramModel.getLinks(), link => {\n\t\t\t\tvar allSelected = true;\n\t\t\t\t_.forEach(link.points, point => {\n\t\t\t\t\tif ((this.state.action as SelectingAction).containsElement(point.x, point.y, diagramModel)) {\n\t\t\t\t\t\tpoint.setSelected(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallSelected = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (allSelected) {\n\t\t\t\t\tlink.setSelected(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.state.action.mouseX2 = relative.x;\n\t\t\tthis.state.action.mouseY2 = relative.y;\n\n\t\t\tthis.fireAction();\n\t\t\tthis.setState({ action: this.state.action });\n\t\t\treturn;\n\t\t} else if (this.state.action instanceof MoveItemsAction) {\n\t\t\tlet amountX = event.clientX - this.state.action.mouseX;\n\t\t\tlet amountY = event.clientY - this.state.action.mouseY;\n\t\t\tlet amountZoom = diagramModel.getZoomLevel() / 100;\n\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t// in this case we need to also work out the relative grid position\n\t\t\t\tif (\n\t\t\t\t\tmodel.model instanceof NodeModel ||\n\t\t\t\t\t(model.model instanceof PointModel && !model.model.isConnectedToPort())\n\t\t\t\t) {\n\t\t\t\t\tmodel.model.x = diagramModel.getGridPosition(model.initialX + amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = diagramModel.getGridPosition(model.initialY + amountY / amountZoom);\n\n\t\t\t\t\t// update port coordinates as well\n\t\t\t\t\tif (model.model instanceof NodeModel) {\n\t\t\t\t\t\t_.forEach(model.model.getPorts(), port => {\n\t\t\t\t\t\t\tconst portCoords = this.props.diagramEngine.getPortCoords(port);\n\t\t\t\t\t\t\tport.updateCoords(portCoords);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\t\t\tdiagramEngine.calculateRoutingMatrix();\n\t\t\t\t\t}\n\t\t\t\t} else if (model.model instanceof PointModel) {\n\t\t\t\t\t// we want points that are connected to ports, to not neccesarilly snap to grid\n\t\t\t\t\t// this stuff needs to be pixel perfect, dont touch it\n\t\t\t\t\tmodel.model.x = model.initialX + diagramModel.getGridPosition(amountX / amountZoom);\n\t\t\t\t\tmodel.model.y = model.initialY + diagramModel.getGridPosition(amountY / amountZoom);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (diagramEngine.isSmartRoutingEnabled()) {\n\t\t\t\tdiagramEngine.calculateCanvasMatrix();\n\t\t\t}\n\n\t\t\tthis.fireAction();\n\t\t\tif (!this.state.wasMoved) {\n\t\t\t\tthis.setState({ wasMoved: true });\n\t\t\t} else {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t} else if (this.state.action instanceof MoveCanvasAction) {\n\t\t\t//translate the actual canvas\n\t\t\tif (this.props.allowCanvasTranslation) {\n\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\tthis.state.action.initialOffsetX + (event.clientX - this.state.action.mouseX),\n\t\t\t\t\tthis.state.action.initialOffsetY + (event.clientY - this.state.action.mouseY)\n\t\t\t\t);\n\t\t\t\tthis.fireAction();\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t}\n\t}\n\n\tonKeyUp(event) {\n\t\t//delete all selected\n\t\tif (this.props.deleteKeys.indexOf(event.keyCode) !== -1) {\n\t\t\t_.forEach(this.props.diagramEngine.getDiagramModel().getSelectedItems(), element => {\n\t\t\t\t//only delete items which are not locked\n\t\t\t\tif (!this.props.diagramEngine.isModelLocked(element)) {\n\t\t\t\t\telement.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.forceUpdate();\n\t\t}\n\t}\n\n\tonMouseUp(event) {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\t//are we going to connect a link to something?\n\t\tif (this.state.action instanceof MoveItemsAction) {\n\t\t\tvar element = this.getMouseElement(event);\n\t\t\tvar linkConnected = false;\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (element && element.model instanceof PortModel && !diagramEngine.isModelLocked(element.model)) {\n\t\t\t\t\tlinkConnected = true;\n\t\t\t\t\tlet link = model.model.getLink();\n\t\t\t\t\tif (link.getTargetPort() !== null) {\n\t\t\t\t\t\t//if this was a valid link already and we are adding a node in the middle, create 2 links from the original\n\t\t\t\t\t\tif (link.getTargetPort() !== element.model && link.getSourcePort() !== element.model) {\n\t\t\t\t\t\t\tconst targetPort = link.getTargetPort();\n\t\t\t\t\t\t\tlet newLink = link.clone({});\n\t\t\t\t\t\t\tnewLink.setSourcePort(element.model);\n\t\t\t\t\t\t\tnewLink.setTargetPort(targetPort);\n\t\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t\t\ttargetPort.removeLink(link);\n\t\t\t\t\t\t\tnewLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t\tdiagramEngine.getDiagramModel().addLink(newLink);\n\t\t\t\t\t\t\t//if we are connecting to the same target or source, remove tweener points\n\t\t\t\t\t\t} else if (link.getTargetPort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsAfter(model.model);\n\t\t\t\t\t\t} else if (link.getSourcePort() === element.model) {\n\t\t\t\t\t\t\tlink.removePointsBefore(model.model);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlink.setTargetPort(element.model);\n\t\t\t\t\t}\n\t\t\t\t\tdelete this.props.diagramEngine.linksThatHaveInitiallyRendered[link.getID()];\n\t\t\t\t}\n\t\t\t\t//if we moved a NodeModel and allowLooseLinks is false, we know that any links involved were valid\n\t\t\t\tif ((!this.props.allowLooseLinks && element.model instanceof NodeModel) || !this.state.wasMoved) {\n\t\t\t\t\tlinkConnected = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t//do we want to allow loose links on the diagram model or not\n\t\t\tif (!linkConnected && !this.props.allowLooseLinks) {\n\t\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t\t//only care about points connecting to things\n\t\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar link = model.model.getLink();\n\t\t\t\t\tif (link.isLastPoint(model.model)) {\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//remove any invalid links\n\t\t\t_.forEach(this.state.action.selectionModels, model => {\n\t\t\t\t//only care about points connecting to things\n\t\t\t\tif (!(model.model instanceof PointModel)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar link = model.model.getLink();\n\t\t\t\tvar sourcePort: PortModel = link.getSourcePort();\n\t\t\t\tvar targetPort: PortModel = link.getTargetPort();\n\t\t\t\tif (sourcePort !== null && targetPort !== null) {\n\t\t\t\t\tif (!sourcePort.canLinkToPort(targetPort)) {\n\t\t\t\t\t\t//link not allowed\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t_.some(\n\t\t\t\t\t\t\t_.values(targetPort.getLinks()),\n\t\t\t\t\t\t\t(l: LinkModel) =>\n\t\t\t\t\t\t\t\tl !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort)\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\t//link is a duplicate\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction(!this.state.wasMoved);\n\t\t} else {\n\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\tthis.stopFiringAction();\n\t\t}\n\t\tthis.state.document.removeEventListener(\"mousemove\", this.onMouseMove);\n\t\tthis.state.document.removeEventListener(\"mouseup\", this.onMouseUp);\n\t}\n\n\tdrawSelectionBox() {\n\t\tlet dimensions = (this.state.action as SelectingAction).getBoxDimensions();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={this.bem(\"__selector\")}\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: dimensions.top,\n\t\t\t\t\tleft: dimensions.left,\n\t\t\t\t\twidth: dimensions.width,\n\t\t\t\t\theight: dimensions.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tvar diagramEngine = this.props.diagramEngine;\n\t\tdiagramEngine.setMaxNumberPointsPerLink(this.props.maxNumberPointsPerLink);\n\t\tdiagramEngine.setSmartRoutingStatus(this.props.smartRouting);\n\t\tvar diagramModel = diagramEngine.getDiagramModel();\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\t{...this.getProps()}\n\t\t\t\tref={ref => {\n\t\t\t\t\tif (ref) {\n\t\t\t\t\t\tthis.props.diagramEngine.setCanvas(ref);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={event => {\n\t\t\t\t\tif (this.props.allowCanvasZoom) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\tconst oldZoomFactor = diagramModel.getZoomLevel() / 100;\n\t\t\t\t\t\tlet scrollDelta = this.props.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t\t\t//check if it is pinch gesture\n\t\t\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t\t\t/*Chrome and Firefox sends wheel event with deltaY that\n                have fractional part, also `ctrlKey` prop of the event is true\n                though ctrl isn't pressed\n              */\n\t\t\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (diagramModel.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\t\t\tdiagramModel.setZoomLevel(diagramModel.getZoomLevel() + scrollDelta);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst zoomFactor = diagramModel.getZoomLevel() / 100;\n\n\t\t\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t\t\t// compute width and height increment factor\n\t\t\t\t\t\tconst xFactor = (clientX - diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\t\t\tconst yFactor = (clientY - diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\t\t\tdiagramModel.setOffset(\n\t\t\t\t\t\t\tdiagramModel.getOffsetX() - widthDiff * xFactor,\n\t\t\t\t\t\t\tdiagramModel.getOffsetY() - heightDiff * yFactor\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdiagramEngine.enableRepaintEntities([]);\n\t\t\t\t\t\tthis.forceUpdate();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseDown={event => {\n\t\t\t\t\tthis.setState({ ...this.state, wasMoved: false });\n\n\t\t\t\t\tdiagramEngine.clearRepaintEntities();\n\t\t\t\t\tvar model = this.getMouseElement(event);\n\t\t\t\t\t//the canvas was selected\n\t\t\t\t\tif (model === null) {\n\t\t\t\t\t\t//is it a multiple selection\n\t\t\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativePoint(event.clientX, event.clientY);\n\t\t\t\t\t\t\tthis.startFiringAction(new SelectingAction(relative.x, relative.y));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//its a drag the canvas event\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\tthis.startFiringAction(new MoveCanvasAction(event.clientX, event.clientY, diagramModel));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (model.model instanceof PortModel) {\n\t\t\t\t\t\t//its a port element, we want to drag a link\n\t\t\t\t\t\tif (!this.props.diagramEngine.isModelLocked(model.model)) {\n\t\t\t\t\t\t\tvar relative = diagramEngine.getRelativeMousePoint(event);\n\t\t\t\t\t\t\tvar sourcePort = model.model;\n\t\t\t\t\t\t\tvar link = sourcePort.createLinkModel();\n\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\n\t\t\t\t\t\t\tif (link) {\n\t\t\t\t\t\t\t\tlink.removeMiddlePoints();\n\t\t\t\t\t\t\t\tif (link.getSourcePort() !== sourcePort) {\n\t\t\t\t\t\t\t\t\tlink.setSourcePort(sourcePort);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlink.setTargetPort(null);\n\n\t\t\t\t\t\t\t\tlink.getFirstPoint().updateLocation(relative);\n\t\t\t\t\t\t\t\tlink.getLastPoint().updateLocation(relative);\n\n\t\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t\t\tlink.getLastPoint().setSelected(true);\n\t\t\t\t\t\t\t\tdiagramModel.addLink(link);\n\n\t\t\t\t\t\t\t\tthis.startFiringAction(\n\t\t\t\t\t\t\t\t\tnew MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//its some or other element, probably want to move it\n\t\t\t\t\t\tif (!event.shiftKey && !model.model.isSelected()) {\n\t\t\t\t\t\t\tdiagramModel.clearSelection();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmodel.model.setSelected(true);\n\n\t\t\t\t\t\tthis.startFiringAction(new MoveItemsAction(event.clientX, event.clientY, diagramEngine));\n\t\t\t\t\t}\n\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.state.renderedNodes && (\n\t\t\t\t\t<LinkLayerWidget\n\t\t\t\t\t\tdiagramEngine={diagramEngine}\n\t\t\t\t\t\tpointAdded={(point: PointModel, event) => {\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mousemove\", this.onMouseMove);\n\t\t\t\t\t\t\tthis.state.document.addEventListener(\"mouseup\", this.onMouseUp);\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\tdiagramModel.clearSelection(point);\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\taction: new MoveItemsAction(event.clientX, event.clientY, diagramEngine)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<NodeLayerWidget diagramEngine={diagramEngine} />\n\t\t\t\t{this.state.action instanceof SelectingAction && this.drawSelectionBox()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/widgets/DiagramWidget.tsx"],"sourceRoot":""}